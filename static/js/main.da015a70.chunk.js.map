{"version":3,"sources":["serviceWorker.js","components/IFrame.ts","sections/names/Names.tsx","sections/questions/Questions.tsx","sections/factions/utils/uw.ts","sections/factions/utils/arr.ts","sections/factions/Factions.tsx","sections/items/utils/uw.ts","sections/items/Items.tsx","sections/markets/utils/uw-markets.ts","sections/markets/Markets.tsx","sections/worlds/utils/sf-flora.ts","sections/worlds/utils/sf-sentients.ts","sections/worlds/utils/sf-fauna.ts","sections/worlds/utils/sf-biomes.ts","sections/worlds/utils/sf-poi.ts","sections/worlds/utils/sf-planets.ts","sections/worlds/Flora.tsx","sections/worlds/Fauna.tsx","sections/worlds/Biome.tsx","sections/worlds/Worlds.tsx","sections/events/utils/dnd-events.ts","sections/events/Events.tsx","sections/worlds/Creatures.tsx","sections/settlement/utils/dnd-settlements.ts","sections/settlement/Settlements.tsx","sections/quests/utils/dnd-quests.ts","sections/quests/Quests.tsx","sections/characters/utils/dnd.ts","sections/characters/utils/uw-arch.ts","sections/characters/utils/uw-full.ts","sections/characters/Characters.tsx","sections/mods/utils/uw.ts","sections/mods/Mods.tsx","sections/vessels/utils/uw.ts","sections/vessels/Vessels.tsx","sections/skills/Skills.tsx","App.tsx","Router.tsx","index.js"],"names":["Boolean","window","location","hostname","match","styled","iframe","Names","Button","variant","color","size","onClick","open","questionsTable","CheckboxesGroup","useState","Alex","Devon","Talicia","JaMile","TRX","Joe","Noodles","playersPresent","setPlayersPresent","questionResults","setQuestionResults","handleChange","event","target","name","checked","genLabel","question","FormControl","component","FormGroup","FormControlLabel","onChange","control","Checkbox","label","result","Object","keys","forEach","player","sample","traits","factions","Factions","generatedFaction","setGeneratedFaction","generatedHomebrewFaction","setHomebrewGeneratedFaction","itemTraits","melee","tags","description","firearm","types","heavy","explosive","artillery","attire","type","landVehicle","flyer","crew","beast","generateItemTraits","itemType","itemClass","itemTypes","switching","classLevel","random","sampleSize","some","generateMeleeWeapon","design","generateFirearm","generateHeavyWeapon","generateExplosive","generateArtillery","generateAttire","tool","t","undefined","generateLandVehicle","generateFlyer","armed","generateCrew","locomotion","weapon","generateBeast","Controls","div","TagContainer","Items","generatedItem","setGeneratedItem","selectedItemType","setSelectedItemType","selectedItemClass","setSelectedItemClass","Grid","container","justify","spacing","item","xs","sm","md","fullWidth","InputLabel","id","Select","labelId","value","MenuItem","map","key","uniqueId","startCase","alignItems","tag1","tag2","deadly","marketsTable","ButtonContainer","Container","StyledModal","Markets","generatedMarket","setGeneratedMarket","modalVisible","setModalVisible","handleClose","generateNewMarket","Modal","onClose","aria-labelledby","aria-describedby","m","amountOfFloraTable","varietyOfFloraTable","typeOfFloraTable","floraSizeTable","relativeAmountTable","threatTable","floraQuirkTable","generateFloraBiome","amount","typeCount","floraTypes","times","quirk","relativeAmount","threat","getTechLevel","dRoll","attitudesTable","valuesTable","leadershipTable","unityTable","religionTable","architectureTable","artTable","themeTable","getTheme","generateSentient","values","architecture","unity","theme","attitude","techLevel","leadership","religion","art","faunaAmountTable","faunaVarietyTable","generateFaunaSubType","faunaSizeTable","relativeAmoutTable","faunaThreatTable","faunaTemperamentTable","groupingTable","locomotionTable","quirkTable","generateFaunaType","isSentient","isCreature","quirkString","join","grouping","temperament","sentientDetails","generateNFaunaTypes","count","generateFaunaBiome","basicFaunaTypes","sentientFaunaTypes","variety","sentientCount","generateSentientCount","basicFaunaCount","basicsTables","surfaceTypes","undergroundTypes","heat","modifier","generateBiomeBasics","biomeClass","modIdx","flora","fauna","pointsOfInterestTable","genPOI","planetTables","generatePlanet","temperature","atmosphere","gravity","surfaceBiomeCount","undergroundBiomeCount","pointOfInterest","FloraView","relativeAmountSymbol","SentientSection","FaunaView","style","marginBottom","BiomeContainer","BiomeView","biomeData","floraType","Flora","Divider","faunaType","Fauna","section","Worlds","generatedPlanet","setGeneratedPlanet","surfaceBiomes","setSurfaceBiomes","undergroundBiomes","setUndergroundBiomes","useEffect","GeneratedComponent","biome","Biome","text","document","getElementById","selection","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","eventsTable","subTable","generateEvent","eventType","subType","Events","generatedEvent","setGeneratedEvent","Creatures","generatedCreature","setGeneratedCreature","settlementTables","generateSettlement","raceRelation","rulerStatus","notableTrait","knownFor","calamity","Settlements","generatedSettlement","setGeneratedSettlement","goalsTable","villainsTable","goal","subGoals","method","subMethod","generateQuest","generateVillain","subGoal","Quests","generatedQuest","setGeneratedQuest","generatedVillain","setGeneratedVillain","classesTable","alignmentX","alignmentY","generateDNDChar","alignment","originsTable","careersTable","generateArchetype","skillsTable","education","iconName","chemistry","surgery","deduction","technobabble","stealth","sabotage","assassination","surveillance","interrogation","outfit","marketing","acumen","luxury","bribe","reconnaissance","survival","recklessness","repair","construction","tinker","upgrade","dismantle","tactics","toughness","authority","fame","contacts","inspiration","diplomacy","criminal","scapegoat","addict","weightlessness","cosmopolitan","navigation","calibrations","upload","hijack","program","network","branded","resourceful","affable","scrappy","decorum","vocation","discipline","harder","better","faster","technologic","stronger","pact","relic","wisdom","inscribe","trinkets","linguist","advise","adaptive","mediate","bravery","nemesis","terrify","obsession","martyr","telekinesis","launch","animate","barrier","flight","telepathy","probe","precognition","compel","clairvoyance","teleport","regeneration","alchemy","evoke","transform","insolence","ritual","strength","abnegation","tranquility","procognition","generateSkill","skillKey","Characters","generatedUWArchetype","setGeneratedUWArchetype","generatedDNDArchetype","setGeneratedDNDArchetype","classTable","class","generateMod","extra","mod","Mods","generatedMod","setGeneratedMod","formTable","upgradeTable","generateVessel","tier","vClass","upgrades","u","form","Upgrades","Vessels","generatedVessel","setGeneratedVessel","replace","toString","SkillBox","Skills","generatedSkill","setGeneratedSkill","TabPanel","props","children","index","other","role","hidden","TABS","App","history","useHistory","defaultTabIndex","findIndex","pathname","activeTabIndex","setActiveTabIndex","console","log","className","AppBar","position","Tabs","newValue","push","scrollButtons","aria-label","idx","Tab","axis","onChangeIndex","Router","basename","process","path","exact","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8LAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6KChBgBC,IAAOC,OAAV,KAAZ,I,SCyCQC,EA/BG,WAChB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,MAAM,YACNC,KAAK,SACLC,QAAS,kBACPX,OAAOY,KAAK,oCAAqC,YALrD,kBADF,IAYE,kBAACL,EAAA,EAAD,CACEC,QAAQ,OACRC,MAAM,YACNC,KAAK,SACLC,QAAS,kBACPX,OAAOY,KACL,6DACA,YAPN,iB,2DClBAC,EAAiB,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAEzC,SAASC,IAAmB,IAAD,EACIC,mBAAc,CACxDC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,KAAK,EACLC,SAAS,IAR6B,mBACjCC,EADiC,KACjBC,EADiB,OAUMT,mBAAc,IAVpB,mBAUjCU,EAViC,KAUhBC,EAVgB,KAoBlCC,EAAe,SAACC,GACpBJ,EAAkB,eACbD,EADY,eAEdK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,YAIhCC,EAAW,SAACF,EAAcG,GAC9B,OAAKA,EAGG,GAAN,OAAUH,EAAV,eAAqBG,GAFdH,GAKX,OACE,oCACE,6BACE,kBAACI,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEN,QAASR,EAAeP,KACxBsB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,OACLW,MAAOT,EAAS,OAAQP,EAAgBT,QAE1C,kBAACqB,EAAA,EAAD,CACEN,QAASR,EAAeN,MACxBqB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,QACLW,MAAOT,EAAS,QAASP,EAAgBR,SAE3C,kBAACoB,EAAA,EAAD,CACEN,QAASR,EAAeL,QACxBoB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,UACLW,MAAOT,EAAS,UAAWP,EAAgBP,WAE7C,kBAACmB,EAAA,EAAD,CACEN,QAASR,EAAeH,IACxBkB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,MACLW,MAAOT,EAAS,MAAOP,EAAgBL,OAEzC,kBAACiB,EAAA,EAAD,CACEN,QAASR,EAAeD,QACxBgB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,UACLW,MAAOT,EAAS,UAAWP,EAAgBH,WAE7C,kBAACe,EAAA,EAAD,CACEN,QAASR,EAAeJ,OACxBmB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,SACLW,MAAOT,EAAS,SAAUP,EAAgBN,UAE5C,kBAACkB,EAAA,EAAD,CACEN,QAASR,EAAeF,IACxBkB,QAAS,kBAACC,EAAA,EAAD,MACTF,SAAUX,EACVG,KAAK,MACLW,MAAOT,EAAS,MAAOP,EAAgBJ,UAK/C,kBAACd,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,QAhFtB,WACxB,IAAM+B,EAAS,GACfC,OAAOC,KAAKrB,GAAgBsB,SAAQ,SAACC,GAC/BvB,EAAeuB,KACjBJ,EAAOI,GAAUC,iBAAOlC,OAG5Ba,EAAmBgB,KAyEjB,uBCnGC,IAAMM,EAAS,CACpB,CACE,CAAC,WAAY,cAAe,YAAa,UAAW,YAAa,WACjE,CAAC,UAAW,YAAa,UAAW,aAAc,UAAW,cAC7D,CAAC,SAAU,cAAe,UAAW,aAAc,UAAW,UAEhE,CACE,CACE,eACA,aACA,gBACA,aACA,QACA,aAEF,CACE,WACA,cACA,WACA,WACA,YACA,cAEF,CACE,QACA,YACA,aACA,YACA,aACA,cAGJ,CACE,CAAC,aAAc,OAAQ,QAAS,UAAW,cAAe,cAC1D,CAAC,UAAW,YAAa,SAAU,UAAW,aAAc,YAC5D,CAAC,SAAU,WAAY,SAAU,SAAU,WAAY,YCnCrDC,EAAW,CACf,eACA,OACA,cACA,eACA,cACA,UACA,YACA,YACA,QACA,QACA,YACA,MACA,WACA,WACA,eACA,SCqBaC,EAnCM,WAAO,IAAD,EACuBnC,qBADvB,mBAClBoC,EADkB,KACAC,EADA,OAOuCrC,qBAPvC,mBAOlBsC,EAPkB,KAOQC,EAPR,KAazB,OACE,iCACGH,GACC,4BACGA,EAAiB,GADpB,MAC2BA,EAAiB,GAD5C,MACmDA,EAAiB,IAGtE,kBAAC5C,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,QAhBrB,WACzByC,EFqCK,CAJYL,iBAAOA,iBAAOC,EAAO,KACrBD,iBAAOA,iBAAOC,EAAO,KACrBD,iBAAOA,iBAAOC,EAAO,SEpBpC,oBAGA,4BAAKK,GACL,kBAAC9C,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNE,QAjB6B,WACjC2C,EDkBKP,iBAAOE,MCLV,+BC4COM,EAAyB,CACpCC,MAAO,CACLC,KAAM,CACJ,CACE3B,KAAM,cACN4B,YACE,oEAEJ,CACEA,YAAa,4CACb5B,KAAM,aAER,CACE4B,YACE,wEACF5B,KAAM,cAER,CACE4B,YACE,gFACF5B,KAAM,aAER,CACE4B,YACE,8EACF5B,KAAM,UAER,CACE4B,YACE,uEACF5B,KAAM,UAER,CACE4B,YAAa,gDACb5B,KAAM,WAER,CACE4B,YACE,gFACF5B,KAAM,eAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YACE,0EACF5B,KAAM,aAER,CACE4B,YACE,8EACF5B,KAAM,UAER,CACE4B,YACE,gEACF5B,KAAM,WAER,CACE4B,YAAa,+DACb5B,KAAM,aAER,CACE4B,YAAa,kCACb5B,KAAM,aAER,CACE4B,YACE,6DACF5B,KAAM,eAER,CACE4B,YACE,4DACF5B,KAAM,UAER,CACE4B,YACE,2EACF5B,KAAM,YAER,CACE4B,YAAa,2DACb5B,KAAM,SAER,CACE4B,YACE,mEACF5B,KAAM,UAER,CACE4B,YACE,6EACF5B,KAAM,SAER,CACE4B,YACE,gEACF5B,KAAM,UAER,CACE4B,YACE,wEACF5B,KAAM,YAER,CACE4B,YAAa,uDACb5B,KAAM,UAER,CACE4B,YAAa,oDACb5B,KAAM,YAER,CACE4B,YACE,wEACF5B,KAAM,SAER,CACE4B,YAAa,6CACb5B,KAAM,WAER,CACE4B,YACE,kEACF5B,KAAM,YAIZ6B,QAAS,CACPC,MAAO,CAAC,SAAU,SAClBH,KAAM,CACJ,CACEC,YACE,4EACF5B,KAAM,WAER,CACE4B,YACE,+EACF5B,KAAM,WAER,CACE4B,YACE,mEACF5B,KAAM,eAER,CACE4B,YACE,wEACF5B,KAAM,cAER,CACE4B,YACE,6DACF5B,KAAM,UAER,CACE4B,YACE,uEACF5B,KAAM,UAER,CACE4B,YACE,+DACF5B,KAAM,WAER,CACE4B,YACE,kEACF5B,KAAM,YAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YACE,0EACF5B,KAAM,aAER,CACE4B,YACE,8EACF5B,KAAM,UAER,CACE4B,YACE,gEACF5B,KAAM,WAER,CACE4B,YACE,mEACF5B,KAAM,cAER,CACE4B,YAAa,yDACb5B,KAAM,SAER,CACE4B,YAAa,+DACb5B,KAAM,aAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YAAa,0DACb5B,KAAM,eAER,CACE4B,YACE,0EACF5B,KAAM,aAER,CACE4B,YACE,gEACF5B,KAAM,UAER,CACE4B,YAAa,iDACb5B,KAAM,SAER,CACE4B,YACE,mEACF5B,KAAM,SAER,CACE4B,YAAa,0DACb5B,KAAM,YAER,CACE4B,YAAa,0DACb5B,KAAM,WAER,CAAE4B,YAAa,iBAAkB5B,KAAM,eACvC,CACE4B,YAAa,sDACb5B,KAAM,UAER,CACE4B,YAAa,kDACb5B,KAAM,cAER,CACE4B,YACE,6DACF5B,KAAM,SAER,CACE4B,YAAa,8CACb5B,KAAM,SAER,CACE4B,YACE,6DACF5B,KAAM,YAER,CACE4B,YAAa,uDACb5B,KAAM,YAER,CACE4B,YAAa,wDACb5B,KAAM,cAER,CACE4B,YAAa,qDACb5B,KAAM,QAER,CACE4B,YAAa,6CACb5B,KAAM,aAIZ+B,MAAO,CACLJ,KAAM,CACJ,CACEC,YACE,+EACF5B,KAAM,WAER,CACE4B,YACE,mEACF5B,KAAM,eAER,CACE4B,YACE,wEACF5B,KAAM,cAER,CACE4B,YACE,sEACF5B,KAAM,aAER,CACE4B,YACE,6DACF5B,KAAM,UAER,CACE4B,YACE,kEACF5B,KAAM,YAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YACE,0EACF5B,KAAM,aAER,CACE4B,YACE,4EACF5B,KAAM,UAER,CACE4B,YACE,gEACF5B,KAAM,WAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YAAa,+CACb5B,KAAM,aAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YACE,0EACF5B,KAAM,cAER,CACE4B,YAAa,oCACb5B,KAAM,cAER,CACE4B,YACE,gEACF5B,KAAM,UAER,CACE4B,YAAa,iDACb5B,KAAM,SAER,CACE4B,YACE,mEACF5B,KAAM,SAER,CAAE4B,YAAa,iBAAkB5B,KAAM,eACvC,CACE4B,YAAa,sDACb5B,KAAM,UAER,CACE4B,YAAa,2CACb5B,KAAM,WAER,CACE4B,YAAa,8CACb5B,KAAM,SAER,CACE4B,YACE,mEACF5B,KAAM,YAER,CACE4B,YACE,gFACF5B,KAAM,SAER,CACE4B,YAAa,qDACb5B,KAAM,QAER,CACE4B,YAAa,6CACb5B,KAAM,WAER,CACE4B,YACE,6DACF5B,KAAM,eAIZgC,UAAW,CACTF,MAAO,CAAC,SAAU,UAAW,WAC7BH,KAAM,CACJ,CACEC,YACE,mEACF5B,KAAM,eAER,CACE4B,YACE,wEACF5B,KAAM,cAER,CACE4B,YACE,sEACF5B,KAAM,aAER,CACE4B,YACE,iFACF5B,KAAM,WAER,CACE4B,YACE,oEACF5B,KAAM,WAER,CACE4B,YACE,6EACF5B,KAAM,WAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YACE,4EACF5B,KAAM,aAER,CACE4B,YACE,gEACF5B,KAAM,WAER,CACE4B,YACE,6EACF5B,KAAM,YAER,CACE4B,YACE,4DACF5B,KAAM,aAER,CACE4B,YACE,oFACF5B,KAAM,YAER,CACE4B,YACE,2EACF5B,KAAM,WAER,CACE4B,YAAa,+DACb5B,KAAM,aAER,CACE4B,YACE,0EACF5B,KAAM,cAER,CACE4B,YACE,wEACF5B,KAAM,eAER,CACE4B,YAAa,2DACb5B,KAAM,WAER,CACE4B,YACE,8EACF5B,KAAM,WAER,CACE4B,YACE,sEACF5B,KAAM,cAER,CACE4B,YACE,gEACF5B,KAAM,WAER,CACE4B,YACE,+DACF5B,KAAM,UAER,CACE4B,YAAa,8CACb5B,KAAM,SAER,CACE4B,YAAa,2DACb5B,KAAM,YAER,CACE4B,YAAa,wDACb5B,KAAM,UAER,CACE4B,YAAa,qDACb5B,KAAM,QAER,CACE4B,YACE,oEACF5B,KAAM,aAIZiC,UAAW,CACTN,KAAM,CACJ,CACEC,YACE,iEACF5B,KAAM,WAER,CACE4B,YACE,+EACF5B,KAAM,WAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YACE,0EACF5B,KAAM,cAER,CACE4B,YACE,mEACF5B,KAAM,eAER,CAAE4B,YAAa,oCAAqC5B,KAAM,cAC1D,CACE4B,YACE,wEACF5B,KAAM,cAER,CACE4B,YACE,gEACF5B,KAAM,UAER,CACE4B,YACE,sEACF5B,KAAM,aAER,CACE4B,YAAa,wDACb5B,KAAM,SAER,CACE4B,YACE,mEACF5B,KAAM,SAER,CACE4B,YAAa,6CACb5B,KAAM,YAER,CACE4B,YACE,8EACF5B,KAAM,UAER,CACE4B,YACE,gFACF5B,KAAM,WAER,CACE4B,YAAa,sDACb5B,KAAM,UAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YACE,kEACF5B,KAAM,WAER,CACE4B,YAAa,yDACb5B,KAAM,YAER,CACE4B,YAAa,8CACb5B,KAAM,SAER,CACE4B,YACE,mEACF5B,KAAM,YAER,CACE4B,YACE,+EACF5B,KAAM,SAER,CACE4B,YAAa,oDACb5B,KAAM,QAER,CACE4B,YAAa,6CACb5B,KAAM,WAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YACE,6DACF5B,KAAM,aAER,CACE4B,YACE,qEACF5B,KAAM,aAER,CACE4B,YACE,+EACF5B,KAAM,cAIZkC,OAAQ,CACNC,KAAM,CAAC,SAAU,SAAU,WAAY,SAAU,WACjDR,KAAM,CACJ,CACEC,YACE,uEACF5B,KAAM,eAER,CACE4B,YACE,iEACF5B,KAAM,cAER,CACE4B,YACE,yEACF5B,KAAM,aAER,CACE4B,YACE,yEACF5B,KAAM,WAER,CACE4B,YACE,qEACF5B,KAAM,UAER,CACE4B,YACE,uEACF5B,KAAM,SAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YACE,+DACF5B,KAAM,WAER,CAAE4B,YAAa,YAAa5B,KAAM,WAClC,CAAE4B,YAAa,oBAAqB5B,KAAM,YAC1C,CACE4B,YAAa,0DACb5B,KAAM,SAER,CACE4B,YACE,8EACF5B,KAAM,aAER,CACE4B,YACE,gFACF5B,KAAM,cAER,CACE4B,YACE,6EACF5B,KAAM,aAER,CACE4B,YAAa,0CACb5B,KAAM,aAER,CACE4B,YACE,oFACF5B,KAAM,OAER,CACE4B,YAAa,0DACb5B,KAAM,SAER,CACE4B,YACE,+EACF5B,KAAM,UAER,CACE4B,YACE,4EACF5B,KAAM,UAER,CACE4B,YACE,4EACF5B,KAAM,YAER,CACE4B,YACE,8EACF5B,KAAM,YAER,CACE4B,YACE,gEACF5B,KAAM,WAIZoC,YAAa,CACXD,KAAM,CAAC,OAAQ,YAAa,aAAc,UAC1CR,KAAM,CACJ,CACEC,YACE,mEACF5B,KAAM,aAER,CACE4B,YACE,uEACF5B,KAAM,UAER,CACE4B,YACE,2EACF5B,KAAM,eAER,CACE4B,YACE,0EACF5B,KAAM,WAER,CACE4B,YACE,gFACF5B,KAAM,SAER,CACE4B,YACE,qEACF5B,KAAM,UAER,CACE4B,YACE,6EACF5B,KAAM,YAER,CACE4B,YAAa,2DACb5B,KAAM,YAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YACE,2EACF5B,KAAM,gBAER,CACE4B,YACE,kEACF5B,KAAM,WAER,CACE4B,YAAa,+CACb5B,KAAM,SAER,CACE4B,YACE,8DACF5B,KAAM,SAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YAAa,kDACb5B,KAAM,cAER,CACE4B,YACE,2EACF5B,KAAM,UAER,CAAE4B,YAAa,YAAa5B,KAAM,UAClC,CACE4B,YAAa,qDACb5B,KAAM,cAER,CACE4B,YACE,wEACF5B,KAAM,UAER,CACE4B,YACE,gFACF5B,KAAM,UAER,CACE4B,YAAa,oDACb5B,KAAM,WAER,CACE4B,YACE,2EACF5B,KAAM,YAER,CACE4B,YACE,8EACF5B,KAAM,QAER,CACE4B,YACE,6EACF5B,KAAM,aAER,CACE4B,YAAa,0DACb5B,KAAM,UAER,CACE4B,YAAa,kDACb5B,KAAM,eAIZqC,MAAO,CACLF,KAAM,CAAC,UAAW,WAClBR,KAAM,CACJ,CACEC,YACE,oEACF5B,KAAM,aAER,CACE4B,YACE,uEACF5B,KAAM,UAER,CACE4B,YACE,2EACF5B,KAAM,eAER,CACE4B,YACE,0EACF5B,KAAM,WAER,CACE4B,YACE,gFACF5B,KAAM,SAER,CACE4B,YAAa,yDACb5B,KAAM,YAER,CACE4B,YACE,qEACF5B,KAAM,UAER,CACE4B,YAAa,wDACb5B,KAAM,YAER,CACE4B,YACE,8EACF5B,KAAM,gBAER,CACE4B,YACE,mEACF5B,KAAM,WAER,CACE4B,YAAa,+CACb5B,KAAM,SAER,CACE4B,YACE,8DACF5B,KAAM,SAER,CAAE4B,YAAa,WAAY5B,KAAM,WACjC,CACE4B,YAAa,kDACb5B,KAAM,cAER,CACE4B,YACE,2EACF5B,KAAM,UAER,CACE4B,YACE,wEACF5B,KAAM,UAER,CACE4B,YACE,+EACF5B,KAAM,UAER,CACE4B,YAAa,oDACb5B,KAAM,WAER,CACE4B,YACE,8EACF5B,KAAM,YAER,CACE4B,YACE,2EACF5B,KAAM,YAER,CACE4B,YACE,8EACF5B,KAAM,QAER,CACE4B,YACE,+DACF5B,KAAM,aAER,CACE4B,YAAa,0DACb5B,KAAM,UAER,CACE4B,YAAa,uDACb5B,KAAM,eAIZsC,KAAM,CACJH,KAAM,CAAC,aAAc,OAAQ,QAAS,QAAS,SAC/CR,KAAM,CACJ,CACEC,YACE,oFACF5B,KAAM,SAER,CACE4B,YACE,gFACF5B,KAAM,WAER,CACE4B,YACE,0EACF5B,KAAM,cAER,CACE4B,YACE,+DACF5B,KAAM,aAER,CACE4B,YACE,gFACF5B,KAAM,gBAER,CACE4B,YAAa,2DACb5B,KAAM,aAER,CACE4B,YACE,mEACF5B,KAAM,YAER,CACE4B,YACE,6DACF5B,KAAM,WAER,CACE4B,YACE,uFACF5B,KAAM,WAER,CACE4B,YACE,iFACF5B,KAAM,SAER,CACE4B,YACE,iEACF5B,KAAM,aAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YACE,uEACF5B,KAAM,aAER,CACE4B,YACE,qEACF5B,KAAM,YAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YACE,+EACF5B,KAAM,YAER,CACE4B,YACE,gFACF5B,KAAM,YAER,CACE4B,YACE,mEACF5B,KAAM,YAER,CACE4B,YACE,uEACF5B,KAAM,cAER,CACE4B,YACE,yEACF5B,KAAM,SAER,CACE4B,YACE,+EACF5B,KAAM,aAER,CACE4B,YACE,+EACF5B,KAAM,UAER,CACE4B,YACE,gFACF5B,KAAM,YAER,CACE4B,YAAa,2DACb5B,KAAM,UAER,CACE4B,YACE,6DACF5B,KAAM,YAER,CACE4B,YACE,6EACF5B,KAAM,aAER,CACE4B,YAAa,0CACb5B,KAAM,cAIZuC,MAAO,CACLJ,KAAM,CAAC,aAAc,UACrBR,KAAM,CACJ,CACEC,YACE,2EACF5B,KAAM,cAER,CACE4B,YACE,gFACF5B,KAAM,WAER,CACE4B,YACE,0EACF5B,KAAM,aAER,CACE4B,YACE,2EACF5B,KAAM,QAER,CACE4B,YACE,gEACF5B,KAAM,UAER,CACE4B,YAAa,0CACb5B,KAAM,eAER,CACE4B,YACE,2EACF5B,KAAM,YAER,CACE4B,YACE,wEACF5B,KAAM,cAER,CACE4B,YACE,uEACF5B,KAAM,aAER,CACE4B,YACE,gEACF5B,KAAM,UAER,CACE4B,YACE,8DACF5B,KAAM,SAER,CACE4B,YACE,6EACF5B,KAAM,YAER,CACE4B,YACE,wEACF5B,KAAM,QAER,CACE4B,YACE,oFACF5B,KAAM,cAER,CACE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IAAMC,EAAY3G,iBAAOmG,GACzB,MAAO,CACLO,SACAC,YACAC,WAAYC,gBAAK,OAACF,QAAD,IAACA,IAAa,GAAG,iBAjBM,CAC1ChJ,KAAMqC,iBAAOqG,IACbS,MAAO9G,iBAAOwG,IACdO,eAAgB/G,iBAAOsG,IACvBU,OAAQhH,iBAAOuG,IACfrF,KAAMlB,iBAAOoG,UCzHTa,GAAe,WACnB,IAAMC,EAAQrF,iBAAO,EAAG,IACxB,OAAIqF,GAAS,GAAW,YACpBA,GAAS,GAAW,aACpBA,GAAS,GAAW,eACpBA,GAAS,GAAW,YACpBA,GAAS,GAAW,iBACpBA,GAAS,GAAW,cACjB,SAGHC,GAAiB,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,cACA,WACA,YAEIC,GAAc,CAClB,oBACA,qBACA,oBACA,uBACA,sBACA,wBAGIC,GAAkB,CACtB,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,SACA,SACA,SACA,SACA,gBACA,gBACA,aACA,eACA,cACA,6BAGIC,GAAa,CACjB,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,qCACA,qCACA,qCACA,mCACA,mCACA,kBAEIC,GAAgB,CACpB,UACA,UACA,UACA,UACA,UACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,mBACA,+BACA,uBAEIC,GAAoB,CACxB,SACA,mBACA,cACA,WACA,QACA,QACA,yBACA,eACA,YACA,WACA,UACA,2BAGIC,GAAW,CACf,UACA,UACA,SACA,SACA,WACA,WACA,YACA,YACA,QACA,QACA,WACA,eAGIC,GAAa,CACjB,SACA,UACA,QACA,SACA,UACA,YACA,cACA,UACA,SACA,QACA,eACA,SACA,QACA,SACA,QACA,cACA,OACA,SACA,UACA,WACA,YACA,aACA,kBAGIC,GAAW,WACf,IAAMT,EAAQrF,iBAAO,IAAMA,iBAAO,IAClC,OAAO6F,GAAWR,IAePU,GAAmB,WAC9B,IAAMjI,EAAmB,CACvBkI,OAAQ7H,iBAAOoH,IACfU,aAAc9H,iBAAOwH,IACrBO,MAAO/H,iBAAOsH,IACdU,MAAOL,KACPM,SAAUjI,iBAAOmH,IACjBe,UAAWjB,KACXkB,WAAYnI,iBAAOqH,IACnBe,SAAUpI,iBAAOuH,KAGnB,OADqB,IAAjB1F,iBAAO,EAAG,KAAUlC,EAAO0I,IAAMrI,iBAAOyH,KACrC9H,GCzLH2I,GAAmB,CACvB,OACA,OACA,OACA,OACA,OACA,WACA,WACA,WACA,SACA,SACA,SACA,WAEIC,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEtDC,GAAuB,WAC3B,IAAMtB,EAAQrF,iBAAO,EAAG,KACxB,OAAIqF,GAAS,GAAW,YACpBA,GAAS,GAAW,YACpBA,GAAS,GAAW,QACpBA,GAAS,GAAW,YACpBA,GAAS,GAAW,aACpBA,GAAS,GAAW,UACpBA,GAAS,GAAW,WACpBA,GAAS,GAAW,YACjB,UAGHuB,GAAiB,CACrB,OACA,aACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,wBAGIC,GAAqB,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE1DC,GAAmB,CACvB,WACA,WACA,WACA,WACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBAGIC,GAAwB,CAC5B,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,cACA,cACA,cACA,WACA,WACA,YACA,YACA,YACA,WACA,YAGIC,GAAgB,CACpB,QACA,QACA,QACA,eACA,eACA,eACA,QACA,QACA,QACA,0BACA,0BACA,2BAGIC,GAAkB,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,YACA,YACA,WACA,WACA,WACA,aACA,aACA,WAGIC,GAAa,CACjB,iBACA,kBACA,eACA,qBACA,qBACA,gBACA,cACA,UACA,WACA,cACA,cACA,qBACA,YACA,eACA,kBACA,iBACA,iBACA,eACA,kBACA,qBACA,eACA,iBACA,aA8BWC,GAAoB,SAC/BC,EACAC,GAEA,IAAIC,EAOJ,OALEA,EADED,EACYpH,qBAAWiH,GAAYlH,iBAAO,EAAG,IAAIuH,KAAK,MAGvC,KAAfvH,iBAAO,IAAakH,GAAWlH,iBAAO,IAAMA,iBAAO,UAAOY,EAEvD,CACLsE,eAAgB/G,iBAAO0I,IACvB5F,WAAY9C,iBAAO8I,IACnBhC,MAAOqC,EACPxL,KAAMqC,iBAAOyI,IACbY,SAAUrJ,iBAAO6I,IACjBS,YAAatJ,iBAAO4I,IACpB1H,KAAMsH,KACNxB,OAAQhH,iBAAO2I,IACfY,gBAAiBN,EAAarB,UAAqBnF,IAGjD+G,GAAsB,SAC1BC,EACAR,GAEA,OAAOpC,gBAAM4C,GAAO,kBAAMT,GAAkBC,OAGjCS,GAAqB,WAAmB,IAAD,EAC5ChD,EAAS1G,iBAAOsI,IACtB,GAAe,SAAX5B,EACF,MAAO,CACLA,SACAiD,qBAAiBlH,EACjBmH,wBAAoBnH,GAGxB,IAAMoH,EAAO,UAAG7J,iBAAOuI,WAAV,QAAgC,EACzCuB,EA/CwB,WAC5B,IAAM5C,EAAQrF,iBAAO,EAAG,KACxB,OAAIqF,GAAS,GAAW,EACpBA,GAAS,GAAW,EACjB,EA2Ca6C,GAChBD,EAAgBD,IAClBC,EAAgBD,GAGlB,IAAMG,EAAkBH,EAAUC,EAClC,MAAO,CACLpD,OAAQ1G,iBAAOsI,IACfuB,UACAF,gBAAiBH,GAAoBQ,GACrCJ,mBAAoBJ,GAAoBM,GAAe,KCtO9CG,GAAe,CAC1BC,aAAc,CACZ,QACA,SACA,SACA,QACA,QACA,YACA,SACA,UAEFC,iBAAkB,CAChB,cACA,cACA,kBACA,aACA,cACA,aACA,WACA,UAEFC,KAAM,CACJ,gBACA,gBACA,YACA,YACA,YACA,gBACA,iBAEFC,SAAU,CACR,gBACA,gBACA,yBACA,sBACA,yBACA,eACA,kBACA,cACA,uBACA,oBACA,cACA,mBACA,aACA,YACA,+BACA,eACA,WACA,mBACA,YACA,WACA,gBACA,UACA,UACA,kBACA,kBACA,kBACA,wBACA,uBACA,kBACA,eACA,qBACA,+BACA,yBACA,kBAYSC,GAAsB,SACjCb,EACAc,GAEA,OAAO1D,gBAAM4C,GAAO,WAClB,IAAMe,EAAS3I,iBAAO,EAAG,IAAMA,iBAAO,EAAG,IAAMA,iBAAO,EAAG,IAAM,EACzDhB,EACW,YAAf0J,EACIN,GAAaC,aACbD,GAAaE,iBACnB,MAAO,CACLC,KAAMpK,iBAAOiK,GAAaG,MAC1BC,SAAUJ,GAAaI,SAASG,GAChCtJ,KAAMlB,iBAAOa,GACb4J,MAAOhE,KACPiE,MAAOhB,UC/FPiB,GAAwB,CAC5B,mBACA,oBACA,qBACA,cACA,cACA,iBACA,eACA,gBACA,4BACA,mBACA,kBACA,kBAGWC,GAAS,WAEpB,GAD6B,IAAd/I,iBAAO,GAGf,CACL,IAAMqF,EAAQrF,iBAAO,IAAMA,iBAAO,IAClC,OAAO8I,GAAsBzD,KCDpB2D,GACE,CACX,eACA,cACA,YACA,YACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,WACA,WACA,cACA,gBArBSA,GAuBF,CACP,SACA,SACA,SACA,SACA,MACA,MACA,OACA,QA/BSA,GAiCC,CACV,SACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,OACA,sBA3CSA,GA6CQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA7C3BA,GA8CY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGlCC,GAAiB,iBAAe,CAC3CC,YAAa/K,iBAAO6K,IACpBG,WAAYhL,iBAAO6K,IACnBI,QAASjL,iBAAO6K,IAChBK,kBAAmBlL,iBAAO6K,IAC1BM,sBAAuBnL,iBAAO6K,IAC9BO,gBAAiBR,O,UCjDJS,GArBe,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MACzBa,EACJb,EAAM1D,gBAAkB0D,EAAM1D,eAAiB,EAAI,MAAQ,MAC7D,OACE,oCACE,4BACE,gCACG0D,EAAM9M,KADT,IACgB8M,EAAMvJ,MACZ,IAHZ,KAIKoK,EAJL,MAI8Bb,EAAMzD,OAAQ,IACzCyD,EAAM3D,OACL,yCACI,4BAAK2D,EAAM3D,QAEd,IATL,O,gICHC,IAAMyE,GAAkBlO,IAAO6F,IAAV,MAmEbsI,GA5De,SAAC,GAAe,IAAbd,EAAY,EAAZA,MACvBnB,EAAoBmB,EAApBnB,gBACF+B,EACJZ,EAAM3D,gBAAkB2D,EAAM3D,eAAiB,EAAI,MAAQ,MAC7D,OACE,oCACE,wBAAI0E,MAAO,CAAEC,aAAc,QACzB,gCACGnC,GAAmB,UACnBmB,EAAM/M,KAFT,IAEgB+M,EAAMxJ,MACZ,IAJZ,KAKKoK,EALL,MAK8BZ,EAAM1D,OALpC,MAK+C0D,EAAMpB,YALrD,KAKoE,IACjEoB,EAAM5H,WANT,MAMwB4H,EAAMrB,SAC3BqB,EAAM5D,OACL,oCACG,IADH,KAEI,4BAAK4D,EAAM5D,QAEd,IAZL,KAeA,kBAACyE,GAAD,KACGhC,GACC,oCACE,4BACE,gDADF,KACkCA,EAAgBzB,cAEjDyB,EAAgBlB,KACf,4BACE,uCADF,KACyBkB,EAAgBlB,KAG3C,4BACE,4CADF,KAC8BkB,EAAgBtB,UAE9C,4BACE,8CADF,KACgCsB,EAAgBpB,YAEhD,4BACE,4CADF,KAC8BoB,EAAgBnB,UAE9C,4BACE,wCADF,WACgCmB,EAAgBrB,WAEhD,4BACE,yCADF,KAC2BqB,EAAgBvB,OAE3C,4BACE,yCADF,KAC2BuB,EAAgBxB,OAE3C,4BACE,0CADF,KAC4BwB,EAAgB1B,Y,+LCtDjD,IAAM8D,GAAiBtO,IAAO6F,IAAV,MA2CZ0I,GAnCe,SAAC,GAAmB,IAAD,MAAhBC,EAAgB,EAAhBA,UAC/B,OACE,kBAACF,GAAD,KACE,4BACE,2BACE,gCAASE,EAAU3K,KAAnB,KAAmC,IACf,cAAnB2K,EAAUzB,MAAwByB,EAAUzB,KAF/C,KAGGyB,EAAUxB,SAHb,MAMF,sCACS,4BAAKwB,EAAUpB,MAAM/D,QAD9B,KAG4B,SAA3BmF,EAAUpB,MAAM/D,SAAhB,UACCmF,EAAUpB,MAAM7D,kBADjB,aACC,EAA4BlC,KAAI,SAACoH,GAAD,OAC9B,kBAACC,GAAD,CAAWpH,IAAKC,qBAAY6F,MAAOqB,QAEvC,kBAACE,GAAA,EAAD,MACA,sCACS,4BAAKH,EAAUnB,MAAMhE,QAD9B,KAG4B,SAA3BmF,EAAUnB,MAAMhE,QACf,8CACGmF,EAAUnB,MAAMf,uBADnB,aACG,EAAiCjF,KAAI,SAACuH,GAAD,OACpC,kBAACC,GAAD,CAAWvH,IAAKC,qBAAY8F,MAAOuB,OAFvC,UAIGJ,EAAUnB,MAAMd,0BAJnB,aAIG,EAAoClF,KAAI,SAACuH,GAAD,OACvC,kBAACC,GAAD,CAAWvH,IAAKC,qBAAY8F,MAAOuB,U,0FCxCxC,IAAM7G,GAAY/H,IAAO8O,QAAV,MAqHPC,GAjHI,WAAO,IAAD,EACuBpO,mBAAS8M,MADhC,mBAChBuB,EADgB,KACCC,EADD,KAEfpB,EAA6CmB,EAA7CnB,kBAAmBC,EAA0BkB,EAA1BlB,sBAFJ,EAGmBnN,mBAAgB,IAHnC,mBAGhBuO,EAHgB,KAGDC,EAHC,OAI2BxO,mBAAgB,IAJ3C,mBAIhByO,EAJgB,KAIGC,EAJH,KAMvBC,qBAAU,WACRH,EAAiBlC,GAAmB,OAACY,QAAD,IAACA,IAAqB,EAAG,YAC7DwB,EACEpC,GAAmB,OAACa,QAAD,IAACA,IAAyB,EAAG,kBAEjD,CAACkB,EAAiBnB,EAAmBC,IAExC,IAoBMyB,EACJ,oCACE,kBAACjJ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GACxC,kBAACH,EAAA,EAAD,CAAMgB,IAAI,YAAYZ,MAAI,GACxB,2BACE,+CAEF,2BAAIsI,EAAgBrB,aAEtB,kBAACrH,EAAA,EAAD,CAAMgB,IAAI,UAAUZ,MAAI,GACtB,2BACE,4CAEF,2BAAIsI,EAAgBpB,UAEtB,kBAACtH,EAAA,EAAD,CAAMgB,IAAI,cAAcZ,MAAI,GAC1B,2BACE,gDAEF,2BAAIsI,EAAgBtB,cAErBsB,EAAgBjB,iBACf,kBAACzH,EAAA,EAAD,CAAMgB,IAAI,MAAMZ,MAAI,GAClB,2BACE,wCAEF,2BAAIsI,EAAgBjB,oBAK5B,kBAACzH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAeC,QAAS,GAC9C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,8CACCsI,EAAc7H,KAAI,SAACmI,GAAD,OACjB,kBAACC,GAAD,CAAWnI,IAAKC,qBAAYiH,UAAWgB,QAG3C,kBAAClJ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kDACCwI,EAAkB/H,KAAI,SAACmI,GAAD,OACrB,kBAACC,GAAD,CAAWnI,IAAKC,qBAAYiH,UAAWgB,UAOjD,OACE,oCACE,kBAAC,GAAD,KACE,kBAAClJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GACxC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACvG,EAAA,EAAD,CACEC,QAAQ,YACRE,KAAK,QACLD,MAAM,UACNE,QA9Ec,WACxB0O,EAAmBxB,QAyEX,wBASF,kBAACnH,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACvG,EAAA,EAAD,CACEC,QAAQ,WACRE,KAAK,QACLD,MAAM,UACNE,QApFY,WAEtB,IAAImP,EAAOC,SAASC,eAAe,eAC/BC,EAAYjQ,OAAOkQ,eACnBC,EAAQJ,SAASK,cACjBN,IACFK,EAAME,mBAAmBP,GAChB,OAATG,QAAS,IAATA,KAAWK,kBACF,OAATL,QAAS,IAATA,KAAWM,SAASJ,GAEpBJ,SAASS,YAAY,QACZ,OAATP,QAAS,IAATA,KAAWK,kBACXtQ,OAAOY,KAAK,0BAA2B,aAoEjC,UAUJ,yBAAKwG,GAAG,eAAeuI,MCrHzBc,GAAc,CAClB,CACExM,KAAM,6BACNyM,SAAU,CACR,YACA,YACA,WACA,mBACA,cACA,8BAGJ,CACEzM,KAAM,6BACNyM,SAAU,CACR,YACA,YACA,WACA,mBACA,cACA,8BAGJ,CACEzM,KAAM,uBACNyM,SAAU,CACR,aACA,kBACA,OACA,QACA,iBACA,iCACA,sCACA,oBACA,mCACA,oBAGJ,CACEzM,KAAM,sBACNyM,SAAU,CACR,wBACA,+BACA,kBACA,oDACA,qBACA,iBACA,mBACA,sBAGJ,CAAEzM,KAAM,oCACR,CACEA,KAAM,0BACNyM,SAAU,CACR,oDACA,iBACA,0EACA,0CACA,iDACA,8CACA,6CACA,oCAGJ,CACEzM,KAAM,mBACNyM,SAAU,CACR,qCACA,2CACA,yBACA,0BACA,gCACA,0DACA,wCACA,6BACA,oBACA,8BAGJ,CACEzM,KAAM,kCACNyM,SAAU,CACR,6CACA,kCACA,oDACA,0CACA,oDACA,sDACA,wDACA,kDACA,wDACA,6CAGJ,CAAEzM,KAAM,8BACR,CACEA,KAAM,kBACNyM,SAAU,CACR,6BACA,6BACA,uBACA,sBACA,mCACA,0BACA,mBACA,oCAGJ,CAAEzM,KAAM,qCACR,CAAEA,KAAM,sCACR,CAAEA,KAAM,eACR,CAAEA,KAAM,gCACR,CAAEA,KAAM,uBACR,CAAEA,KAAM,+BACR,CAAEA,KAAM,+BACR,CAAEA,KAAM,wBACR,CAAEA,KAAM,kBACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,gCACR,CAAEA,KAAM,kBACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,mCACR,CAAEA,KAAM,gCACR,CAAEA,KAAM,cACR,CAAEA,KAAM,mBACR,CAAEA,KAAM,yBACR,CAAEA,KAAM,aACR,CAAEA,KAAM,sBACR,CAAEA,KAAM,aACR,CAAEA,KAAM,WACR,CAAEA,KAAM,mCACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,YACR,CAAEA,KAAM,0CACR,CAAEA,KAAM,iBACR,CAAEA,KAAM,sBACR,CAAEA,KAAM,sBACR,CAAEA,KAAM,yBACR,CAAEA,KAAM,kBACR,CAAEA,KAAM,YACR,CAAEA,KAAM,YACR,CAAEA,KAAM,2BACR,CAAEA,KAAM,sBACR,CAAEA,KAAM,uBACR,CAAEA,KAAM,wBACR,CAAEA,KAAM,wBACR,CAAEA,KAAM,yCACR,CAAEA,KAAM,iCACR,CAAEA,KAAM,sBACR,CAAEA,KAAM,uBACR,CAAEA,KAAM,iBACR,CAAEA,KAAM,cACR,CAAEA,KAAM,SACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,mCAQG0M,GAAgB,WAC3B,IAAMC,EAAY7N,iBAAO0N,IACnBI,EAAU9N,iBAAM,OAAC6N,QAAD,IAACA,OAAD,EAACA,EAAWF,UAClC,MAAO,CACLzM,KAAI,OAAE2M,QAAF,IAAEA,OAAF,EAAEA,EAAW3M,KACjB4M,Y,iHCpKG,IAAM1I,GAAY/H,IAAO6F,IAAV,MA6BP6K,GAxBI,WAAO,IAAD,EACqB/P,mBAC1C4P,MAFqB,mBAChBI,EADgB,KACAC,EADA,KAOvB,OACE,kBAAC,GAAD,KACE,kBAACzQ,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNyG,WAAS,EACTxG,KAAK,QACLC,QAVmB,WACvBqQ,EAAkBL,QAIhB,kBASA,4BAAKI,EAAe9M,MACpB,2BAAI8M,EAAeF,W,+ICvBzB,IAAM1I,GAAY/H,IAAO6F,IAAV,MA6BAgL,GAxBO,WAAO,IAAD,EACwBlQ,mBAChDgL,IAAkB,GAAO,IAFD,mBACnBmF,EADmB,KACAC,EADA,KAQ1B,OACE,kBAAC,GAAD,KACE,kBAAC5Q,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNyG,WAAS,EACTxG,KAAK,QACLC,QAVsB,WAC1BwQ,EAAqBpF,IAAkB,GAAO,MAI5C,qBASA,kBAACkD,GAAD,CAAWxB,MAAOyD,MCrBlBE,GACe,WACjB,IAAMnH,EAAQrF,iBAAO,EAAG,IACxB,OAAIqF,GAAS,GAAW,UACpBA,GAAS,GAAW,qBACpBA,GAAS,GAAW,kCACV,KAAVA,EAAqB,6BACX,KAAVA,EAAqB,+BACX,KAAVA,EAAqB,sCACX,KAAVA,EAAqB,0CAAzB,GATEmH,GAYY,WACd,IAAMnH,EAAQrF,iBAAO,EAAG,IACxB,OAAIqF,GAAS,EAAU,4BACnBA,GAAS,EAAU,gBACT,IAAVA,EAAoB,iCACV,KAAVA,EAAqB,0CACX,KAAVA,EAAqB,4CACX,KAAVA,EAAqB,8BACX,KAAVA,EAAqB,sCACX,KAAVA,EAAqB,4BACX,KAAVA,EAAqB,eACX,KAAVA,EAAqB,2CACrBA,GAAS,GAAW,4BACpBA,GAAS,GAAW,wBAAxB,GAzBEmH,GA2BW,CACb,6BACA,6BACA,eACA,iBACA,6BACA,qBACA,qBACA,6CACA,4BACA,sBACA,uCACA,wCACA,uBACA,oCACA,+BACA,6BACA,sBACA,6BACA,sCACA,4BA/CEA,GAiDM,CACR,oBACA,cACA,mBACA,sBACA,oBACA,UACA,oBACA,iBACA,aACA,YACA,OACA,WACA,cACA,YACA,OACA,eACA,qBACA,kBACA,eACA,aArEEA,GAuEM,CACR,gCACA,0BACA,4CACA,oCACA,mCACA,mCACA,oBACA,qBACA,qBACA,sCACA,wCACA,WACA,gCACA,mBACA,cACA,qCACA,sBACA,sCACA,kDACA,sCAISC,GAAqB,WAChC,MAAO,CACLC,aAAcF,KACdG,YAAaH,KACbI,aAAczO,iBAAOqO,IACrBK,SAAU1O,iBAAOqO,IACjBM,SAAU3O,iBAAOqO,M,sICzGrB,IAAMjJ,GAAY/H,IAAO6F,IAAV,MA4CA0L,GAtCS,WAAO,IAAD,EAC0B5Q,mBAEpDsQ,IAH0B,mBACrBO,EADqB,KACAC,EADA,KAQ5B,OACE,kBAAC,GAAD,KACE,kBAACtR,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNyG,WAAS,EACTxG,KAAK,QACLC,QAVwB,WAC5BkR,EAAuBR,QAIrB,uBASA,2BACE,qDADF,IACsCO,EAAoBN,cAE1D,2BACE,iDADF,IACkCM,EAAoBL,aAEtD,2BACE,mDADF,IACoCK,EAAoBJ,cAExD,2BACE,8CADF,IAC+BI,EAAoBH,UAEnD,2BACE,qDADF,IACsCG,EAAoBF,YC1C1DI,GAAa,CACjB,2EACA,gCACA,+CACA,oBACA,iDACA,gDACA,iDACA,oBACA,qDACA,2CACA,mDACA,sEACA,oDACA,wCACA,oDACA,uDACA,oGACA,wCACA,0CACA,gGACA,wDACA,kCACA,sEACA,iDACA,uCACA,iDACA,kBACA,sCACA,2BACA,2BACA,oCACA,8CACA,6CACA,sDACA,uBACA,0CACA,gCACA,4CACA,2EACA,oCACA,oEACA,qCACA,4DACA,oFACA,gFACA,mCACA,+EACA,8CACA,+EACA,gCACA,+BACA,0BACA,qBACA,4FACA,0BACA,sBACA,6CACA,6DACA,sCACA,kCACA,yBACA,mCACA,4BACA,yCACA,oBACA,oCACA,wBACA,iDAGIC,GACQ,CACV,CACEC,KAAM,cACNC,SAAU,CACR,2CACA,oBACA,yCACA,sCAGJ,CACED,KAAM,YACNC,SAAU,CACR,qCACA,8BACA,wCACA,wCAGJ,CACED,KAAM,QACNC,SAAU,CACR,6BACA,sCACA,6BACA,8BACA,gCACA,iCAGJ,CACED,KAAM,SACNC,SAAU,CACR,kCACA,8CACA,0BACA,yBACA,6BACA,wCAIJ,CACED,KAAM,UACNC,SAAU,CACR,kCACA,wCACA,oCACA,kDAGJ,CACED,KAAM,QACNC,SAAU,CACR,yCACA,0BACA,qCACA,8BAGJ,CACED,KAAM,UACNC,SAAU,CACR,sCACA,uCACA,kCACA,kDAGJ,CACED,KAAM,SACNC,SAAU,CACR,qCACA,oBACA,wBACA,kCA5EFF,GAgFU,CACZ,CACEG,OAAQ,eACRC,UAAW,CAAC,SAAU,eAAgB,UAAW,WAEnD,CACED,OAAQ,uBAEV,CACEA,OAAQ,mCAGV,CACEA,OAAQ,wBACRC,UAAW,CACT,UACA,aACA,YACA,gBACA,aACA,qBACA,cACA,YACA,UACA,0BAGJ,CACED,OAAQ,mBACRC,UAAW,CACT,qBACA,WACA,eACA,aACA,qBACA,uBAGJ,CACED,OAAQ,aACRC,UAAW,CACT,UACA,uBACA,cACA,qBAGJ,CACED,OAAQ,oBACRC,UAAW,CACT,YACA,uBACA,gBACA,eACA,yBACA,UACA,aACA,uBAGJ,CAAED,OAAQ,6BACV,CAAEA,OAAQ,oBACV,CACEA,OAAQ,iBACRC,UAAW,CACT,YACA,YACA,oBACA,eACA,gBACA,iCACA,sBACA,oBAIJ,CACED,OAAQ,SACRC,UAAW,CACT,gBACA,cACA,gBACA,WACA,gBACA,2BACA,UACA,YACA,WACA,kCAGJ,CAAED,OAAQ,WACV,CACEA,OAAQ,WACRC,UAAW,CACT,sBACA,aACA,sBACA,WACA,aACA,kBAGJ,CACED,OAAQ,WACRC,UAAW,CAAC,SAAU,cAAe,aAAc,oBAErD,CAAED,OAAQ,YACV,CACEA,OAAQ,0BACRC,UAAW,CACT,QACA,yBACA,WACA,iBACA,kBACA,UACA,UACA,WACA,mBACA,cAGJ,CACED,OAAQ,UACRC,UAAW,CACT,OACA,WACA,WACA,UACA,cACA,aAGJ,CACED,OAAQ,OACRC,UAAW,CAAC,WAAY,mBAAoB,WAAY,cAE1D,CACED,OAAQ,UACRC,UAAW,CACT,SACA,WACA,WACA,eACA,YACA,eAiBKC,GAAgB,WAE3B,MAAO,CAAEJ,KADIjP,iBAAO+O,MAITO,GAAkB,WAC7B,IAAML,EAAOjP,iBAAOgP,IACdG,EAASnP,iBAAOgP,IACtB,MAAO,CACLC,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KACZE,OAAM,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAQA,OAChBI,QAASvP,iBAAM,OAACiP,QAAD,IAACA,OAAD,EAACA,EAAMC,UACtBE,UAAWpP,iBAAM,OAACmP,QAAD,IAACA,OAAD,EAACA,EAAQC,a,2JC7T9B,IAAMhK,GAAY/H,IAAO6F,IAAV,MAoDAsM,GA5CI,WAAO,IAAD,EACqBxR,mBAC1CqR,MAFqB,mBAChBI,EADgB,KACAC,EADA,OAIyB1R,mBAC9CsR,MALqB,mBAIhBK,EAJgB,KAIEC,EAJF,KAavB,OACE,kBAAC,GAAD,KACE,kBAACpS,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNyG,WAAS,EACTxG,KAAK,QACLC,QAbmB,WACvB8R,EAAkBL,QAOhB,kBASA,kBAAC7R,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNyG,WAAS,EACTxG,KAAK,QACLC,QAnBqB,WACzBgS,EAAoBN,QAalB,oBASA,0CACA,2BAAIG,EAAeR,MACnB,uCACA,4BAAKU,EAAiBV,MACtB,2BAAIU,EAAiBJ,SACrB,4BAAKI,EAAiBR,QACtB,2BAAIQ,EAAiBP,aCxDrBS,GAAe,CACnB,YACA,YACA,OACA,SACA,QACA,UACA,OACA,UACA,SACA,QACA,WACA,UACA,UAGIC,GAAa,CAAC,IAAK,IAAK,KACxBC,GAAa,CAAC,IAAK,IAAK,KAEjBC,GAAkB,WAAO,IAAD,IAC/BC,GAAY,UAACjQ,iBAAO8P,WAAR,QAAuB,MAAvB,UAA+B9P,iBAAO+P,WAAtC,QAAqD,KAIrE,MAHkB,OAAdE,IACFA,EAAY,KAER,GAAN,OAAUjQ,iBAAO6P,IAAjB,cAAoCI,ICxBhCC,GAAe,CACnB,WACA,SACA,WACA,UACA,UACA,WACA,eACA,SACA,SACA,aACA,aACA,aACA,aACA,SACA,aAEIC,GAAe,CACnB,WACA,YACA,SACA,cACA,aACA,SACA,WACA,UACA,aACA,UACA,WACA,cACA,cACA,UACA,YACA,SACA,YACA,eAGWC,GAAoB,WAC/B,MAAM,GAAN,OAAUtO,qBAAWqO,GAAc,GAAG/G,KAAK,OAA3C,cAAuDtH,qBACrDoO,MClCEG,GAAwC,CAC5CC,UAAW,CACTvR,KAAM,YACN4B,YACE,2IACF4P,SAAU,UAEZC,UAAW,CACTzR,KAAM,YACN4B,YACE,2SACF4P,SAAU,SAEZE,QAAS,CACP1R,KAAM,UACN4B,YACE,uKACF4P,SAAU,UAEZG,UAAW,CACT3R,KAAM,YACN4B,YACE,2OACF4P,SAAU,UAEZI,aAAc,CACZ5R,KAAM,eACN4B,YACE,mKACF4P,SAAU,QAEZK,QAAS,CACP7R,KAAM,UACN4B,YACE,yMACF4P,SAAU,WAEZM,SAAU,CACR9R,KAAM,WACN4B,YACE,sSACF4P,SAAU,SAEZO,cAAe,CACb/R,KAAM,gBACN4B,YACE,gHACF4P,SAAU,UAEZQ,aAAc,CACZhS,KAAM,eACN4B,YACE,oNACF4P,SAAU,YAEZS,cAAe,CACbjS,KAAM,gBACN4B,YACE,yLACF4P,SAAU,QAEZU,OAAQ,CACNlS,KAAM,SACN4B,YACE,kMACF4P,SAAU,SAEZW,UAAW,CACTnS,KAAM,YACN4B,YACE,8MACF4P,SAAU,QAEZY,OAAQ,CACNpS,KAAM,SACN4B,YACE,4OACF4P,SAAU,QAEZa,OAAQ,CACNrS,KAAM,SACN4B,YACE,+MACF4P,SAAU,QAEZc,MAAO,CACLtS,KAAM,QACN4B,YACE,6IACF4P,SAAU,UAEZ,YAAa,CACXxR,KAAM,YACN4B,YACE,wOACF4P,SAAU,UAEZe,eAAgB,CACdvS,KAAM,iBACN4B,YACE,gNACF4P,SAAU,UAEZgB,SAAU,CACRxS,KAAM,WACN4B,YACE,mOACF4P,SAAU,WAEZiB,aAAc,CACZzS,KAAM,eACN4B,YACE,qQACF4P,SAAU,WAEZ,iBAAkB,CAChBxR,KAAM,iBACN4B,YACE,4MACF4P,SAAU,OAEZkB,OAAQ,CACN1S,KAAM,SACN4B,YACE,uLACF4P,SAAU,SAEZmB,aAAc,CACZ3S,KAAM,eACN4B,YACE,6KACF4P,SAAU,aAEZoB,OAAQ,CACN5S,KAAM,SACN4B,YACE,0JACF4P,SAAU,UAEZqB,QAAS,CACP7S,KAAM,UACN4B,YACE,kIACF4P,SAAU,eAEZsB,UAAW,CACT9S,KAAM,YACN4B,YACE,+SACF4P,SAAU,OAEZuB,QAAS,CACP/S,KAAM,UACN4B,YACE,oHACF4P,SAAU,aAEZwB,UAAW,CACThT,KAAM,YACN4B,YACE,iEACF4P,SAAU,SAEZ,gBAAiB,CACfxR,KAAM,gBACN4B,YACE,iNACF4P,SAAU,SAEZ,gBAAiB,CACfxR,KAAM,gBACN4B,YACE,iGACF4P,SAAU,WAEZyB,UAAW,CACTjT,KAAM,YACN4B,YACE,mLACF4P,SAAU,SAEZ0B,KAAM,CACJlT,KAAM,OACN4B,YACE,gOACF4P,SAAU,QAEZpI,WAAY,CACVpJ,KAAM,aACN4B,YACE,uIACF4P,SAAU,UAEZ2B,SAAU,CACRnT,KAAM,WACN4B,YACE,0IACF4P,SAAU,YAEZ4B,YAAa,CACXpT,KAAM,cACN4B,YACE,qRACF4P,SAAU,QAEZ6B,UAAW,CACTrT,KAAM,YACN4B,YACE,gJACF4P,SAAU,SAEZ8B,SAAU,CACRtT,KAAM,WACN4B,YACE,uIACF4P,SAAU,WAEZ,eAAgB,CACdxR,KAAM,eACN4B,YACE,2NACF4P,SAAU,SAEZ+B,UAAW,CACTvT,KAAM,YACN4B,YACE,0OACF4P,SAAU,QAEZ,iBAAkB,CAChBxR,KAAM,iBACN4B,YACE,2KACF4P,SAAU,WAEZgC,OAAQ,CACNxT,KAAM,SACN4B,YACE,+QACF4P,SAAU,WAEZiC,eAAgB,CACdzT,KAAM,iBACN4B,YACE,gPACF4P,SAAU,UAEZkC,aAAc,CACZ1T,KAAM,eACN4B,YACE,iNACF4P,SAAU,YAEZmC,WAAY,CACV3T,KAAM,aACN4B,YACE,6OACF4P,SAAU,WAEZoC,aAAc,CACZ5T,KAAM,eACN4B,YACE,mMACF4P,SAAU,SAEZ,eAAgB,CACdxR,KAAM,eACN4B,YACE,qNACF4P,SAAU,OAEZqC,OAAQ,CACN7T,KAAM,SACN4B,YACE,8KACF4P,SAAU,gBAEZsC,OAAQ,CACN9T,KAAM,SACN4B,YACE,oGACF4P,SAAU,QAEZuC,QAAS,CACP/T,KAAM,UACN4B,YACE,6HACF4P,SAAU,gBAEZwC,QAAS,CACPhU,KAAM,UACN4B,YACE,sKACF4P,SAAU,QAEZ,0BAA2B,CACzBxR,KAAM,0BACN4B,YACE,wOACF4P,SAAU,OAEZ,eAAgB,CACdxR,KAAM,eACN4B,YACE,+MACF4P,SAAU,gBAEZyC,QAAS,CACPjU,KAAM,UACN4B,YACE,iNACF4P,SAAU,SAEZ0C,YAAa,CACXlU,KAAM,cACN4B,YACE,qLACF4P,SAAU,WAEZ2C,QAAS,CACPnU,KAAM,UACN4B,YACE,mLACF4P,SAAU,YAEZ,cAAe,CACbxR,KAAM,cACN4B,YACE,4KACF4P,SAAU,SAEZ4C,QAAS,CACPpU,KAAM,UACN4B,YACE,+LACF4P,SAAU,WAEZ6C,QAAS,CACPrU,KAAM,UACN4B,YACE,8NACF4P,SAAU,QAEZ8C,SAAU,CACRtU,KAAM,WACN4B,YACE,sLACF4P,SAAU,UAEZ+C,WAAY,CACVvU,KAAM,aACN4B,YACE,wLACF4P,SAAU,cAEZ,aAAc,CACZxR,KAAM,aACN4B,YACE,sNACF4P,SAAU,UAEZgD,OAAQ,CACNxU,KAAM,SACN4B,YACE,8JAEJ6S,OAAQ,CACNzU,KAAM,SACN4B,YACE,yIAEJ8S,OAAQ,CACN1U,KAAM,SACN4B,YACE,+PAEJ+S,YAAa,CACX3U,KAAM,cACN4B,YACE,0LAEJgT,SAAU,CACR5U,KAAM,WACN4B,YACE,4EAEJiT,KAAM,CACJ7U,KAAM,OACN4B,YACE,8OAEJ,eAAgB,CACd5B,KAAM,eACN4B,YACE,8HAEJkT,MAAO,CACL9U,KAAM,QACN4B,YAAY,kQAMdmT,OAAQ,CACN/U,KAAM,SACN4B,YAAY,wTAMdoT,SAAU,CACRhV,KAAM,WACN4B,YACE,gIAEJqT,SAAU,CACRjV,KAAM,WACN4B,YACE,2LAEJsT,SAAU,CACRlV,KAAM,WACN4B,YACE,8NAEJuT,OAAQ,CACNnV,KAAM,SACN4B,YAAY,oRAMdwT,SAAU,CACRpV,KAAM,WACN4B,YACE,sPAGJyT,QAAS,CACPrV,KAAM,UACN4B,YAAY,yTAKd0T,QAAS,CACPtV,KAAM,UACN4B,YACE,2IAEJ2T,QAAS,CACPvV,KAAM,UACN4B,YACE,+GAEJ4T,QAAS,CACPxV,KAAM,UACN4B,YAAY,0MAMd6T,UAAW,CACTzV,KAAM,YACN4B,YACE,gKAEJ8T,OAAQ,CACN1V,KAAM,SACN4B,YAAY,6PAId+T,YAAa,CACX3V,KAAM,cACN4B,YAAY,wJAEdgU,OAAQ,CACN5V,KAAM,SACN4B,YAAY,8NAEdiU,QAAS,CACP7V,KAAM,UACN4B,YAAY,iMAEdkU,QAAS,CACP9V,KAAM,UACN4B,YAAY,qOAEdmU,OAAQ,CACN/V,KAAM,SACN4B,YAAY,6CAEdoU,UAAW,CACThW,KAAM,YACN4B,YAAY,iPAKdqU,MAAO,CACLjW,KAAM,QACN4B,YACE,4IAEJsU,aAAc,CACZlW,KAAM,eACN4B,YACE,uQAEJuU,OAAQ,CACNnW,KAAM,SACN4B,YAAY,wUAMdwU,aAAc,CACZpW,KAAM,eACN4B,YACE,4MAEJyU,SAAU,CACRrW,KAAM,WACN4B,YAAY,kRAMd0U,aAAc,CACZtW,KAAM,eACN4B,YAAY,sMAEd2U,QAAS,CACPvW,KAAM,UACN4B,YAAY,gOAEd4U,MAAO,CACLxW,KAAM,QACN4B,YAAY,uRAEd6U,UAAW,CACTzW,KAAM,YACN4B,YAAY,0VAKd8U,UAAW,CACT1W,KAAM,YACN4B,YAAY,2NAEd+U,OAAQ,CACN3W,KAAM,SACN4B,YACE,uOAEJgV,SAAU,CACR5W,KAAM,WACN4B,YACE,+LAEJiV,WAAY,CACV7W,KAAM,aACN4B,YACE,sNAEJkV,YAAa,CACX9W,KAAM,cACN4B,YACE,iMAEJmV,aAAc,CACZ/W,KAAM,eACN4B,YACE,wQA2fOoV,GAAgB,WAC3B,IAAMC,EAAWhW,iBAAOJ,OAAOC,KAAKwQ,KACpC,OAAK2F,EACE3F,GAAY2F,GADG,MCviCTC,GA7BgB,WAAO,IAAD,EACqBjY,mBACtDoS,MAFiC,mBAC5B8F,EAD4B,KACNC,EADM,OAIuBnY,mBACxDgS,MALiC,mBAI5BoG,EAJ4B,KAILC,EAJK,KAOnC,OACE,iCACE,kBAAC7Y,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNE,QAAS,kBAAMuY,EAAwB/F,QAHzC,yBAOA,4BAAK8F,GACL,kBAAC1Y,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNE,QAAS,kBAAMyY,EAAyBrG,QAH1C,0BAOA,4BAAKoG,KCjBLE,GAA6B,CACjC,CACEC,MAAO,aACP5V,YACE,gFAEJ,CACE4V,MAAO,YACP5V,YACE,wFAEJ,CACE4V,MAAO,aACP5V,YAAa,6DAEf,CACE4V,MAAO,aACP5V,YAAa,sDAEf,CACE4V,MAAO,aACP5V,YACE,iGAEJ,CACE4V,MAAO,aACP5V,YACE,8IAEJ,CAAE4V,MAAO,aAAc5V,YAAa,yCACpC,CACE4V,MAAO,UACP5V,YACE,6EAEJ,CACE4V,MAAO,UACP5V,YAAa,uDAEf,CACE4V,MAAO,YACP5V,YACE,kIAEJ,CACE4V,MAAO,QACP5V,YACE,mEAEJ,CACE4V,MAAO,aACP5V,YACE,wKAEJ,CACE4V,MAAO,aACP5V,YACE,+EAEJ,CACE4V,MAAO,cACP5V,YACE,oNAIAmI,GAAkB,CACtB,aACA,UACA,WACA,WACA,UACA,YAGW0N,GAAc,WAAY,IAAD,EAEhCC,EACA3T,EAFE4T,EAAM1W,iBAAOsW,IAYnB,MATmB,iBAAZ,OAAHI,QAAG,IAAHA,OAAA,EAAAA,EAAKH,OACPE,EAAQlV,EAAmB,QAAS,GACZ,gBAAZ,OAAHmV,QAAG,IAAHA,OAAA,EAAAA,EAAKH,OACdE,EAAQlV,EAAmB,UAAW,GACd,gBAAZ,OAAHmV,QAAG,IAAHA,OAAA,EAAAA,EAAKH,OACdE,EAAQlV,EAAmB,QAAS,GACZ,gBAAZ,OAAHmV,QAAG,IAAHA,OAAA,EAAAA,EAAKH,SACdzT,EAAa9C,iBAAO8I,KAEf,CACL5H,KAAI,UAAElB,iBAAO,CAAC,MAAO,iBAAjB,QAA8B,QAClCuW,MAAO,CACLA,MAAK,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAKH,MACZ5V,YAAW,OAAE+V,QAAF,IAAEA,OAAF,EAAEA,EAAK/V,YAClB8V,QACA3T,gB,iHCtGC,IAAMsC,GAAY/H,IAAO8O,QAAV,MA+BPwK,GA1BE,WAAO,IAAD,UACmB3Y,mBAAcwY,MADjC,mBACdI,EADc,KACAC,EADA,KAKrB,OACE,kBAAC,GAAD,KACE,kBAACrZ,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,QALzB,WACrBiZ,EAAgBL,QAId,gBAGCI,EAAaL,OACZ,4BACGK,EAAaL,MAAMA,MADtB,KAC+BK,EAAa1V,KAD5C,KAIF,sCAAK0V,EAAaL,aAAlB,aAAK,EAAoB5V,cACxB,UAAAiW,EAAaL,aAAb,eAAoBE,QACnB,2BAAIG,EAAaL,MAAME,MAAM/V,KAAKgE,KAAI,SAAClC,GAAD,OAAOA,EAAEzD,QAAMqK,KAAK,QAE3D,UAAAwN,EAAaL,aAAb,eAAoBzT,aACnB,qCAAI8T,EAAaL,aAAjB,aAAI,EAAoBzT,cCrB1BgU,GAA8B,CAClC,CACE/X,KAAM,UACN4B,YACE,qMAEJ,CACE5B,KAAM,aACN4B,YACE,6QAEJ,CACE5B,KAAM,WACN4B,YACE,mQAEJ,CACE5B,KAAM,gBACN4B,YACE,0LAEJ,CACE5B,KAAM,kBACN4B,YACE,4WAEJ,CACE5B,KAAM,mBACN4B,YACE,2RAGJ,CACE5B,KAAM,aACN4B,YACE,gLAIAoW,GAAmC,CACvC,CACEhY,KAAM,UACN4B,YACE,uHAEJ,CACE5B,KAAM,qBACN4B,YACE,sHAGJ,CACE5B,KAAM,YACN4B,YACE,mIAEJ,CAAE5B,KAAM,YAAa4B,YAAa,6BAClC,CACE5B,KAAM,aACN4B,YACE,iFAEJ,CACE5B,KAAM,aACN4B,YACE,kEAEJ,CACE5B,KAAM,eACN4B,YACE,2GAEJ,CACE5B,KAAM,UACN4B,YAAa,mEAEf,CACE5B,KAAM,QACN4B,YACE,iHAEJ,CACE5B,KAAM,UACN4B,YACE,uIAEJ,CACE5B,KAAM,UACN4B,YACE,mJAEJ,CACE5B,KAAM,UACN4B,YAAa,2DAEf,CACE5B,KAAM,UACN4B,YACE,iIAEJ,CACE5B,KAAM,YACN4B,YACE,2HAEJ,CACE5B,KAAM,YACN4B,YACE,8EAEJ,CACE5B,KAAM,WACN4B,YACE,0HAEJ,CACE5B,KAAM,QACN4B,YACE,oIAEJ,CACE5B,KAAM,WACN4B,YACE,gGAEJ,CACE5B,KAAM,UACN4B,YACE,iGAEJ,CACE5B,KAAM,SACN4B,YACE,+IAIOqW,GAAiB,WAC5B,IACIC,EADEC,EAASrV,iBAAO,GAAKA,iBAAO,GAEjBoV,EAAbC,GAAU,EAAU,EACfA,GAAU,EAAU,EACpBA,GAAU,EAAU,EACpBA,GAAU,GAAW,EAClB,EACZ,IAAMC,EAAWrV,qBAAWiV,GAAcG,GAK1C,OAJIC,EAASpV,MAAK,SAACqV,GAAD,MAAkB,YAAXA,EAAErY,UACzBkY,GAAc,GAGT,CACLA,OACAV,MAAOW,EACPG,KAAMrX,iBAAO8W,IACbK,a,gOC9JJ,IAAMG,GAAWja,IAAO6F,IAAV,MAGRkC,GAAY/H,IAAO8O,QAAV,MAuCAoL,GAjCK,WAAO,IAAD,IACsBvZ,mBAC5CgZ,MAFsB,mBACjBQ,EADiB,KACAC,EADA,KAOxB,OACE,kBAAC,GAAD,KACE,kBAACja,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,QALtB,WACxB6Z,EAAmBT,QAIjB,mBAGCQ,EAAgBH,MACf,oCACE,4BACGG,EAAgBH,KAAKtY,KADxB,YACuCyY,EAAgBjB,MADvD,UACqE,IAClEiB,EAAgBP,KAFnB,KAIA,4BAAKO,EAAgBH,KAAK1W,cAG9B,kBAAC2W,GAAD,eACGE,EAAgBL,gBADnB,aACG,EAA0BzS,KAAI,SAAC0S,GAAD,OAC7B,uBAAGzS,IAAKyS,EAAErY,MACR,gCAASqY,EAAErY,MADb,IAC6B,IAC1BqY,EAAEzW,YAAY+W,QAAQ,IAAKF,EAAgBP,KAAKU,mB,yOChC7D,IAAMC,GAAWva,IAAO6F,IAAV,MAIRkC,GAAY/H,IAAO8O,QAAV,MA6BA0L,GAzBI,WAAO,IAAD,EACqB7Z,mBAC1C+X,MAFqB,mBAChB+B,EADgB,KACAC,EADA,KAIvB,OACE,kBAAC,GAAD,KACE,kBAACva,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNE,QAAS,kBAAMma,EAAkBhC,QAHnC,kBAOA,kBAAC6B,GAAD,KACGE,GACC,oCACE,4BAAKjT,oBAAUiT,EAAe/Y,OAC9B,2BAAI+Y,EAAenX,iBCC/B,SAASqX,GAASC,GAAuB,IAC/BC,EAAqCD,EAArCC,SAAU1T,EAA2ByT,EAA3BzT,MAAO2T,EAAoBF,EAApBE,MAAUC,EADG,YACOH,EADP,8BAGtC,OACE,uCACEI,KAAK,WACLC,OAAQ9T,IAAU2T,EAClB9T,GAAE,0BAAqB8T,GACvBpS,kBAAA,qBAA+BoS,IAC3BC,GAEHF,GAYP,IAAMK,GAAO,CACX,CAAE5T,IAAK,YAAavF,UAAW,kBAAC,EAAD,OAC/B,CAAEuF,IAAK,QAASvF,UAAW,kBAAC,EAAD,OAC3B,CAAEuF,IAAK,SAAUvF,UAAW,kBAAC,GAAD,OAC5B,CAAEuF,IAAK,OAAQvF,UAAW,kBAAC,GAAD,OAC1B,CAAEuF,IAAK,SAAUvF,UAAW,kBAAC,GAAD,OAC5B,CAAEuF,IAAK,WAAYvF,UAAW,kBAAC,EAAD,OAC9B,CAAEuF,IAAK,aAAcvF,UAAW,kBAAC,GAAD,OAChC,CAAEuF,IAAK,UAAWvF,UAAW,kBAAC,EAAD,OAC7B,CAAEuF,IAAK,YAAavF,UAAW,kBAAC,GAAD,OAC/B,CAAEuF,IAAK,QAASvF,UAAW,kBAAC,EAAD,OAC3B,CAAEuF,IAAK,cAAevF,UAAW,kBAAC,GAAD,OACjC,CAAEuF,IAAK,UAAWvF,UAAW,kBAAC,GAAD,OAC7B,CAAEuF,IAAK,SAAUvF,UAAW,kBAAC,GAAD,OAC5B,CAAEuF,IAAK,SAAUvF,UAAW,kBAAC,GAAD,QAmDfoZ,OAjDf,WACE,IAAMC,EAAUC,cACZC,EAAkBJ,GAAKK,WACzB,SAACpW,GAAD,OAAOiW,EAAQvb,SAAS2b,WAAjB,WAAkCrW,EAAEmC,QAEzCgU,EAAkB,IACpBA,EAAkB,GANP,MAQ+B3a,mBAAiB2a,GARhD,mBAQNG,EARM,KAQUC,EARV,KAkBb,OADAC,QAAQC,IAAIR,GAEV,yBAAKS,UAAU,OACb,kBAACC,GAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,GAAA,EAAD,CACE7U,MAAOsU,EACPvZ,SAda,SAACV,EAAYya,GAChCb,EAAQc,KAAR,WAAiBhB,GAAKe,GAAU3U,MAChCoU,EAAkBO,IAaZ7b,QAAQ,aACR+b,cAAc,KACdC,aAAW,uBAEVlB,GAAK7T,KAAI,SAAClC,EAAGkX,GAAJ,OACR,kBAACC,GAAA,EAAD,eAAKja,MAAOmF,oBAAUrC,EAAEmC,MAnD3B,CACLN,GAAG,cAAD,OAFa8T,EAoDqCuB,GAjDpD,gBAAgB,mBAAhB,OAAoCvB,MAHxC,IAAmBA,OAwDb,kBAAC,IAAD,CACEyB,KAAM,IACNzB,MAAOW,EACPe,cAvBoB,SAAC1B,GACzBM,EAAQc,KAAR,WAAiBhB,GAAKJ,GAAOxT,MAC7BoU,EAAkBZ,KAuBbI,GAAK7T,KAAI,SAAClC,EAAGkX,GAAJ,OACR,kBAAC1B,GAAD,CAAUxT,MAAOsU,EAAgBX,MAAOuB,GACtC,4BAAK7U,oBAAUrC,EAAEmC,MAChBnC,EAAEpD,iB,SClGA0a,GATY,WACzB,OACE,kBAAC,KAAD,CAAeC,SAAUC,kBACvB,kBAAC,IAAD,CAAO5a,UAAWoZ,GAAKyB,KAAM,UAC7B,kBAAC,IAAD,CAAO7a,UAAWoZ,GAAKyB,KAAM,IAAKC,OAAK,MCJ7CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFrN,SAASC,eAAe,SvCyHpB,kBAAmBqN,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,a","file":"static/js/main.da015a70.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from \"styled-components\";\n\nexport const IFrame = styled.iframe`\n  width: 100%;\n  height: 30em;\n`;\n","import React, { FC } from \"react\";\n// import styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\n\n// const IFrame = styled.iframe`\n//   position: absolute;\n//   left: 0;\n//   bottom: 0;\n//   width: 100%;\n//   height: 75%;\n//   border: 2px;\n// `;\nconst Names: FC = () => {\n  return (\n    <>\n      <Button\n        variant=\"text\"\n        color=\"secondary\"\n        size=\"medium\"\n        onClick={() =>\n          window.open(\"https://donjon.bin.sh/scifi/name/\", \"_blank\")\n        }\n      >\n        Link to Donjon\n      </Button>\n      |\n      <Button\n        variant=\"text\"\n        color=\"secondary\"\n        size=\"medium\"\n        onClick={() =>\n          window.open(\n            \"https://www.fantasynamegenerators.com/futuristic-names.php\",\n            \"_blank\"\n          )\n        }\n      >\n        Link to FNG\n      </Button>\n    </>\n  );\n};\n\nexport default Names;\n","import React, { useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Button } from \"@material-ui/core\";\nimport { sample } from \"lodash\";\n\nconst questionsTable = [\"Who\", \"What\", \"When\", \"Where\", \"Why\"];\n\nexport default function CheckboxesGroup() {\n  const [playersPresent, setPlayersPresent] = useState<any>({\n    Alex: false,\n    Devon: false,\n    Talicia: false,\n    JaMile: false,\n    TRX: false,\n    Joe: false,\n    Noodles: false,\n  });\n  const [questionResults, setQuestionResults] = useState<any>({});\n  const generateQuestions = () => {\n    const result = {} as any;\n    Object.keys(playersPresent).forEach((player) => {\n      if (playersPresent[player]) {\n        result[player] = sample(questionsTable);\n      }\n    });\n    setQuestionResults(result);\n  };\n  const handleChange = (event: any) => {\n    setPlayersPresent({\n      ...playersPresent,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const genLabel = (name: string, question: string) => {\n    if (!question) {\n      return name;\n    } else {\n      return `${name} => ${question}`;\n    }\n  };\n  return (\n    <>\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormGroup>\n            <FormControlLabel\n              checked={playersPresent.Alex}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"Alex\"\n              label={genLabel(\"Alex\", questionResults.Alex)}\n            />\n            <FormControlLabel\n              checked={playersPresent.Devon}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"Devon\"\n              label={genLabel(\"Devon\", questionResults.Devon)}\n            />\n            <FormControlLabel\n              checked={playersPresent.Talicia}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"Talicia\"\n              label={genLabel(\"Talicia\", questionResults.Talicia)}\n            />\n            <FormControlLabel\n              checked={playersPresent.TRX}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"TRX\"\n              label={genLabel(\"TRX\", questionResults.TRX)}\n            />\n            <FormControlLabel\n              checked={playersPresent.Noodles}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"Noodles\"\n              label={genLabel(\"Noodles\", questionResults.Noodles)}\n            />\n            <FormControlLabel\n              checked={playersPresent.JaMile}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"JaMile\"\n              label={genLabel(\"JaMile\", questionResults.JaMile)}\n            />\n            <FormControlLabel\n              checked={playersPresent.Joe}\n              control={<Checkbox />}\n              onChange={handleChange}\n              name=\"Joe\"\n              label={genLabel(\"Joe\", questionResults.Joe)}\n            />\n          </FormGroup>\n        </FormControl>\n      </div>\n      <Button variant=\"contained\" color=\"primary\" onClick={generateQuestions}>\n        Generate Questions\n      </Button>\n    </>\n  );\n}\n","import { sample } from \"lodash\";\n\nexport const traits = [\n  [\n    [\"Sinister\", \"Controlling\", \"Secretive\", \"Popular\", \"Rapacious\", \"Austere\"],\n    [\"Wealthy\", \"Honorable\", \"Violent\", \"Degenerate\", \"Defiant\", \"Tyrannical\"],\n    [\"Brutal\", \"Underhanded\", \"Ancient\", \"Terrifying\", \"Fanatic\", \"Brave\"],\n  ],\n  [\n    [\n      \"Expansionist\",\n      \"Scientific\",\n      \"Authoritarian\",\n      \"Colonizing\",\n      \"Trade\",\n      \"Mercenary\",\n    ],\n    [\n      \"Merchant\",\n      \"Industrious\",\n      \"Criminal\",\n      \"Military\",\n      \"Anarchist\",\n      \"Starfaring\",\n    ],\n    [\n      \"Rebel\",\n      \"High Tech\",\n      \"Diplomatic\",\n      \"Corporate\",\n      \"Regimented\",\n      \"Political\",\n    ],\n  ],\n  [\n    [\"Government\", \"Cult\", \"Fleet\", \"Council\", \"Corporation\", \"Federation\"],\n    [\"Society\", \"Coalition\", \"Armada\", \"Network\", \"Consortium\", \"Republic\"],\n    [\"Empire\", \"Religion\", \"Regime\", \"Cartel\", \"Alliance\", \"Legion\"],\n  ],\n];\n\nexport const generateFactionTraits = () => {\n  const col1Result = sample(sample(traits[0]));\n  const col2Result = sample(sample(traits[1]));\n  const col3Result = sample(sample(traits[2]));\n\n  return [col1Result, col2Result, col3Result];\n};\n","import { sample } from \"lodash\";\n\nconst factions = [\n  \"Commonwealth\",\n  \"ISAC\",\n  \"Star Gazers\",\n  \"Chronophages\",\n  \"Kardashians\",\n  \"Naughts\",\n  \"Confeddis\",\n  \"RaiderNet\",\n  \"Union\",\n  \"C.B.D\",\n  \"Torillian\",\n  \"Exo\",\n  \"Spartans\",\n  \"Silexian\",\n  \"Soylent Meme\",\n  \"Unity\",\n  //   \"Humai\",\n  //   \"Contra\",\n  //   \"Chaati\",\n  //   \"Veggimites\",\n  //   \"Reptilia\",\n  //   \"Mammalian\",\n  //   \"Tiefling\",\n  //   \"Infernal\",\n  //   \"Celestian\",\n  //   \"Fey\",\n  //   \"Primordial\",\n];\n\nexport const generateHomebrewFaction = (): string | undefined => {\n  return sample(factions);\n};\n","import React, { FC, useState } from \"react\";\nimport { generateFactionTraits, generateHomebrewFaction } from \"./utils\";\nimport { Button } from \"@material-ui/core\";\n\nconst Factions: FC = () => {\n  const [generatedFaction, setGeneratedFaction] = useState<\n    (string | undefined)[]\n  >();\n  const generateNewFaction = () => {\n    setGeneratedFaction(generateFactionTraits());\n  };\n  const [generatedHomebrewFaction, setHomebrewGeneratedFaction] = useState<\n    string | undefined\n  >();\n  const generateNewHomebrewFaction = () => {\n    setHomebrewGeneratedFaction(generateHomebrewFaction());\n  };\n  return (\n    <section>\n      {generatedFaction && (\n        <h3>\n          {generatedFaction[0]} - {generatedFaction[1]} - {generatedFaction[2]}\n        </h3>\n      )}\n      <Button variant=\"contained\" color=\"primary\" onClick={generateNewFaction}>\n        Generate Faction\n      </Button>\n      <h3>{generatedHomebrewFaction}</h3>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={generateNewHomebrewFaction}\n      >\n        Generate Homebrew Faction\n      </Button>\n    </section>\n  );\n};\n\nexport default Factions;\n","import { random, sample, sampleSize } from \"lodash\";\n\nexport interface Tag {\n  description: string;\n  name: string;\n}\n\nexport interface GeneratedItem {\n  armed?: Tag;\n  classLevel: number;\n  design?: string;\n  locomotion?: string;\n  tags: Tag[];\n  type: ItemTypes;\n  switching?: Tag[];\n  weapon?: Tag;\n  deadly?: Tag[];\n  tool?: Tag;\n}\n\nexport interface ItemTraits {\n  melee: {\n    tags: Tag[];\n  };\n  firearm: {\n    types: (\"pistol\" | \"rifle\")[];\n    tags: Tag[];\n  };\n  heavy: {\n    tags: Tag[];\n  };\n  explosive: {\n    types: (\"grenade\" | \"charge\" | \"missile\")[];\n    tags: Tag[];\n  };\n  artillery: {\n    tags: Tag[];\n  };\n  attire: {\n    type: (\"rugged\" | \"simple\" | \"cultural\" | \"formal\" | \"uniform\")[];\n    tags: Tag[];\n  };\n  landVehicle: {\n    type: (\"bike\" | \"groundcar\" | \"walker\" | \"quadwalker\")[];\n    tags: Tag[];\n  };\n  flyer: {\n    type: (\"speeder\" | \"shuttle\")[];\n    tags: Tag[];\n  };\n  crew: {\n    type: (\"squad\" | \"techs\" | \"gang\" | \"staff\" | \"artificial\")[];\n    tags: Tag[];\n  };\n  beast: {\n    type: (\"weapon\" | \"locomotion\")[];\n    tags: Tag[];\n  };\n}\n\nexport type ItemTypes =\n  | \"melee\"\n  | \"firearm\"\n  | \"heavy\"\n  | \"explosive\"\n  | \"artillery\"\n  | \"attire\"\n  | \"landVehicle\"\n  | \"flyer\"\n  | \"crew\"\n  | \"beast\";\n\nexport const itemTraits: ItemTraits = {\n  melee: {\n    tags: [\n      {\n        name: \"Consecrated\",\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n      },\n      {\n        description: \"Causes harm to anyone but its true owner.\",\n        name: \"Dangerous\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Creates a lasting elemental reaction. Ex: fire, corrosion, frost, smoke, etc.\",\n        name: \"Elemental\",\n      },\n      {\n        description:\n          \"A living organic creature. Minor mobility. Regrows and regenerates if hurt.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Two weapons that act in perfect tandem. Mediocre if used separately.\",\n        name: \"Paired\",\n      },\n      {\n        description: \"Glows with light. Unleashes blinding flashes.\",\n        name: \"Radiant\",\n      },\n      {\n        description:\n          \"Choose a skill. Lessens/diverts/absorbs some of the consequences of failures.\",\n        name: \"Specialized\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Choose 2 basic upgrades. The weapon can switch forms between those two.\",\n        name: \"Switching\",\n      },\n      {\n        description:\n          \"Choose the element or concept this weapon drinks (heat, blood, fear, etc.).\",\n        name: \"Syphon\",\n      },\n      {\n        description:\n          \"A cyber weapon program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description: \"Inconspicuous, easily hidden, doesn’t show on scanners.\",\n        name: \"Concealed\",\n      },\n      {\n        description: \"Can parry, deflect, and disarm.\",\n        name: \"Defensive\",\n      },\n      {\n        description:\n          \"Causes property damage and damages machinery and vehicles.\",\n        name: \"Destructive\",\n      },\n      {\n        description:\n          \"Glows with incandescent energy, melts, burns, cauterizes.\",\n        name: \"Energy\",\n      },\n      {\n        description:\n          \"Whip-like length capable of binding and lashing. Optimal Range: Adjacent\",\n        name: \"Flexible\",\n      },\n      {\n        description: \"A heavy, weaponized glove. Can still manipulate objects.\",\n        name: \"Glove\",\n      },\n      {\n        description:\n          \"Two handed. Long reach. Sweeping attacks. Range: Melee, Adjacent\",\n        name: \"Hafted\",\n      },\n      {\n        description:\n          \"Two handed. Massive, resilient. Heavy, devastating attacks, hard to block.\",\n        name: \"Heavy\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Impact\",\n      },\n      {\n        description:\n          \"Can pin targets, pierce thin materials, and stab with great accuracy.\",\n        name: \"Piercing\",\n      },\n      {\n        description: \"Loud mechanical motion rips, tears, grinds or shreds\",\n        name: \"Ripper\",\n      },\n      {\n        description: \"Chops, cuts, causes bleeding and can sever limbs.\",\n        name: \"Severing\",\n      },\n      {\n        description:\n          \"Electrocutes, harms electronics and robots. Can stun on low settings.\",\n        name: \"Shock\",\n      },\n      {\n        description: \"Looks impressive, distinctive, and unique.\",\n        name: \"Stylish\",\n      },\n      {\n        description:\n          \"Range: Adjacent, Close. Handful of one-handed throwing weapons.\",\n        name: \"Thrown\",\n      },\n    ],\n  },\n  firearm: {\n    types: [\"pistol\", \"rifle\"],\n    tags: [\n      {\n        description:\n          \"Choose a Skill. Characters with that Skill can use it through the weapon.\",\n        name: \"Channel\",\n      },\n      {\n        description:\n          \"Takes significant time to charge up, vastly increased damage at full charge.\",\n        name: \"Charged\",\n      },\n      {\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n        name: \"Consecrated\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"A living organic creature. Regrows its own ammo over time.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Two pistols that act in perfect tandem. Mediocre if used separately.\",\n        name: \"Paired\",\n      },\n      {\n        description:\n          \"Projectiles unleash blinding flashes and illuminate targets.\",\n        name: \"Radiant\",\n      },\n      {\n        description:\n          \"Projectiles bounce off hard surfaces, allowing for trick shots.\",\n        name: \"Ricochet\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Choose 2 basic upgrades. The weapon can switch forms between those two.\",\n        name: \"Switching\",\n      },\n      {\n        description:\n          \"Choose the element or concept this weapon drinks (heat, blood, fear, etc.).\",\n        name: \"Syphon\",\n      },\n      {\n        description:\n          \"A cyber weapon program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description:\n          \"Attach Class 0 Small weapon with Sharp, Ripper, Energy or Shock.\",\n        name: \"Attachment\",\n      },\n      {\n        description: \"Instead of a single shot, sprays shots in a wide cone.\",\n        name: \"Burst\",\n      },\n      {\n        description: \"Inconspicuous, easily hidden, doesn’t show on scanners.\",\n        name: \"Concealed\",\n      },\n      {\n        description:\n          \"Creates a lasting chemical reaction. Ex: fire, corrosion, frost, smoke, etc.\",\n        name: \"Chemical\",\n      },\n      {\n        description: \"Causes property damage, damages machinery and vehicles.\",\n        name: \"Destructive\",\n      },\n      {\n        description:\n          \"Loud. Causes messy wounds and property damage near the point of impact.\",\n        name: \"Explosive\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Impact\",\n      },\n      {\n        description: \"Can only be fired by you unless you unlock it.\",\n        name: \"Keyed\",\n      },\n      {\n        description:\n          \"Projects focused beams of energy that can cut or melt materials.\",\n        name: \"Laser\",\n      },\n      {\n        description: \"Lobbed, arcing projectile with a modest area of effect.\",\n        name: \"Launcher\",\n      },\n      {\n        description: \"Mounted to a forearm or shoulder rig, keeps hands free.\",\n        name: \"Mounted\",\n      },\n      { description: \"Ignores Armor.\", name: \"Penetrating\" },\n      {\n        description: \"Fires bright bolts of supercharged, burning energy.\",\n        name: \"Plasma\",\n      },\n      {\n        description: \"Unleashes suppressing fire at multiple targets.\",\n        name: \"Rapid Fire\",\n      },\n      {\n        description:\n          \"Can fire at distant objects. Optimal Ranges: Far, Distant.\",\n        name: \"Scope\",\n      },\n      {\n        description: \"Electrocutes, harms electronics and robots.\",\n        name: \"Shock\",\n      },\n      {\n        description:\n          \"Causes heavy bleeding and disfigurement around the target.\",\n        name: \"Shrapnel\",\n      },\n      {\n        description: \"Suppressed muzzle flash and practically silent shot.\",\n        name: \"Silenced\",\n      },\n      {\n        description: \"No recoil, can be used in micro-gravity environments.\",\n        name: \"Stabilized\",\n      },\n      {\n        description: \"Non-lethal. Stuns, snares, or renders unconscious.\",\n        name: \"Stun\",\n      },\n      {\n        description: \"Looks impressive, distinctive, and unique.\",\n        name: \"Stylish\",\n      },\n    ],\n  },\n  heavy: {\n    tags: [\n      {\n        description:\n          \"Takes significant time to charge up, vastly increased damage at full charge.\",\n        name: \"Charged\",\n      },\n      {\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n        name: \"Consecrated\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Creates a brief implosion that draws in nearby targets and objects.\",\n        name: \"Implosion\",\n      },\n      {\n        description:\n          \"A living organic creature. Regrows its own ammo over time.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Projectiles bounce off hard surfaces, allowing for trick shots.\",\n        name: \"Ricochet\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Choose 2 basic upgrades. The weapon can switch forms between those two.\",\n        name: \"Switching\",\n      },\n      {\n        description:\n          \"Can be deployed and given simple directives. Fires using your +Interface.\",\n        name: \"Turret\",\n      },\n      {\n        description:\n          \"A cyber weapon program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description:\n          \"Breaching, Impact, and Detonation on a roll of 10+, then needs to recharge. \",\n        name: \"Volatile\",\n      },\n      {\n        description: \"Damages starships and reinforced structures.\",\n        name: \"Breaching\",\n      },\n      {\n        description:\n          \"Creates a lasting chemical reaction. Ex: fire, corrosion, frost, smoke, etc.\",\n        name: \"Chemical\",\n      },\n      {\n        description:\n          \"Exceptionally loud and bright. Stuns, deafens, blinds, and knocks away.\",\n        name: \"Concussive\",\n      },\n      {\n        description: \"Explodes in a large blast radius.\",\n        name: \"Detonation\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Impact\",\n      },\n      {\n        description: \"Can only be fired by you unless you unlock it.\",\n        name: \"Keyed\",\n      },\n      {\n        description:\n          \"Projects focused beams of energy that can cut or melt materials.\",\n        name: \"Laser\",\n      },\n      { description: \"Ignores Armor.\", name: \"Penetrating\" },\n      {\n        description: \"Fires bright bolts of supercharged, burning energy.\",\n        name: \"Plasma\",\n      },\n      {\n        description: \"Projectile arcs towards a moving target.\",\n        name: \"Seeking\",\n      },\n      {\n        description: \"Electrocutes, harms electronics and robots.\",\n        name: \"Shock\",\n      },\n      {\n        description:\n          \"Causes amputation, bleeding, and disfigurement in a wide radius.\",\n        name: \"Shrapnel\",\n      },\n      {\n        description:\n          \"Reduces distance but increases coverage to a wide cone. Optimal Range: Close.\",\n        name: \"Spray\",\n      },\n      {\n        description: \"Non-lethal. Stuns, snares, or renders unconscious.\",\n        name: \"Stun\",\n      },\n      {\n        description: \"Looks impressive, distinctive, and unique.\",\n        name: \"Stylish\",\n      },\n      {\n        description:\n          \"Unleashes a constant suppressing fire at multiple targets.\",\n        name: \"Sustained\",\n      },\n    ],\n  },\n  explosive: {\n    types: [\"charge\", \"missile\", \"grenade\"],\n    tags: [\n      {\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n        name: \"Consecrated\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Creates a brief implosion that draws in nearby targets and objects.\",\n        name: \"Implosion\",\n      },\n      {\n        description:\n          \"Continuous effect for several minutes, or repeats multiple times over an hour.\",\n        name: \"Ongoing\",\n      },\n      {\n        description:\n          \"Sends back telemetry needed to perform an Assessment. Non-lethal.\",\n        name: \"Scanner\",\n      },\n      {\n        description:\n          \"Grenade/Missile only. Used with +Interface, seeks target before exploding.\",\n        name: \"Seeking\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Grenade only. Explodes when conditions are met (signal, proximity, etc.).\",\n        name: \"Triggered\",\n      },\n      {\n        description:\n          \"A cyber weapon program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description:\n          \"Becomes Breaching, Concussive, and Kinetic on a roll of 10+ when using it.\",\n        name: \"Volatile\",\n      },\n      {\n        description:\n          \"Breaches reinforced buildings and starships. Charge only.\",\n        name: \"Breaching\",\n      },\n      {\n        description:\n          \"Creates a lasting chemical reaction. Ex: incendiary, corrosion, frost, smoke etc.\",\n        name: \"Chemical\",\n      },\n      {\n        description:\n          \"Scatters secondary explosives in the area, which detonate moments later.\",\n        name: \"Cluster\",\n      },\n      {\n        description: \"Inconspicuous, easily hidden, doesn’t show on scanners.\",\n        name: \"Concealed\",\n      },\n      {\n        description:\n          \"Exceptionally loud and bright. Stuns, deafens, blinds, and knocks away.\",\n        name: \"Concussive\",\n      },\n      {\n        description:\n          \"Causes property damage, damages machinery and vehicles. Grenade only.\",\n        name: \"Destructive\",\n      },\n      {\n        description: \"Directed high explosive force, little collateral damage.\",\n        name: \"Focused\",\n      },\n      {\n        description:\n          \"Scrambles and disrupts electronic systems, scanners, and advanced weaponry.\",\n        name: \"Haywire\",\n      },\n      {\n        description:\n          \"Massive area of effect, city block or more. Charge or Missile only.\",\n        name: \"High Yield\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Kinetic\",\n      },\n      {\n        description:\n          \"Creates a nova of incandescent energy that vaporizes matter.\",\n        name: \"Plasma\",\n      },\n      {\n        description: \"Electrocutes, harms electronics and robots.\",\n        name: \"Shock\",\n      },\n      {\n        description: \"Causes heavy bleeding, dismemberment, and disfigurement.\",\n        name: \"Shrapnel\",\n      },\n      {\n        description: \"Attaches itself to any surfaces, difficult to remove.\",\n        name: \"Sticky\",\n      },\n      {\n        description: \"Non-lethal. Stuns, snares, or renders unconscious.\",\n        name: \"Stun\",\n      },\n      {\n        description:\n          \"Creates impressive, distinctive, and unique visual effects.      \",\n        name: \"Stylish\",\n      },\n    ],\n  },\n  artillery: {\n    tags: [\n      {\n        description:\n          \"Resists non-Breaching damage. Crew +2 Armor from outside harm.\",\n        name: \"Armored\",\n      },\n      {\n        description:\n          \"Takes significant time to charge up, vastly increased damage at full charge.\",\n        name: \"Charged\",\n      },\n      {\n        description:\n          \"Creates a lasting chemical reaction. Ex: fire, corrosion, frost, smoke, etc.\",\n        name: \"Chemical\",\n      },\n      {\n        description:\n          \"Exceptionally loud and bright. Stuns, deafens, blinds, and knocks away.\",\n        name: \"Concussive\",\n      },\n      {\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n        name: \"Consecrated\",\n      },\n      { description: \"Explodes in a large blast radius.\", name: \"Detonation\" },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Impact\",\n      },\n      {\n        description:\n          \"Creates a brief implosion that draws in nearby targets and objects.\",\n        name: \"Implosion\",\n      },\n      {\n        description: \"Can only be fired by its owner unless they unlock it.\",\n        name: \"Keyed\",\n      },\n      {\n        description:\n          \"Projects focused beams of energy that can cut or melt materials.\",\n        name: \"Laser\",\n      },\n      {\n        description: \"Launches Missile explosives (see page 95).\",\n        name: \"Launcher\",\n      },\n      {\n        description:\n          \"A living organic creature. Minor mobility. Regrows its own ammo over time. \",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Constant effect for several minutes, or repeats multiple times over an hour. \",\n        name: \"Ongoing\",\n      },\n      {\n        description: \"Fires bright bolts of supercharged, burning energy.\",\n        name: \"Plasma\",\n      },\n      {\n        description:\n          \"Can be disassembled, carried, and set up elsewhere. Must be set up to fire. \",\n        name: \"Portable\",\n      },\n      {\n        description:\n          \"Fired with +Interface. Projectile arcs towards a moving target.\",\n        name: \"Seeking\",\n      },\n      {\n        description: \"Crew gains +1 Armor. Blocks remote Access and hacking.\",\n        name: \"Shielded\",\n      },\n      {\n        description: \"Electrocutes, harms electronics and robots.\",\n        name: \"Shock\",\n      },\n      {\n        description:\n          \"Causes amputation, bleeding, and disfigurement in a wide radius.\",\n        name: \"Shrapnel\",\n      },\n      {\n        description:\n          \"Reduces distance but increases coverage to a wide cone. Optimal Range: Far. \",\n        name: \"Spray\",\n      },\n      {\n        description: \"Non-lethal. Stuns, snares or renders unconscious.\",\n        name: \"Stun\",\n      },\n      {\n        description: \"Looks impressive, distinctive, and unique.\",\n        name: \"Stylish\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Unleashes a constant suppressing fire at multiple targets.\",\n        name: \"Sustained\",\n      },\n      {\n        description:\n          \"Choose 2 upgrades. The weapon can switch forms between those two. \",\n        name: \"Switching\",\n      },\n      {\n        description:\n          \"Concussive, Impact, and Detonation on a roll of 10+, then needs to recharge.\",\n        name: \"Volatile\",\n      },\n    ],\n  },\n  attire: {\n    type: [\"rugged\", \"simple\", \"cultural\", \"formal\", \"uniform\"],\n    tags: [\n      {\n        description:\n          \"Dedicated to a cause. Grants +2 Armor against enemies of that cause.\",\n        name: \"Consecrated\",\n      },\n      {\n        description:\n          \"The wearer and those nearby cannot use supernatural abilities.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Constantly creates the chosen mental state (rage, bliss, focus, etc.).\",\n        name: \"Emotional\",\n      },\n      {\n        description:\n          \"Aspects of the attire inconspicuously fold away, deployed when needed.\",\n        name: \"Folding\",\n      },\n      {\n        description:\n          \"A living organic creature. Heals and regrows naturally if damaged.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Bladed, spiked, etc. Limbs and body count as Severing melee weapons.\",\n        name: \"Sharp\",\n      },\n      {\n        description:\n          \"Mimic different Designs at will (rugged, simple, cultural, formal, uniform).\",\n        name: \"Shifting\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"A cyber armor program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      { description: \"+2 Armor.\", name: \"Armored\" },\n      { description: \"Clumsy, +3 Armor.\", name: \"Carapace\" },\n      {\n        description: \"Can receive and broadcast signals over great distances.\",\n        name: \"Comms\",\n      },\n      {\n        description:\n          \"Built in computer with eye-piece HUD, connects wirelessly to other systems.\",\n        name: \"Connected\",\n      },\n      {\n        description:\n          \"Ostentatious, distinctive, intimidating, with embellishments and accessories.\",\n        name: \"Impressive\",\n      },\n      {\n        description:\n          \"Can give small burst jumps, slow descent, and controlled flight in zero-g.\",\n        name: \"Jump Jets\",\n      },\n      {\n        description: \"+1 Armor that looks like normal fabric.\",\n        name: \"Meshweave\",\n      },\n      {\n        description:\n          \"Choose the Kit that is integrated in the suit. A second Kit can still be carried.\",\n        name: \"Rig\",\n      },\n      {\n        description: \"Protects from elements, hard to damage, easy to repair.\",\n        name: \"Tough\",\n      },\n      {\n        description:\n          \"An airtight suit, helmet and oxygen tank. Functions in space or under water.\",\n        name: \"Sealed\",\n      },\n      {\n        description:\n          \"Choose a type of information. Screen scans and displays that information.\",\n        name: \"Sensor\",\n      },\n      {\n        description:\n          \"+1 Armor provided by thin, invisible energy shield projected by the suit.\",\n        name: \"Shielded\",\n      },\n      {\n        description:\n          \"Muffled, blends in to environments and is difficult to pick up on scanners.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Choose a type of information. The visor detects that subject.\",\n        name: \"Visor\",\n      },\n    ],\n  },\n  landVehicle: {\n    type: [\"bike\", \"groundcar\", \"quadwalker\", \"walker\"],\n    tags: [\n      {\n        description:\n          \"Deals extra ramming damage. +6 Armor against head-on collisions.\",\n        name: \"Battering\",\n      },\n      {\n        description:\n          \"Covered in sharp implements. Can cut down or impale targets on foot.\",\n        name: \"Bladed\",\n      },\n      {\n        description:\n          \"Locked, sealed, shielded compartment. Special codes/keys needed to open.\",\n        name: \"Containment\",\n      },\n      {\n        description:\n          \"Aspects of the vehicle inconspicuously fold away, deployed when needed.\",\n        name: \"Folding\",\n      },\n      {\n        description:\n          \"Designed to be piloted by a chosen person, hostile/resistant to other pilots.\",\n        name: \"Keyed\",\n      },\n      {\n        description:\n          \"A living organic creature. Heals and regrows naturally if damaged.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Can attach an Artillery weapon (see page 96). Vehicle is slow and Clumsy. \",\n        name: \"Platform\",\n      },\n      {\n        description: \"+1 Armor (grav field). Blocks remote Access and hacking.\",\n        name: \"Shielded\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Chose a Vehicle/Flyer design. Can change to that design and back again. \",\n        name: \"Transforming\",\n      },\n      {\n        description:\n          \"A cyber vehicle program that also exists inside the SectorNet. \",\n        name: \"Virtual\",\n      },\n      {\n        description: \"Quick, maneuverable, able to perform stunts.\",\n        name: \"Agile\",\n      },\n      {\n        description:\n          \"A heavy weapon attached to the vehicle, fired by the pilot.\",\n        name: \"Armed\",\n      },\n      {\n        description: \"Greatly increases overland speed. Allows short jumps.\",\n        name: \"Boosters\",\n      },\n      {\n        description: \"Can be remotely activated and given directions.\",\n        name: \"Controlled\",\n      },\n      {\n        description:\n          \"Impressive, high quality, comfortable. Various quality-of-life features.\",\n        name: \"Luxury\",\n      },\n      { description: \"+3 Armor.\", name: \"Plated\" },\n      {\n        description: \"Ponderous. +3 Armor. Ignores non-Breaching damage.\",\n        name: \"Reinforced\",\n      },\n      {\n        description:\n          \"Protects from elements, resists environmental damage, easy to repair.\",\n        name: \"Rugged\",\n      },\n      {\n        description:\n          \"Fully enclosed frame, oxygen source. Can function in space, under water, etc.\",\n        name: \"Sealed\",\n      },\n      {\n        description: \"The vehicle gathers various types of information.\",\n        name: \"Sensors\",\n      },\n      {\n        description:\n          \"Silent, difficult to pick up on sensors, occupants invisible to sensors.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Choose a melee weapon upgrade to represent a tool attached to this vehicle.\",\n        name: \"Tool\",\n      },\n      {\n        description:\n          \"Can carry a dozen people or a cargo container. Groundcar/Quad Walker only.\",\n        name: \"Transport\",\n      },\n      {\n        description: \"A heavy weapon on a swivel mount, fired by a passenger.\",\n        name: \"Turret\",\n      },\n      {\n        description: \"Choose a Kit to be integrated into the vehicle.\",\n        name: \"Workspace\",\n      },\n    ],\n  },\n  flyer: {\n    type: [\"shuttle\", \"speeder\"],\n    tags: [\n      {\n        description:\n          \"Designed for ramming. Head-on collisions only cause Major damage.\",\n        name: \"Battering\",\n      },\n      {\n        description:\n          \"Covered in sharp implements. Can cut down or impale targets on foot.\",\n        name: \"Bladed\",\n      },\n      {\n        description:\n          \"Locked, sealed, shielded compartment. Special codes/keys needed to open.\",\n        name: \"Containment\",\n      },\n      {\n        description:\n          \"Aspects of the vehicle inconspicuously fold away, deployed when needed.\",\n        name: \"Folding\",\n      },\n      {\n        description:\n          \"Designed to be piloted by a chosen person, hostile/resistant to other pilots.\",\n        name: \"Keyed\",\n      },\n      {\n        description: \"Can carry and launch Missile explosives (see page 95).\",\n        name: \"Launcher\",\n      },\n      {\n        description:\n          \"A living organic creature. Heals and regrows naturally if damaged.\",\n        name: \"Living\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Chose a Vehicle or Flyer design. Can change to that design and back again. \",\n        name: \"Transforming\",\n      },\n      {\n        description:\n          \"A cyber vehicle program that also exists inside the SectorNet.  \",\n        name: \"Virtual\",\n      },\n      {\n        description: \"Quick, maneuverable, able to perform stunts.\",\n        name: \"Agile\",\n      },\n      {\n        description:\n          \"A heavy weapon attached to the vehicle, fired by the pilot.\",\n        name: \"Armed\",\n      },\n      { description: \"+2 Armor\", name: \"Armored\" },\n      {\n        description: \"Can be remotely activated and given directions.\",\n        name: \"Controlled\",\n      },\n      {\n        description:\n          \"Impressive, high quality, comfortable. Various quality-of-life features.\",\n        name: \"Luxury\",\n      },\n      {\n        description:\n          \"Protects from elements, resists environmental damage, easy to repair.\",\n        name: \"Rugged\",\n      },\n      {\n        description:\n          \"Fully enclosed frame,oxygen source. Can function in space, under water, etc.\",\n        name: \"Sealed\",\n      },\n      {\n        description: \"The vehicle gathers various types of information.\",\n        name: \"Sensors\",\n      },\n      {\n        description:\n          \"+1 Armor provided by extended grav field. Blocks remote Access and hacking.\",\n        name: \"Shielded\",\n      },\n      {\n        description:\n          \"Silent, difficult to pick up on sensors, occupants invisible to sensors.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Choose a melee weapon upgrade to represent a tool attached to this vehicle.\",\n        name: \"Tool\",\n      },\n      {\n        description:\n          \"Can carry a dozen people or a cargo container. Shuttle only.\",\n        name: \"Transport\",\n      },\n      {\n        description: \"A heavy weapon on a swivel mount, fired by a passenger.\",\n        name: \"Turret\",\n      },\n      {\n        description: \"Choose a Kit to be integrated into the vehicle.     \",\n        name: \"Workspace\",\n      },\n    ],\n  },\n  crew: {\n    type: [\"artificial\", \"gang\", \"squad\", \"staff\", \"techs\"],\n    tags: [\n      {\n        description:\n          \"Belongs to an existing Xeno or Evolved species, shares that species’ traits.\",\n        name: \"Alien\",\n      },\n      {\n        description:\n          \"Resists and makes use of chosen element (fire, ice, acid, dark, light, etc.).\",\n        name: \"Attuned\",\n      },\n      {\n        description:\n          \"Each member has an augmented sense, implanted armor, or grafted weapon.\",\n        name: \"Cybernetic\",\n      },\n      {\n        description:\n          \"Powerful, mysterious, and have their own inscrutable agenda.\",\n        name: \"Enigmatic\",\n      },\n      {\n        description:\n          \"Crew eventually rebuilds, reconstructs, or restores itself after harm/losses.\",\n        name: \"Regenerating\",\n      },\n      {\n        description: \"Able to perform minor rituals or assist in larger rites.\",\n        name: \"Spiritual\",\n      },\n      {\n        description:\n          \"Commanded into existence. Dismissed when their task is complete.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Their avatars automatically follow you into the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description:\n          \"Dedicated to a cause. Will try to advance the cause when they have no orders.       \",\n        name: \"Zealots\",\n      },\n      {\n        description:\n          \"Choose a Class 1 Firearm. The crew is equipped with it and trained in its use.\",\n        name: \"Armed\",\n      },\n      {\n        description:\n          \"Able to bombard with artillery, turrets, or starship weaponry.\",\n        name: \"Artillery\",\n      },\n      {\n        description:\n          \"Graceful, swift, strong, and flexible. Much better than average, physically.\",\n        name: \"Athletic\",\n      },\n      {\n        description:\n          \"Chosen for their good looks and wit. Able to distract and entertain.\",\n        name: \"Beautiful\",\n      },\n      {\n        description:\n          \"Able to build small structures or assist in construction projects.\",\n        name: \"Builders\",\n      },\n      {\n        description:\n          \"Able to commit small-scale criminal activities or assist with larger crimes.\",\n        name: \"Criminal\",\n      },\n      {\n        description:\n          \"Choose a Kit. The crew carries various tools from that kit and can use them.\",\n        name: \"Equipped\",\n      },\n      {\n        description:\n          \"Never afraid or intimidated, will follow insane orders, but often go too far.\",\n        name: \"Fearless\",\n      },\n      {\n        description:\n          \"Imposing in some way. Able to frighten, threaten, dissuade, etc.\",\n        name: \"Imposing\",\n      },\n      {\n        description:\n          \"Able to collect information and report back, or pass on information.\",\n        name: \"Informants\",\n      },\n      {\n        description:\n          \"Only take orders from you. Quickly recover to their normal disposition\",\n        name: \"Loyal\",\n      },\n      {\n        description:\n          \"Able to service and maintain machinery, and assist in repairs and overhauls.\",\n        name: \"Mechanics\",\n      },\n      {\n        description:\n          \"Able to provide long-term convalescent care or assist in medical procedures.\",\n        name: \"Medics\",\n      },\n      {\n        description:\n          \"There are a large number of them, you have trouble keeping track of them all.\",\n        name: \"Numerous\",\n      },\n      {\n        description: \"Can work in harsh climates for extended periods of time.\",\n        name: \"Rugged\",\n      },\n      {\n        description:\n          \"Able to sneak into (or out of) places, and pass unnoticed.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Able to quickly load, unload, assemble, and pack away heavy objects/cargo.\",\n        name: \"Teamsters\",\n      },\n      {\n        description: \"Able to destroy terrain and structures.\",\n        name: \"Wreckers\",\n      },\n    ],\n  },\n  beast: {\n    type: [\"locomotion\", \"weapon\"],\n    tags: [\n      {\n        description:\n          \"Perfectly at home in the chosen environment. Can survive harsh climates.\",\n        name: \"Adaptation\",\n      },\n      {\n        description:\n          \"Resists and makes use of chosen element (fire, ice, acid, dark, light, etc.).\",\n        name: \"Attuned\",\n      },\n      {\n        description:\n          \"Impressive, aesthetically pleasing. Can distract, charm, and entertain.\",\n        name: \"Beautiful\",\n      },\n      {\n        description:\n          \"Share thoughts and emotions with their master and others with this bond.\",\n        name: \"Bond\",\n      },\n      {\n        description:\n          \"Choose a melee weapon upgrade. They attack with that upgrade.\",\n        name: \"Deadly\",\n      },\n      {\n        description: \"Causes property damage, harms vehicles.\",\n        name: \"Destructive\",\n      },\n      {\n        description:\n          \"Able to carry objects with their hands and perform simple manipulations.\",\n        name: \"Dextrous\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Constantly creates a chosen mental state (rage, bliss, focus, etc.).\",\n        name: \"Emotional\",\n      },\n      {\n        description:\n          \"Can carry or drag heavy burdens for extended periods of time.\",\n        name: \"Mighty\",\n      },\n      {\n        description:\n          \"Large. Can be ridden. Steered with +Influence or +Physique.\",\n        name: \"Mount\",\n      },\n      {\n        description:\n          \"New locomotion: slithering, leaping, climbing, swimming, flying, hovering.\",\n        name: \"Movement\",\n      },\n      {\n        description:\n          \"Several animals that work as a team. They take up more room and food.\",\n        name: \"Pack\",\n      },\n      {\n        description:\n          \"Choose a sense (sight, hearing, smell, vibration, etc.).It is extremely advanced.\",\n        name: \"Perception\",\n      },\n      {\n        description: \"Able to interpose themselves to protect others.\",\n        name: \"Protective\",\n      },\n      {\n        description: \"Camouflaged, silent, able to sneak and pass unnoticed.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Commanded into existence. Dismissed when their task is complete.\",\n        name: \"Summoned\",\n      },\n      { description: \"Able to frighten or threaten.\", name: \"Terrifying\" },\n      {\n        description:\n          \"Very small. Can fit on a shoulder or in a pouch. (Cannot be a Mount).\",\n        name: \"Tiny\",\n      },\n      {\n        description: \"Can survive most harm with only minor injuries.\",\n        name: \"Tough\",\n      },\n      {\n        description:\n          \"Their avatars automatically follow you into the SectorNet.      \",\n        name: \"Virtual\",\n      },\n    ],\n  },\n};\n\nconst generateMeleeWeapon = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass || itemClass === 0 ? itemClass : random(2) + 1;\n  const tags = sampleSize(itemTraits.melee.tags, classLevel + 1);\n  let switching;\n  if (tags.some((tags) => tags.name === \"Switching\")) {\n    switching = sampleSize(itemTraits.melee.tags, 2);\n  }\n\n  return {\n    classLevel,\n    tags,\n    type: \"melee\",\n    switching,\n  };\n};\nconst generateFirearm = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.firearm.tags, classLevel);\n  let switching;\n  if (tags.some((tags) => tags.name === \"Switching\")) {\n    switching = sampleSize(itemTraits.firearm.tags, classLevel);\n  }\n  return {\n    classLevel,\n    design: sample(itemTraits.firearm.types),\n    tags,\n    type: \"firearm\",\n    switching,\n  };\n};\nconst generateHeavyWeapon = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.firearm.tags, classLevel);\n  let switching;\n  if (tags.some((tags) => tags.name === \"Switching\")) {\n    switching = sampleSize(itemTraits.firearm.tags, 2);\n  }\n  return {\n    classLevel,\n    design: sample(itemTraits.firearm.types),\n    tags,\n    type: \"heavy\",\n    switching,\n  };\n};\nconst generateExplosive = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.explosive.tags, classLevel);\n  return {\n    classLevel,\n    design: sample(itemTraits.explosive.types),\n    tags,\n    type: \"explosive\",\n  };\n};\nconst generateArtillery = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.artillery.tags, classLevel);\n  let switching;\n  if (tags.some((tags) => tags.name === \"Switching\")) {\n    switching = sampleSize(itemTraits.firearm.tags, 2);\n  }\n  return {\n    classLevel,\n    tags,\n    type: \"artillery\",\n    switching,\n  };\n};\nconst generateAttire = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.attire.tags, classLevel);\n  return {\n    classLevel,\n    tags,\n    type: \"attire\",\n    design: sample(itemTraits.attire.type),\n  };\n};\nconst generateLandVehicle = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.landVehicle.tags, classLevel);\n  const tool = tags.some((t) => t.name === \"Tool\")\n    ? sample(itemTraits.melee.tags)\n    : undefined;\n  return {\n    classLevel,\n    tags,\n    tool,\n    type: \"landVehicle\",\n    design: sample(itemTraits.landVehicle.type),\n  };\n};\nconst generateFlyer = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.flyer.tags, classLevel);\n  const tool = tags.some((t) => t.name === \"Tool\")\n    ? sample(itemTraits.melee.tags)\n    : undefined;\n  return {\n    classLevel,\n    tags,\n    tool,\n    type: \"flyer\",\n    design: sample(itemTraits.flyer.type),\n  };\n};\nconst generateCrew = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.crew.tags, classLevel);\n  let armed;\n  return {\n    armed,\n    classLevel,\n    tags,\n    type: \"crew\",\n    design: sample(itemTraits.crew.type),\n  };\n};\nconst generateBeast = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.beast.tags, classLevel);\n  const design = sample(itemTraits.beast.type);\n  let locomotion;\n  let weapon;\n  if (design === \"locomotion\") {\n    locomotion = sample([\n      \"slithering\",\n      \"leaping\",\n      \"climbing\",\n      \"swimming\",\n      \"gliding\",\n      \"hovering\",\n      \"flying\",\n    ]);\n  } else if (design === \"weapon\") {\n    weapon = sample(itemTraits.melee.tags);\n  }\n  return {\n    classLevel,\n    tags,\n    type: \"beast\",\n    design,\n    locomotion,\n    weapon,\n  };\n};\nexport const generateItemTraits = (itemType?: string, itemClass?: number) => {\n  const itemTypes = Object.keys(itemTraits);\n  let type = itemType ?? sample(itemTypes);\n  switch (type) {\n    case \"melee\":\n      return generateMeleeWeapon(itemClass);\n    case \"firearm\":\n      return generateFirearm(itemClass);\n    case \"heavy\":\n      return generateHeavyWeapon(itemClass);\n    case \"explosive\":\n      return generateExplosive(itemClass);\n    case \"artillery\":\n      return generateArtillery(itemClass);\n    case \"attire\":\n      return generateAttire(itemClass);\n    case \"landVehicle\":\n      return generateLandVehicle(itemClass);\n    case \"flyer\":\n      return generateFlyer(itemClass);\n    case \"crew\":\n      return generateCrew(itemClass);\n    case \"beast\":\n      return generateBeast(itemClass);\n    default:\n      break;\n  }\n};\n","import React, { FC, useState } from \"react\";\nimport { generateItemTraits, itemTraits, GeneratedItem } from \"./utils\";\nimport { startCase, uniqueId } from \"lodash\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const Controls = styled.div`\n  padding: 8px;\n`;\nexport const TagContainer = styled.div`\n  text-align: left;\n  display: flex;\n  justify-content: center;\n  padding: 8px;\n`;\nconst itemTypes = Object.keys(itemTraits);\n\nconst Items: FC = () => {\n  const [generatedItem, setGeneratedItem] = useState<\n    GeneratedItem | undefined\n  >();\n  const [selectedItemType, setSelectedItemType] = useState<\n    undefined | string\n  >();\n  const [selectedItemClass, setSelectedItemClass] = useState<\n    undefined | number\n  >();\n  const generateNewItem = (itemType?: string, classType?: number) => {\n    setGeneratedItem(generateItemTraits(itemType, classType));\n  };\n  const handleTypeChange = (event: any) => {\n    setSelectedItemType(event.target.value);\n  };\n  const handleClassChange = (event: any) => {\n    setSelectedItemClass(event.target.value);\n  };\n\n  return (\n    <section>\n      <Controls>\n        <Grid container justify=\"center\" spacing={4}>\n          <Grid item xs={6} sm={4} md={2}>\n            <FormControl fullWidth>\n              <InputLabel id=\"asset-type\">Type</InputLabel>\n              <Select labelId=\"asset-type\" onChange={handleTypeChange}>\n                <MenuItem value={undefined}>None</MenuItem>\n                {itemTypes.map((itemType) => (\n                  <MenuItem key={uniqueId()} value={itemType}>\n                    {startCase(itemType)}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6} sm={4} md={1}>\n            <FormControl fullWidth>\n              <InputLabel id=\"asset-class\">Class</InputLabel>\n              <Select labelId=\"asset-class\" onChange={handleClassChange}>\n                <MenuItem value={undefined}>None</MenuItem>\n                {[1, 2, 3, 4].map((itemClass) => (\n                  <MenuItem key={uniqueId()} value={itemClass}>\n                    {itemClass}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={12} md={3} alignItems=\"center\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              size=\"large\"\n              onClick={() =>\n                generateNewItem(selectedItemType, selectedItemClass)\n              }\n            >\n              Generate Item\n            </Button>\n          </Grid>\n        </Grid>\n      </Controls>\n      {generatedItem && (\n        <h2>\n          {startCase(generatedItem?.type)} (Class {generatedItem?.classLevel})\n        </h2>\n      )}\n      {generatedItem?.design && (\n        <>\n          <h3>{startCase(generatedItem.design)}</h3>\n          {generatedItem.design === \"locomotion\" && (\n            <p>{generatedItem.locomotion}</p>\n          )}\n          {generatedItem.design === \"weapon\" && (\n            <p>\n              <strong>{generatedItem.weapon?.name}:</strong>\n              {generatedItem.weapon?.description}\n            </p>\n          )}\n        </>\n      )}\n      <TagContainer>\n        <div>\n          {generatedItem?.tags.map((tag1) => (\n            <div key={uniqueId()}>\n              <p>\n                <strong>{tag1.name}:</strong> {tag1.description}\n              </p>\n              {tag1.name === \"Switching\" &&\n                generatedItem.switching &&\n                generatedItem.switching.map((tag2) => (\n                  <p key={uniqueId()}>\n                    &#9;<strong>↳ {tag2.name}:</strong> {tag2.description}\n                  </p>\n                ))}\n              {tag1.name === \"Deadly\" &&\n                generatedItem.deadly &&\n                generatedItem.deadly.map((tag2) => (\n                  <p key={uniqueId()}>\n                    <strong>↳ {tag2.name}:</strong> {tag2.description}\n                  </p>\n                ))}\n              {tag1.name === \"Armed\" && generatedItem.armed && (\n                <p>\n                  <strong>↳ {generatedItem.armed.name}:</strong>\n                  {generatedItem.armed.description}\n                </p>\n              )}\n              {tag1.name === \"Tool\" && generatedItem.tool && (\n                <p>\n                  <strong>↳ {generatedItem.tool.name}:</strong>\n                  {generatedItem.tool.description}\n                </p>\n              )}\n            </div>\n          ))}\n        </div>\n      </TagContainer>\n    </section>\n  );\n};\n\nexport default Items;\n","import { sample } from \"lodash\";\n\nexport interface Market {\n  type: string;\n  description: string;\n}\n\nexport const marketsTable: Market[] = [\n  {\n    description:\n      \"Highly competitive, cutting-edge market. Class 2 Assets available, Class 1 Assets commonplace, occasional Class 3 prototype. Advanced medical procedures (cybermods) performed regularly.\",\n    type: \"Advanced\",\n  },\n  {\n    description:\n      \"Vile, despicable, and dangerous market. Every Asset and service available for a price, no matter how illegal or depraved. Slave Crews indoctrinated with free Loyalty upgrade. \",\n    type: \"Brutal\",\n  },\n  {\n    description:\n      \"High demand for food, medical supplies, tools, and work vehicles. Few goods or services for sale, mostly Class 0 Assets and excess survival supplies.\",\n    type: \"Colonist\",\n  },\n  {\n    description:\n      \"Chaotic, unpredictable market. Eclectic selection of goods and services that changes from day to day. Mostly junk, but many Class 0 and Class 1 goods available. Diverse selection of Crews.\",\n    type: \"Crowded\",\n  },\n  {\n    description:\n      \"Isolated, independent market. Factions have no direct control of the market. Characters cannot call in Favors here. Equal parts trash and treasure.\",\n    type: \"Forlorn\",\n  },\n  {\n    description:\n      \"Cultural cross-roads market. Assets from the far reaches of the galaxy. Class 1 and Class 2 assets in a wide variety of cultural styles and variations. Non-humanoid Attire and Crew often available.\",\n    type: \"Galactic\",\n  },\n  {\n    description:\n      \"Meager market, with no real value. High demand for basic necessities, little to no profit or trade potential. Abundant Class 0 Crews. Occasional unique Asset, traded out of desperation.\",\n    type: \"Impoverished\",\n  },\n  {\n    description:\n      \"Bizarre, confusing, exotic market. No “normal” Assets, only strange, alien goods. Market likely to follow strange trading customs, or have unusual currency/measure of exchange.\",\n    type: \"Occult\",\n  },\n  {\n    description:\n      \"Primitive, archaic market. Deals uniquely in very low tech Assets (melee weapons, animals, etc.). High technology viewed with suspicion. No medical care beyond crude Patch Up.\",\n    type: \"Primal\",\n  },\n  {\n    description:\n      \"Market that caters to a specific in-group, rarely dealing with the unprivileged. All Assets are of superior craftsmanship, often have the Stylish upgrade. Class 2 Assets, occasional Class 3. No Class 0.\",\n    type: \"Privileged\",\n  },\n  {\n    description:\n      \"Abundance of manufactured goods. High demand for raw materials, processed materials and basic components. Class 0 Assets commonplace, all Class 1s readily available.\",\n    type: \"Productive\",\n  },\n  {\n    description:\n      \"A digital marketplace. Trades primarily in information. Data Points can be purchased through Acquisition (3 Data Points about a single subject). Goods ordered and fulfilled anonymously.\",\n    type: \"Programmed\",\n  },\n  {\n    description:\n      \"Strictly controlled market. All transactions are done through a regulatory body, usually a Faction. Extensive list of restricted and banned Assets and cargo types. Fill out form 76-F in triplicate.\",\n    type: \"Regimented\",\n  },\n  {\n    description:\n      \"Simple goods available, mostly Class 0 goods with a few Class 1s. Cargo types limited to natural resources, food, and hand-made items.\",\n    type: \"Rustic\",\n  },\n  {\n    description:\n      \"Religious, often theocratic market. Goods exchanged for religious services: blessings, prayers, healing, indulgences, political favor, etc. Blessed items and religious Crews available, though rare.\",\n    type: \"Spiritual\",\n  },\n];\n\nexport const generateMarket = (): Market | undefined => sample(marketsTable);\n","import React, { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Modal } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { generateMarket, Market, marketsTable } from \"./utils/uw-markets\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst Container = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nconst StyledModal = styled.div`\n  max-width: 500px;\n  background-color: #fff;\n  padding: 20px;\n  overflow-y: scroll;\n  position: revert;\n  margin: 2em 3em;\n  max-height: 80%;\n`;\n\nconst Markets: FC = () => {\n  const [generatedMarket, setGeneratedMarket] = useState<undefined | Market>();\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n\n  const handleOpen = () => {\n    setModalVisible(true);\n  };\n  const handleClose = () => {\n    setModalVisible(false);\n  };\n\n  const generateNewMarket = () => {\n    setGeneratedMarket(generateMarket());\n  };\n  return (\n    <Container>\n      <ButtonContainer>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          size=\"large\"\n          onClick={handleOpen}\n        >\n          View All\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={() => generateNewMarket()}\n        >\n          Generate Market\n        </Button>\n      </ButtonContainer>\n      <h2>{generatedMarket?.type}</h2>\n      <h3>{generatedMarket?.description}</h3>\n      <Modal\n        open={modalVisible}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <StyledModal>\n          <CloseIcon onClick={handleClose} />\n          {marketsTable.map((m) => (\n            <>\n              <h3 id=\"simple-modal-title\">{m.type}</h3>\n              <p id=\"simple-modal-description\">{m.description}</p>\n            </>\n          ))}\n        </StyledModal>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Markets;\n","import { times, sample } from \"lodash\";\n\nconst amountOfFloraTable = [\n  \"None\",\n  \"None\",\n  \"Sparse\",\n  \"Sparse\",\n  \"Sparse\",\n  \"Moderate\",\n  \"Moderate\",\n  \"Moderate\",\n  \"Dense\",\n  \"Dense\",\n  \"Dense\",\n  \"Overgrown\",\n];\nconst varietyOfFloraTable = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4];\n\nconst typeOfFloraTable = [\n  \"Grass\",\n  \"Grass\",\n  \"Lichen or Moss\",\n  \"Lichen or Moss\",\n  \"Lichen or Moss\",\n  \"Shrub\",\n  \"Shrub\",\n  \"Shrub\",\n  \"Fern\",\n  \"Fern\",\n  \"Fern\",\n  \"Climber or Vine\",\n  \"Climber or Vine\",\n  \"Tree\",\n  \"Tree\",\n  \"Cactus\",\n  \"Cactus\",\n  \"Fungus\",\n  \"Fungus\",\n  \"Exotic\",\n];\n\nconst floraSizeTable = [\n  \"Fine\",\n  \"Dimunitive\",\n  \"Tiny\",\n  \"Tiny\",\n  \"Small\",\n  \"Small\",\n  \"Small\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Large\",\n  \"Large\",\n  \"Large\",\n  \"Large\",\n  \"Huge\",\n  \"Huge\",\n  \"Gargantuan or bigger\",\n];\n\nconst relativeAmountTable = [-1, -1, -1, 0, 0, 0, 0, 0, 0, 1, 1, 1];\n\nconst threatTable = [\n  \"Helpful\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Minor Hazard\",\n  \"Minor Hazard\",\n  \"Minor Hazard\",\n  \"Major Hazard\",\n];\n\nconst floraQuirkTable = [\n  \"Self Destructs\",\n  \"Bioluminescence\",\n  \"Giant Fruit\",\n  \"Changes Color\",\n  \"Creates Noise\",\n  \"Moves Toward Light\",\n  \"Grows in Corpses\",\n  \"Grows on Other Plants\",\n  \"Hardened Exterior\",\n  \"Regenerates Damage\",\n  \"Reacts to Noise\",\n  \"Reacts to Motion\",\n  \"Reacts to Weather\",\n  \"Reacts to Time of Day\",\n  \"Blots out Light\",\n  \"Potent Smell\",\n  \"Carnivorous\",\n  \"Stores Water\",\n  \"Rock-like Appearance\",\n  \"Squirts Liquid\",\n];\n\nexport interface FloraBiome {\n  amount?: string;\n  typeCount?: number;\n  floraTypes?: FloraType[];\n}\n\nexport interface FloraType {\n  size?: string;\n  type?: string;\n  relativeAmount?: number;\n  quirk?: string;\n  threat?: string;\n}\n\nconst generateFloraType = (): FloraType => ({\n  size: sample(floraSizeTable),\n  quirk: sample(floraQuirkTable),\n  relativeAmount: sample(relativeAmountTable),\n  threat: sample(threatTable),\n  type: sample(typeOfFloraTable),\n});\n\nexport const generateFloraBiome = (): FloraBiome => {\n  const amount = sample(amountOfFloraTable);\n  if (amount === \"None\") {\n    return { amount };\n  }\n  const typeCount = sample(varietyOfFloraTable);\n  return {\n    amount,\n    typeCount,\n    floraTypes: times(typeCount ?? 1, () => generateFloraType()),\n  };\n};\n\n// export const generateNFloraBiomes = (count: number): FloraBiome[] => {\n//   return times(count, () => generateFloraBiome());\n// };\n","import { random, sample } from \"lodash\";\n\nconst getTechLevel = () => {\n  const dRoll = random(1, 22);\n  if (dRoll <= 10) return \"Stone Age\";\n  if (dRoll <= 14) return \"Bronze Age\";\n  if (dRoll <= 17) return \"Medieval Age\";\n  if (dRoll <= 19) return \"Steam Age\";\n  if (dRoll <= 20) return \"Industrial Age\";\n  if (dRoll <= 21) return \"Nuclear Age\";\n  return \"Space\";\n};\n\nconst attitudesTable = [\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Fearful\",\n  \"Fearful\",\n  \"Fearful\",\n  \"Fearful\",\n  \"Fearful\",\n  \"Indifferent\",\n  \"Reverent\",\n  \"Friendly\",\n];\nconst valuesTable = [\n  \"Strength or Glory\",\n  \"Family or Kindness\",\n  \"Faith or Zealotry\",\n  \"Knowledge or Science\",\n  \"Equality or Balance\",\n  \"Pleasure or Hedonism\",\n];\n\nconst leadershipTable = [\n  \"Democratic\",\n  \"Democratic\",\n  \"Republican\",\n  \"Republican\",\n  \"Republican\",\n  \"Republican\",\n  \"Autocratic\",\n  \"Autocratic\",\n  \"Autocratic\",\n  \"Autocratic\",\n  \"Feudal\",\n  \"Feudal\",\n  \"Feudal\",\n  \"Feudal\",\n  \"Gerontocratic\",\n  \"Gerontocratic\",\n  \"Theocratic\",\n  \"Technocratic\",\n  \"Plutocratic\",\n  \"No Leadership or Anarchic\",\n];\n\nconst unityTable = [\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Divided between a few Great Powers\",\n  \"Divided between a few Great Powers\",\n  \"Divided between a few Great Powers\",\n  \"Divided between two Great Powers\",\n  \"Divided between two Great Powers\",\n  \"United Species\",\n];\nconst religionTable = [\n  \"Animism\",\n  \"Animism\",\n  \"Animism\",\n  \"Animism\",\n  \"Animism\",\n  \"Polytheism\",\n  \"Polytheism\",\n  \"Polytheism\",\n  \"Polytheism\",\n  \"Polytheism\",\n  \"Monotheism\",\n  \"Monotheism\",\n  \"Monotheism\",\n  \"Monotheism\",\n  \"Monotheism\",\n  \"Animatism\",\n  \"Animatism\",\n  \"Ancestor Worship\",\n  \"God King or Personality Cult\",\n  \"Agnostic or Atheist\",\n];\nconst architectureTable = [\n  \"Simple\",\n  \"Heavily Engraved\",\n  \"Underground\",\n  \"Towering\",\n  \"Squat\",\n  \"Crude\",\n  \"Carved out of Material\",\n  \"Easily Moved\",\n  \"Cyclopean\",\n  \"Decadent\",\n  \"Organic\",\n  \"Nonexistent or Cave Men\",\n];\n\nconst artTable = [\n  \"Theatre\",\n  \"Theatre\",\n  \"Poetry\",\n  \"Poetry\",\n  \"Painting\",\n  \"Painting\",\n  \"Sculpting\",\n  \"Sculpting\",\n  \"Music\",\n  \"Dance\",\n  \"Clothing\",\n  \"Mask Making\",\n];\n\nconst themeTable = [\n  \"Cowboy\",\n  \"Samurai\",\n  \"Ninja\",\n  \"Pirate\",\n  \"Fascist\",\n  \"Communist\",\n  \"Libertarian\",\n  \"Mobster\",\n  \"Knight\",\n  \"Hippy\",\n  \"Conquistador\",\n  \"Viking\",\n  \"Aztec\",\n  \"Apache\",\n  \"Wuxia\",\n  \"Greco-Roman\",\n  \"Zulu\",\n  \"Mongol\",\n  \"Arabian\",\n  \"Merchant\",\n  \"Macho Man\",\n  \"Australian\",\n  \"American South\",\n];\n\nconst getTheme = () => {\n  const dRoll = random(11) + random(11);\n  return themeTable[dRoll];\n};\n\nexport interface Sentient {\n  architecture?: string;\n  art?: string;\n  attitude?: string;\n  techLevel?: string;\n  leadership?: string;\n  values?: string;\n  religion?: string;\n  unity?: string;\n  theme?: string;\n}\n\nexport const generateSentient = (): Sentient => {\n  const result: Sentient = {\n    values: sample(valuesTable),\n    architecture: sample(architectureTable),\n    unity: sample(unityTable),\n    theme: getTheme(),\n    attitude: sample(attitudesTable),\n    techLevel: getTechLevel(),\n    leadership: sample(leadershipTable),\n    religion: sample(religionTable),\n  };\n  if (random(1, 4) === 4) result.art = sample(artTable);\n  return result;\n};\n","import { random, sample, times, sampleSize } from \"lodash\";\nimport { Sentient, generateSentient } from \"./sf-sentients\";\n\nconst faunaAmountTable = [\n  \"None\",\n  \"None\",\n  \"Rare\",\n  \"Rare\",\n  \"Rare\",\n  \"Uncommon\",\n  \"Uncommon\",\n  \"Uncommon\",\n  \"Common\",\n  \"Common\",\n  \"Common\",\n  \"Teeming\",\n];\nconst faunaVarietyTable = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4];\n\nconst generateFaunaSubType = () => {\n  const dRoll = random(1, 100);\n  if (dRoll <= 15) return \"Arthopoid\";\n  if (dRoll <= 25) return \"Mammalian\";\n  if (dRoll <= 35) return \"Avian\";\n  if (dRoll <= 47) return \"Reptilian\";\n  if (dRoll <= 59) return \"Molluscoid\";\n  if (dRoll <= 67) return \"Fungoid\";\n  if (dRoll <= 75) return \"Plantoid\";\n  if (dRoll <= 95) return \"Ichthyoid\";\n  return \"Exotic\";\n};\n\nconst faunaSizeTable = [\n  \"Fine\",\n  \"Dimunitive\",\n  \"Tiny\",\n  \"Tiny\",\n  \"Small\",\n  \"Small\",\n  \"Small\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Large\",\n  \"Large\",\n  \"Large\",\n  \"Large\",\n  \"Huge\",\n  \"Huge\",\n  \"Gargantuan or bigger\",\n];\n\nconst relativeAmoutTable = [-1, -1, -1, 0, 0, 0, 0, 0, 0, 1, 1, 1];\n\nconst faunaThreatTable = [\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Minor Threat\",\n  \"Minor Threat\",\n  \"Minor Threat\",\n  \"Minor Threat\",\n  \"Major Threat\",\n  \"Major Threat\",\n  \"Major Threat\",\n  \"Extreme Threat\",\n];\n\nconst faunaTemperamentTable = [\n  \"Uncaring\",\n  \"Uncaring\",\n  \"Uncaring\",\n  \"Skittish\",\n  \"Skittish\",\n  \"Skittish\",\n  \"Cautious\",\n  \"Cautious\",\n  \"Cautious\",\n  \"Cautious\",\n  \"Territorial\",\n  \"Territorial\",\n  \"Territorial\",\n  \"Volatile\",\n  \"Volatile\",\n  \"Predatory\",\n  \"Predatory\",\n  \"Predatory\",\n  \"Sadistic\",\n  \"Sadistic\",\n];\n\nconst groupingTable = [\n  \"Loner\",\n  \"Loner\",\n  \"Loner\",\n  \"Mating Pairs\",\n  \"Mating Pairs\",\n  \"Mating Pairs\",\n  \"Packs\",\n  \"Packs\",\n  \"Packs\",\n  \"Herds, Flocks or Swarms\",\n  \"Herds, Flocks or Swarms\",\n  \"Herds, Flocks or Swarms\",\n];\n\nconst locomotionTable = [\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Flying\",\n  \"Flying\",\n  \"Flying\",\n  \"Flying\",\n  \"Burrowing\",\n  \"Burrowing\",\n  \"Climbing\",\n  \"Climbing\",\n  \"Climbing\",\n  \"Slithering\",\n  \"Slithering\",\n  \"Hopping\",\n];\n\nconst quirkTable = [\n  \"Self Destructs\",\n  \"Bioluminescence\",\n  \"Potent Smell\",\n  \"Exceptionally Fast\",\n  \"Exceptionally Slow\",\n  \"Changes Color\",\n  \"Camouflaged\",\n  \"Webbing\",\n  \"Venomous\",\n  \"Spit Weapon\",\n  \"Gaze Weapon\",\n  \"Regenerates Damage\",\n  \"Amorphous\",\n  \"Shapeshifter\",\n  \"Heavily Armored\",\n  \"Mimicks Sounds\",\n  \"Breathe Weapon\",\n  \"Shapeshifter\",\n  \"Heavily Armored\",\n  \"Injects Live Young\",\n  \"Unusual Diet\",\n  \"Mind Affecting\",\n  \"Parasitic\",\n];\n\nexport interface FaunaType {\n  type?: string;\n  relativeAmount?: number;\n  size?: string;\n  threat?: string;\n  temperament?: string;\n  grouping?: string;\n  locomotion?: string;\n  quirk?: string;\n  isSentient?: boolean;\n  sentientDetails?: Sentient;\n}\n\nexport interface FaunaBiome {\n  basicFaunaTypes?: FaunaType[];\n  sentientFaunaTypes?: FaunaType[];\n  amount?: string;\n  variety?: number;\n}\n\nconst generateSentientCount = () => {\n  const dRoll = random(1, 100);\n  if (dRoll <= 79) return 0;\n  if (dRoll <= 97) return 1;\n  return 2;\n};\n\nexport const generateFaunaType = (\n  isSentient?: boolean,\n  isCreature?: boolean\n): FaunaType => {\n  let quirkString;\n  if (isCreature) {\n    quirkString = sampleSize(quirkTable, random(1, 4)).join(\", \");\n  } else {\n    quirkString =\n      random(11) === 11 ? quirkTable[random(11) + random(11)] : undefined;\n  }\n  return {\n    relativeAmount: sample(relativeAmoutTable),\n    locomotion: sample(locomotionTable),\n    quirk: quirkString,\n    size: sample(faunaSizeTable),\n    grouping: sample(groupingTable),\n    temperament: sample(faunaTemperamentTable),\n    type: generateFaunaSubType(),\n    threat: sample(faunaThreatTable),\n    sentientDetails: isSentient ? generateSentient() : undefined,\n  };\n};\nconst generateNFaunaTypes = (\n  count: number,\n  isSentient?: boolean\n): FaunaType[] => {\n  return times(count, () => generateFaunaType(isSentient));\n};\n\nexport const generateFaunaBiome = (): FaunaBiome => {\n  const amount = sample(faunaAmountTable);\n  if (amount === \"None\") {\n    return {\n      amount,\n      basicFaunaTypes: undefined,\n      sentientFaunaTypes: undefined,\n    };\n  }\n  const variety = sample(faunaVarietyTable) ?? 1;\n  let sentientCount = generateSentientCount();\n  if (sentientCount > variety) {\n    sentientCount = variety;\n  }\n\n  const basicFaunaCount = variety - sentientCount;\n  return {\n    amount: sample(faunaAmountTable),\n    variety,\n    basicFaunaTypes: generateNFaunaTypes(basicFaunaCount),\n    sentientFaunaTypes: generateNFaunaTypes(sentientCount, true),\n  };\n};\n","import { sample, random, times } from \"lodash\";\nimport { generateFloraBiome } from \"./sf-flora\";\nimport { generateFaunaBiome } from \"./sf-fauna\";\nimport { FaunaBiome } from \"./sf-fauna\";\nimport { FloraBiome } from \"./sf-flora\";\n\nexport const basicsTables = {\n  surfaceTypes: [\n    \"Ocean\",\n    \"Desert\",\n    \"Forest\",\n    \"Marsh\",\n    \"Hills\",\n    \"Mountains\",\n    \"Plains\",\n    \"Exotic\",\n  ],\n  undergroundTypes: [\n    \"Dry Tunnels\",\n    \"Dry Tunnels\",\n    \"Flooded Tunnels\",\n    \"Underocean\",\n    \"Underforest\",\n    \"Underhills\",\n    \"Volcanic\",\n    \"Exotic\",\n  ],\n  heat: [\n    \"-1 Heat Level\",\n    \"-1 Heat Level\",\n    \"No Change\",\n    \"No Change\",\n    \"No Change\",\n    \"+1 Heat Level\",\n    \"+1 Heat Level\",\n  ],\n  modifier: [\n    \"-2 Heat Level\",\n    \"+2 Heat Level\",\n    \"Fluctuating Heat Level\",\n    \"Covered in Crystals\",\n    \"Mobile Migrating Flora\",\n    \"Moving Biome\",\n    \"Unusual Liquids\",\n    \"Steam Vents\",\n    \"Glowing Soil or Rock\",\n    \"Unusual Elevation\",\n    \"Giant Rocks\",\n    \"Local Atmosphere\",\n    \"Irradiated\",\n    \"Thick Fog\",\n    \"Everything Tinted to a Color\",\n    \"Great Chasms\",\n    \"Tar Pits\",\n    \"Floating Islands\",\n    \"Sinkholes\",\n    \"Diseased\",\n    \"Full of Bones\",\n    \"Geysers\",\n    \"Craters\",\n    \"Petrified Flora\",\n    \"Negative Energy\",\n    \"Positive Energy\",\n    \"Airborne Hallucinogen\",\n    \"Unusual Soil or Rock\",\n    \"Tied to a Deity\",\n    \"Planar Taint\",\n    \"Oppressive Silence\",\n    \"Electromagnetic Interference\",\n    \"Surface Metal Deposits\",\n    \"Local Gravity\",\n  ],\n};\n\nexport interface Biome {\n  heat?: string;\n  modifier?: string;\n  type?: string;\n  flora: FloraBiome;\n  fauna: FaunaBiome;\n}\n\nexport const generateBiomeBasics = (\n  count: number,\n  biomeClass: \"surface\" | \"underground\"\n): Biome[] => {\n  return times(count, () => {\n    const modIdx = random(1, 12) + random(1, 12) + random(1, 12) - 1;\n    const types =\n      biomeClass === \"surface\"\n        ? basicsTables.surfaceTypes\n        : basicsTables.undergroundTypes;\n    return {\n      heat: sample(basicsTables.heat),\n      modifier: basicsTables.modifier[modIdx],\n      type: sample(types),\n      flora: generateFloraBiome(),\n      fauna: generateFaunaBiome(),\n    };\n  });\n};\n","import { random } from \"lodash\";\n\nconst pointsOfInterestTable = [\n  \"Crashed Starship\",\n  \"Crashed Satellite\",\n  \"Stranded Survivors\",\n  \"Alien Ruins\",\n  \"Alien Mural\",\n  \"Alien Monument\",\n  \"Outcast Camp\",\n  \"Criminal Base\",\n  \"Precious Material Deposit\",\n  \"Stashed Treasure\",\n  \"Divine Monument\",\n  \"Natural Wonder\",\n];\n\nexport const genPOI = () => {\n  const hasPOI = random(1) === 0;\n  if (!hasPOI) {\n    return;\n  } else {\n    const dRoll = random(11) + random(11);\n    return pointsOfInterestTable[dRoll];\n  }\n};\n","import { sample } from \"lodash\";\nimport { genPOI } from \"./sf-poi\";\n\nexport interface Planet {\n  temperature?:\n    | \"Extreme Cold\"\n    | \"Severe Cold\"\n    | \"Very Cold\"\n    | \"Cold\"\n    | \"Cool\"\n    | \"Warm\"\n    | \"Hot\"\n    | \"Very Hot\"\n    | \"Severe Heat\"\n    | \"Extreme Heat\";\n  gravity?: \"Normal\" | \"Low\" | \"High\";\n  atmosphere?: \"Normal\" | \"Thin\" | \"Thick\" | \"None\" | \"Corrosive\";\n  surfaceBiomeCount?: number;\n  undergroundBiomeCount?: number;\n  pointOfInterest?: string;\n}\n\nexport const planetTables = {\n  temperature: [\n    \"Extreme Cold\",\n    \"Severe Cold\",\n    \"Very Cold\",\n    \"Very Cold\",\n    \"Cold\",\n    \"Cold\",\n    \"Cool\",\n    \"Cool\",\n    \"Cool\",\n    \"Cool\",\n    \"Warm\",\n    \"Warm\",\n    \"Warm\",\n    \"Warm\",\n    \"Hot\",\n    \"Hot\",\n    \"Very Hot\",\n    \"Very Hot\",\n    \"Severe Heat\",\n    \"Extreme Heat\",\n  ],\n  gravity: [\n    \"Normal\",\n    \"Normal\",\n    \"Normal\",\n    \"Normal\",\n    \"Low\",\n    \"Low\",\n    \"High\",\n    \"High\",\n  ],\n  atmosphere: [\n    \"Normal\",\n    \"Normal\",\n    \"Normal\",\n    \"Normal\",\n    \"Thin\",\n    \"Thin\",\n    \"Thick\",\n    \"Thick\",\n    \"None\",\n    \"Corrosive or Toxic\",\n  ],\n  surfaceBiomeCount: [1, 1, 1, 2, 2, 3, 4],\n  undergroundBiomeCount: [1, 1, 1, 1, 2, 2, 2, 3],\n};\n\nexport const generatePlanet = (): Planet => ({\n  temperature: sample(planetTables.temperature) as any,\n  atmosphere: sample(planetTables.atmosphere) as any,\n  gravity: sample(planetTables.gravity) as any,\n  surfaceBiomeCount: sample(planetTables.surfaceBiomeCount),\n  undergroundBiomeCount: sample(planetTables.undergroundBiomeCount),\n  pointOfInterest: genPOI(),\n});\n","import React, { FC } from \"react\";\nimport { FloraType } from \"./utils/sf-flora\";\n\ninterface IProps {\n  flora: FloraType;\n}\n\nconst FloraView: FC<IProps> = ({ flora }) => {\n  const relativeAmountSymbol =\n    flora.relativeAmount && flora.relativeAmount > 0 ? \"(+)\" : \"(-)\";\n  return (\n    <>\n      <h5>\n        <strong>\n          {flora.size} {flora.type}\n        </strong>{\" \"}\n        [ {relativeAmountSymbol} | {flora.threat}{\" \"}\n        {flora.quirk && (\n          <>\n            | <em>{flora.quirk}</em>\n          </>\n        )}{\" \"}\n        ]\n      </h5>\n    </>\n  );\n};\n\nexport default FloraView;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FaunaType } from \"./utils/sf-fauna\";\n\ninterface IProps {\n  fauna: FaunaType;\n}\n\nexport const SentientSection = styled.div`\n  margin-left: 25px;\n  h5 {\n    margin: 2px 0;\n  }\n`;\n\nconst FaunaView: FC<IProps> = ({ fauna }) => {\n  const { sentientDetails } = fauna;\n  const relativeAmountSymbol =\n    fauna.relativeAmount && fauna.relativeAmount > 0 ? \"(+)\" : \"(-)\";\n  return (\n    <>\n      <h5 style={{ marginBottom: \"3px\" }}>\n        <strong>\n          {sentientDetails && \"★ \"}\n          {fauna.size} {fauna.type}\n        </strong>{\" \"}\n        [ {relativeAmountSymbol} | {fauna.threat} | {fauna.temperament} |{\" \"}\n        {fauna.locomotion} | {fauna.grouping}\n        {fauna.quirk && (\n          <>\n            {\" \"}\n            | <em>{fauna.quirk}</em>\n          </>\n        )}{\" \"}\n        ]\n      </h5>\n      <SentientSection>\n        {sentientDetails && (\n          <>\n            <h5>\n              <strong>Architecture</strong>: {sentientDetails.architecture}\n            </h5>\n            {sentientDetails.art && (\n              <h5>\n                <strong>Art</strong>: {sentientDetails.art}\n              </h5>\n            )}\n            <h5>\n              <strong>Attitude</strong>: {sentientDetails.attitude}\n            </h5>\n            <h5>\n              <strong>Leadership</strong>: {sentientDetails.leadership}\n            </h5>\n            <h5>\n              <strong>Religion</strong>: {sentientDetails.religion}\n            </h5>\n            <h5>\n              <strong>Tech</strong> Level: {sentientDetails.techLevel}\n            </h5>\n            <h5>\n              <strong>Theme</strong>: {sentientDetails.theme}\n            </h5>\n            <h5>\n              <strong>Unity</strong>: {sentientDetails.unity}\n            </h5>\n            <h5>\n              <strong>Values</strong>: {sentientDetails.values}\n            </h5>\n          </>\n        )}\n      </SentientSection>\n    </>\n  );\n};\n\nexport default FaunaView;\n","import { Divider } from \"@material-ui/core\";\nimport { uniqueId } from \"lodash\";\nimport React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Biome } from \"./utils\";\nimport FloraView from \"./Flora\";\nimport FaunaView from \"./Fauna\";\n\ninterface IProps {\n  biomeData: Biome;\n}\n\nexport const BiomeContainer = styled.div`\n  border: 1px lightgrey solid;\n  border-radius: 5px;\n  padding: 10px;\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nconst BiomeView: FC<IProps> = ({ biomeData }) => {\n  return (\n    <BiomeContainer>\n      <h3>\n        <u>\n          <strong>{biomeData.type}:</strong>{\" \"}\n          {biomeData.heat !== \"No Change\" && biomeData.heat} (\n          {biomeData.modifier})\n        </u>\n      </h3>\n      <h4>\n        Flora (<em>{biomeData.flora.amount}</em>)\n      </h4>\n      {biomeData.flora.amount !== \"None\" &&\n        biomeData.flora.floraTypes?.map((floraType) => (\n          <FloraView key={uniqueId()} flora={floraType} />\n        ))}\n      <Divider />\n      <h4>\n        Fauna (<em>{biomeData.fauna.amount}</em>)\n      </h4>\n      {biomeData.fauna.amount !== \"None\" && (\n        <>\n          {biomeData.fauna.basicFaunaTypes?.map((faunaType) => (\n            <FaunaView key={uniqueId()} fauna={faunaType} />\n          ))}\n          {biomeData.fauna.sentientFaunaTypes?.map((faunaType) => (\n            <FaunaView key={uniqueId()} fauna={faunaType} />\n          ))}\n        </>\n      )}\n    </BiomeContainer>\n  );\n};\n\nexport default BiomeView;\n","import React, { FC, useState, useEffect } from \"react\";\n\nimport { generateBiomeBasics, generatePlanet } from \"./utils\";\nimport { uniqueId } from \"lodash\";\nimport BiomeView from \"./Biome\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.section`\n  padding: 8px;\n`;\n\nconst Worlds: FC = () => {\n  const [generatedPlanet, setGeneratedPlanet] = useState(generatePlanet());\n  const { surfaceBiomeCount, undergroundBiomeCount } = generatedPlanet;\n  const [surfaceBiomes, setSurfaceBiomes] = useState<any[]>([]);\n  const [undergroundBiomes, setUndergroundBiomes] = useState<any[]>([]);\n\n  useEffect(() => {\n    setSurfaceBiomes(generateBiomeBasics(surfaceBiomeCount ?? 1, \"surface\"));\n    setUndergroundBiomes(\n      generateBiomeBasics(undergroundBiomeCount ?? 1, \"underground\")\n    );\n  }, [generatedPlanet, surfaceBiomeCount, undergroundBiomeCount]);\n\n  const generateNewPlanet = () => {\n    setGeneratedPlanet(generatePlanet());\n  };\n\n  const copyToClipboard = () => {\n    //Before we copy, we are going to select the text.\n    var text = document.getElementById(\"copy-target\");\n    var selection = window.getSelection();\n    var range = document.createRange();\n    if (text) {\n      range.selectNodeContents(text);\n      selection?.removeAllRanges();\n      selection?.addRange(range);\n      //add to clipboard.\n      document.execCommand(\"copy\");\n      selection?.removeAllRanges();\n      window.open(\"mailto:*?subject=World:\", \"_blank\");\n    }\n  };\n\n  const GeneratedComponent = (\n    <>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={7}>\n          <Grid key=\"atmospere\" item>\n            <p>\n              <strong>Atmosphere</strong>\n            </p>\n            <p>{generatedPlanet.atmosphere}</p>\n          </Grid>\n          <Grid key=\"gravity\" item>\n            <p>\n              <strong>Gravity</strong>\n            </p>\n            <p>{generatedPlanet.gravity}</p>\n          </Grid>\n          <Grid key=\"temperature\" item>\n            <p>\n              <strong>Temperature</strong>\n            </p>\n            <p>{generatedPlanet.temperature}</p>\n          </Grid>\n          {generatedPlanet.pointOfInterest && (\n            <Grid key=\"poi\" item>\n              <p>\n                <strong>POI</strong>\n              </p>\n              <p>{generatedPlanet.pointOfInterest}</p>\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n      <Grid container justify=\"space-around\" spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <h2>Surface Biomes</h2>\n          {surfaceBiomes.map((biome) => (\n            <BiomeView key={uniqueId()} biomeData={biome} />\n          ))}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <h2>Underground Biomes</h2>\n          {undergroundBiomes.map((biome) => (\n            <BiomeView key={uniqueId()} biomeData={biome} />\n          ))}\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  return (\n    <>\n      <Container>\n        <Grid container justify=\"center\" spacing={2}>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={generateNewPlanet}\n            >\n              Generate New Planet\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={copyToClipboard}\n            >\n              Copy\n            </Button>\n          </Grid>\n        </Grid>\n        <div id=\"copy-target\">{GeneratedComponent}</div>\n      </Container>\n    </>\n  );\n};\n\nexport default Worlds;\n","import { sample } from \"lodash\";\n\nconst eventsTable = [\n  {\n    type: \"Rise of a leader or an era\",\n    subTable: [\n      \"Political\",\n      \"Religious\",\n      \"Military\",\n      \"Crime/underworld\",\n      \"Art/culture\",\n      \"Philosophy/learning,/agic\",\n    ],\n  },\n  {\n    type: \"Fall of a leader or an era\",\n    subTable: [\n      \"Political\",\n      \"Religious\",\n      \"Military\",\n      \"Crime/underworld\",\n      \"Art/culture\",\n      \"Philosophy/learning,/agic\",\n    ],\n  },\n  {\n    type: \"Cataclysmic disaster\",\n    subTable: [\n      \"Earthquake\",\n      \"Faminef drought\",\n      \"Fire\",\n      \"Flood\",\n      \"Plaguefdisease\",\n      \"Rain of fire (meteoric impact)\",\n      \"Storm (hurricane, tornado, tsunami)\",\n      \"Volcanic eruption\",\n      \"Magic gone awry or a planar warp\",\n      \"Divine judgment\",\n    ],\n  },\n  {\n    type: \"Assault or invasion\",\n    subTable: [\n      \"A criminal enterprise\",\n      \"Monsters or a unique monster\",\n      \"A planar threat\",\n      \"A past adversary reawakened, reborn, or resurgent\",\n      \"A splinter faction\",\n      \"A savage tribe\",\n      \"A secret society\",\n      \"A traitorous ally\",\n    ],\n  },\n  { type: \"Rebellion, revolution, overthrow\" },\n  {\n    type: \"Extinction or depletion\",\n    subTable: [\n      \"A kind of animal (insect , bird, fish, livestock)\",\n      \"Habitable land\",\n      \"Magic or magic-users (all magic, or specific kinds or schools of magic)\",\n      \"A mineral resource (gems, metals, ores)\",\n      \"A type of monster (unicorn, manticore, dragon)\",\n      \"A people (family line, clan, culture, race)\",\n      \"A kind of plant (crop, tree, herb, forest)\",\n      \"A waterway (river, lake, ocean)\",\n    ],\n  },\n  {\n    type: \"New organization\",\n    subTable: [\n      \"Crime syndicate/bandit confederacy\",\n      \"Guild (masons, apothecaries, goldsmiths)\",\n      \"Magical circle/society\",\n      \"Military/knightly order\",\n      \"New family dynasty/tribe/clan\",\n      \"Philosophy/discipline dedicated to a principle or ideal\",\n      \"Realm (village, town, duchy, kingdom)\",\n      \"Religion/sect/denomination\",\n      \"School/university\",\n      \"Secret society/cult/cabal\",\n    ],\n  },\n  {\n    type: \"Discovery, expansion, invention\",\n    subTable: [\n      \"Ancient ruin/lost city of a legendary race\",\n      \"Animal/monster/magical mutation\",\n      \"Invention/technology/magic (helpful, destructive)\",\n      \"New (or forgotten) god or planar entity\",\n      \"New (or rediscovered) artifact or religious relic\",\n      \"New land (island, continent, lost world, demiplane)\",\n      \"Otherworldly object (planar portal, alien spacecraft)\",\n      \"People (race, tribe, lost civilization, colony)\",\n      \"Plant (miracle herb, fungal parasite, sentient plant)\",\n      \"Resource or wealth (gold, gems, mithral)\",\n    ],\n  },\n  { type: \"Prediction, omen, prophecy\" },\n  {\n    type: \"Myth and legend\",\n    subTable: [\n      \"Rise of a leader or an era\",\n      \"Fall of a leader or an era\",\n      \"Cataclysmic disaster\",\n      \"Assault or invasion\",\n      \"Rebellion, revolution, overthrow\",\n      \"Extinction or depletion\",\n      \"New organization\",\n      \"Discovery, expansion, invention\",\n    ],\n  },\n  { type: \"Anniversary of a monarch's reign \" },\n  { type: \"Anniversary of an important event \" },\n  { type: \"Arena event\" },\n  { type: \"Arrival of a caravan or ship\" },\n  { type: \"Arrival of a circus\" },\n  { type: \"Arrival of an important NPC\" },\n  { type: \"Arrival of marching modrons\" },\n  { type: \"Artistic performance\" },\n  { type: \"Athletic event\" },\n  { type: \"Birth of a child\" },\n  { type: \"Birthday of an important NPC\" },\n  { type: \"Civic festival\" },\n  { type: \"Comet appearance\" },\n  { type: \"Commemoration of a past tragedy\" },\n  { type: \"Consecration of a new temple\" },\n  { type: \"Coronation\" },\n  { type: \"Council meeting\" },\n  { type: \"Equinox or solstice  \" },\n  { type: \"Execution\" },\n  { type: \"FertiIity festivaI\" },\n  { type: \"Full moon\" },\n  { type: \"Funeral\" },\n  { type: \"Graduation of cadets or wizards\" },\n  { type: \"Harvest festival\" },\n  { type: \"Holy day\" },\n  { type: \"Investiture of a knight or other noble\" },\n  { type: \"Lunar eclipse\" },\n  { type: \"Midsummer festival\" },\n  { type: \"Midwinter festival\" },\n  { type: \"Migration of monsters\" },\n  { type: \"Monarch's ball\" },\n  { type: \"New moon\" },\n  { type: \"New year\" },\n  { type: \"Pardoning of a prisoner\" },\n  { type: \"Planar conjunction\" },\n  { type: \"Planetary alignment\" },\n  { type: \"Priestly investiture\" },\n  { type: \"Procession of ghosts\" },\n  { type: \"Remembrance for soldiers lost in war \" },\n  { type: \"Royal address or proclamation\" },\n  { type: \"Royal audience day\" },\n  { type: \"Signing of a treaty\" },\n  { type: \"Solar eclipse\" },\n  { type: \"Tournament\" },\n  { type: \"Trial\" },\n  { type: \"Violent uprising\" },\n  { type: \"Wedding or wedding anniversary\" },\n];\n\nexport interface GeneratedEvent {\n  type?: string;\n  subType?: string;\n}\n\nexport const generateEvent = (): GeneratedEvent => {\n  const eventType = sample(eventsTable);\n  const subType = sample(eventType?.subTable);\n  return {\n    type: eventType?.type,\n    subType,\n  };\n};\n","import React, { FC, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { generateEvent, GeneratedEvent } from \"./utils\";\nimport { Button } from \"@material-ui/core\";\n\nexport const Container = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst Events: FC = () => {\n  const [generatedEvent, setGeneratedEvent] = useState<GeneratedEvent>(\n    generateEvent()\n  );\n  const generateNewEvent = () => {\n    setGeneratedEvent(generateEvent());\n  };\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewEvent}\n      >\n        Generate Event\n      </Button>\n      <h3>{generatedEvent.type}</h3>\n      <p>{generatedEvent.subType}</p>\n    </Container>\n  );\n};\n\nexport default Events;\n","import React, { FC, useState } from \"react\";\nimport FaunaView from \"./Fauna\";\nimport { generateFaunaType, FaunaType } from \"./utils/sf-fauna\";\nimport { Button } from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst Creatures: FC = () => {\n  const [generatedCreature, setGeneratedCreature] = useState<FaunaType>(\n    generateFaunaType(false, true)\n  );\n\n  const generateNewCreature = () => {\n    setGeneratedCreature(generateFaunaType(false, true));\n  };\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewCreature}\n      >\n        Generate Creature\n      </Button>\n      <FaunaView fauna={generatedCreature} />\n    </Container>\n  );\n};\n\nexport default Creatures;\n","import { random, sample } from \"lodash\";\n\nexport interface GeneratedSettlement {\n  raceRelation?: string;\n  rulerStatus?: string;\n  notableTrait?: string;\n  knownFor?: string;\n  calamity?: string;\n}\n\nconst settlementTables = {\n  getRacialRelatons: () => {\n    const dRoll = random(1, 20);\n    if (dRoll <= 10) return \"Harmony\";\n    if (dRoll <= 14) return \"Tension or rivalry\";\n    if (dRoll <= 16) return \"Racial majority are conquerors \";\n    if (dRoll === 17) return \"Racial minority are rulers\";\n    if (dRoll === 18) return \"Racial minority are refugees\";\n    if (dRoll === 19) return \"Racial majority oppresses minority \";\n    if (dRoll === 20) return \"Racial minority oppresses majority\";\n  },\n\n  getRulerStatus: () => {\n    const dRoll = random(1, 20);\n    if (dRoll <= 5) return \"Respected, fair, and just\";\n    if (dRoll <= 8) return \"Feared tyrant\";\n    if (dRoll === 9) return \"Weakling manipulated by others\";\n    if (dRoll === 10) return \"Illegitimate ruler, simmering civil war\";\n    if (dRoll === 11) return \"Ruled or controlled by a powerful monster\";\n    if (dRoll === 12) return \"Mysterious, anonymous cabal\";\n    if (dRoll === 13) return \"Contested leadership, open fighting\";\n    if (dRoll === 14) return \"Cabal seized power openly\";\n    if (dRoll === 15) return \"Doltish lout\";\n    if (dRoll === 16) return \"On deathbed, claimants compete for power\";\n    if (dRoll <= 18) return \"Iron-willed but respected\";\n    if (dRoll <= 20) return \"Religious leader\";\n  },\n  notableTraits: [\n    \"Canals in place of streets\",\n    \"Massive statue or monument\",\n    \"Grand temple\",\n    \"Large fortress\",\n    \"Verdant parks and orchards\",\n    \"River divides town\",\n    \"Major trade center\",\n    \"Headquarters of a powerful family or guild\",\n    \"Population mostly wealthy\",\n    \"Destitute , rundown\",\n    \"Awful smell (tanneries, open sewers)\",\n    \"Center of trade for one specific good\",\n    \"Site of many battles\",\n    \"Site of a mythic or magical event\",\n    \"Important library or archive\",\n    \"Worship of all gods banned\",\n    \"Sinister reputation\",\n    \"Notable library or academy\",\n    \"Site of important tomb or graveyard\",\n    \"Built atop ancient ruins\",\n  ],\n  knownFor: [\n    \"Delicious cuisine\",\n    \"Rude people\",\n    \"Greedy merchants\",\n    \"Artists and writers\",\n    \"Great herojsavior\",\n    \"Flowers\",\n    \"Hordes of beggars\",\n    \"Tough warriors\",\n    \"Dark magic\",\n    \"Decadence\",\n    \"Piet\",\n    \"Gambling\",\n    \"Godlessness\",\n    \"Education\",\n    \"Wine\",\n    \"High fashion\",\n    \"Political intrigue\",\n    \"Powerful guilds\",\n    \"Strong drink\",\n    \"Patriotis\",\n  ],\n  calamity: [\n    \"Suspected vampire infestation\",\n    \"New cult seeks converts\",\n    \"Important figure died (murder suspected) \",\n    \"War between rival thieves' guilds\",\n    \"Plague or famine (sparks riots) \",\n    \"Plague or famine (sparks riots) \",\n    \"Corrupt officials\",\n    \"Marauding monsters\",\n    \"Marauding monsters\",\n    \"Powerful wizard has moved into town\",\n    \"Economic depression (trade disrupted)\",\n    \"Flooding\",\n    \"Undead stirring in cemeteries\",\n    \"Prophecy of doom\",\n    \"Brink ofwar\",\n    \"Internal strife (leads to anarchy)\",\n    \"Besieged by enemies\",\n    \"Scandal threatens powerful families\",\n    \"Dungeon discovered (adventurers flock to town) \",\n    \"Religious sects struggle for power\",\n  ],\n};\n\nexport const generateSettlement = (): GeneratedSettlement => {\n  return {\n    raceRelation: settlementTables.getRacialRelatons(),\n    rulerStatus: settlementTables.getRulerStatus(),\n    notableTrait: sample(settlementTables.notableTraits),\n    knownFor: sample(settlementTables.knownFor),\n    calamity: sample(settlementTables.calamity),\n  };\n};\n","import React, { FC, useState } from \"react\";\nimport { GeneratedSettlement, generateSettlement } from \"./utils\";\nimport { Button } from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  text-align: left;\n`;\n\nconst Settlements: FC = () => {\n  const [generatedSettlement, setGeneratedSettlement] = useState<\n    GeneratedSettlement\n  >(generateSettlement);\n\n  const generateNewSettlement = () => {\n    setGeneratedSettlement(generateSettlement());\n  };\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewSettlement}\n      >\n        Generate Settlement\n      </Button>\n      <p>\n        <strong>Social Relations:</strong> {generatedSettlement.raceRelation}\n      </p>\n      <p>\n        <strong>Ruler Status:</strong> {generatedSettlement.rulerStatus}\n      </p>\n      <p>\n        <strong>Notable Traits:</strong> {generatedSettlement.notableTrait}\n      </p>\n      <p>\n        <strong>Known For:</strong> {generatedSettlement.knownFor}\n      </p>\n      <p>\n        <strong>Current Calamity:</strong> {generatedSettlement.calamity}\n      </p>\n    </Container>\n  );\n};\n\nexport default Settlements;\n","import { sample } from \"lodash\";\n\nconst goalsTable = [\n  \"Stop the dungeon's monstrous inhabitants from raiding the surface world.\",\n  \"Foil a villain's evil scheme.\",\n  \"Destroy a magical threat inside the dungeon.\",\n  \"Acquire treasure.\",\n  \"Find a particular item for a specific purpose.\",\n  \"Retrieve a stolen item hidden in the dungeon.\",\n  \"Find information needed for a special purpose.\",\n  \"Rescue a captive.\",\n  \"Discover the fate of a previous adventuring party.\",\n  \"Find an NPC who disappeared in the area.\",\n  \"Slay a dragon or some other challenging monster.\",\n  \"Discover the nature and origin of a strange location or phenomenon.\",\n  \"Pursue fleeing foes taking refuge in the dungeon.\",\n  \"Escape from captivity in the dungeon.\",\n  \"Clear a ruin so it can be rebuilt and reoccupied.\",\n  \"Discover why a villain is interested in the dungeon.\",\n  \"Win a bet or complete a rite of passage by surviving in the dungeon for a certain amount of time.\",\n  \"Parley with a villain in the dungeon.\",\n  \"Hide from a threat outside the dungeon.\",\n  \"Locate a dungeon or other site of interest (roll on the Dungeon Goals table to find out why).\",\n  \"Assess the scope of a natural or unnatural disaster. \",\n  \"Escort an NPC to a destination.\",\n  \"Arrive at a destination without being seen by the villain's forces.\",\n  \"Stop monsters from raiding caravans and farms.\",\n  \"Establish trade with a distant town.\",\n  \"Protect a caravan traveling to a distant town.\",\n  \"Map a new land.\",\n  \"Find a place to establish a colony.\",\n  \"Find a natural resource.\",\n  \"Hunt a specific monster.\",\n  \"Return home from a distant place.\",\n  \"Obtain information from a reclusive hermit.\",\n  \"Find an object that was lost in the wilds.\",\n  \"Discover the fate of a missing group of explorers. \",\n  \"Pursue fleeing foes.\",\n  \"Assess the size of an approaching army.\",\n  \"Escape the reign of a tyrant.\",\n  \"Protect a wilderness site from attackers.\",\n  \"Seize control of a fortified location such as a fortress, town, or ship.\",\n  \"Defend a location from attackers.\",\n  \"Retrieve an object from inside a secure location in a settlement.\",\n  \"Retrieve an object from a caravan.\",\n  \"Salvage an object or goods from a lost vessel or caravan.\",\n  \"Break a prisoner out ofa jail or prison camp. Escape from a jai l or prison camp.\",\n  \"Successfully travel through an obstacle course to gain recognition or reward.\",\n  \"Infiltrate a fortified location.\",\n  \"Find the source of strange occurrences in a haunted house or other location.\",\n  \"Interfere with the operation of a business.\",\n  \"Rescue a character, monster, or object from a natural or unnatural disaster.\",\n  \"Bring the villain to justice.\",\n  \"ClearthenameofaninnocentNPC.\",\n  \"Protect or hide an NPC.\",\n  \"Protect an object.\",\n  \"Discover the nature and origin of a strange phenomenon that might be the villain's doing.\",\n  \"Find a wanted fugitive.\",\n  \"Overthrow a tyrant.\",\n  \"Uncover a conspiracy to overthrow a ruler.\",\n  \"Negotiate peace between enemy nations or feuding families.\",\n  \"Secure aid from a ruler or council.\",\n  \"Help a villain find redemption.\",\n  \"Parley with a villain.\",\n  \"Smuggle weapons to rebel forces.\",\n  \"Stop a band of smugglers.\",\n  \"Gather intelligence on an enemy force.\",\n  \"Win a tournament.\",\n  \"Determine the villain's identity.\",\n  \"Locate a stolen item.\",\n  \"Make sure a wedding goes off without a hitch.\",\n];\n\nconst villainsTable = {\n  goalsTable: [\n    {\n      goal: \"Immortality\",\n      subGoals: [\n        \"Acquire a legendary item to prolong life\",\n        \"Ascend to godhood\",\n        \"Become undead or obtain a younger body\",\n        \"Steal a planar creature's essence\",\n      ],\n    },\n    {\n      goal: \"Influence\",\n      subGoals: [\n        \"Seize a position of power or title\",\n        \"Win a contest or tournament\",\n        \"Win favor with a powerful individu al\",\n        \"Place a pawn in a position of power\",\n      ],\n    },\n    {\n      goal: \"Magic\",\n      subGoals: [\n        \"Obtain an ancient artifact\",\n        \"Build a construct or magical device\",\n        \"Carry out a deity's wishes\",\n        \"Offer sacrifices to a deity\",\n        \"Contact a lost deity or power\",\n        \"Open a gate to another world\",\n      ],\n    },\n    {\n      goal: \"Mayhem\",\n      subGoals: [\n        \"Fulfill an apocalyptic prophecy\",\n        \"Enact the vengeful will of a god or patron \",\n        \"Spread a vile contagion\",\n        \"Overthrow a government\",\n        \"Trigger a natural disaster\",\n        \"Utterly destroy a bloodline or clan\",\n      ],\n    },\n\n    {\n      goal: \"Passion\",\n      subGoals: [\n        \"Prolong the life of a loved one\",\n        \"Prove worthy of another person's love\",\n        \"Raise or restore a dead loved one\",\n        \"Destroy rivals for another person's affection\",\n      ],\n    },\n    {\n      goal: \"Power\",\n      subGoals: [\n        \"Conquer a region or incite a rebellion\",\n        \"Seize control ofan army\",\n        \"Become the power behind the throne\",\n        \"Gain the favor of a ruler\",\n      ],\n    },\n    {\n      goal: \"Revenge\",\n      subGoals: [\n        \"Avenge a past humiliation or insult\",\n        \"Avenge a past imprisonment or injury\",\n        \"Avenge the death of a loved one\",\n        \"Retrieve stolen property and punish the thief\",\n      ],\n    },\n    {\n      goal: \"Wealth\",\n      subGoals: [\n        \"Control natural resources or trade\",\n        \"Marry into wealth\",\n        \"Plunder ancient ruins\",\n        \"Steal land , goods, or money\",\n      ],\n    },\n  ],\n  methodsTable: [\n    {\n      method: \"Agricultural\",\n      subMethod: [\"Blight\", \"Crop failure\", \"Drought\", \"Famine\"],\n    },\n    {\n      method: \"Assault or beatings\",\n    },\n    {\n      method: \"Bounty hunting or assassination\",\n    },\n\n    {\n      method: \"Captivity or coercion\",\n      subMethod: [\n        \"Bribery\",\n        \"Enticement\",\n        \"Eviction \",\n        \"Imprisonment \",\n        \"Kidnapping\",\n        \"Legal intimidation\",\n        \"Press gangs\",\n        \"Shackling\",\n        \"Slavery\",\n        \"Threats or harassment\",\n      ],\n    },\n    {\n      method: \"Confidence scams\",\n      subMethod: [\n        \"Breach of contract\",\n        \"Cheating\",\n        \"Fast talking\",\n        \"Fine print\",\n        \"Fraud or swindling\",\n        \"Quackery or tricks\",\n      ],\n    },\n    {\n      method: \"Defamation\",\n      subMethod: [\n        \"Framing\",\n        \"Gossiping or slander\",\n        \"Humiliation\",\n        \"Libel or insults\",\n      ],\n    },\n    {\n      method: \"Dueling Execution\",\n      subMethod: [\n        \"Beheading\",\n        \"Burning at the stake\",\n        \"Burying alive\",\n        \"Crucifi xion\",\n        \"Drawing and quartering\",\n        \"Hanging\",\n        \"Impalement\",\n        \"Sacrifice (living)\",\n      ],\n    },\n    { method: \"Impersonation or disguise\" },\n    { method: \"Lying or perjury\" },\n    {\n      method: \"Magical mayhem\",\n      subMethod: [\n        \"Hauntings\",\n        \"Illusions\",\n        \"Infernal bargains\",\n        \"Mind control\",\n        \"Petrification\",\n        \"Raising or animating the dead \",\n        \"Summoning monsters \",\n        \"Weather control\",\n      ],\n    },\n\n    {\n      method: \"Murder\",\n      subMethod: [\n        \"Assassination\",\n        \"Cannibalism\",\n        \"Dismemberment\",\n        \"Drowning\",\n        \"Electrocution\",\n        \"Euthanasia (involuntary)\",\n        \"Disease\",\n        \"Poisoning\",\n        \"Stabbing\",\n        \"Strangulation or suffocation \",\n      ],\n    },\n    { method: \"Neglect\" },\n    {\n      method: \"Politics\",\n      subMethod: [\n        \"Betrayal or treason\",\n        \"Conspiracy\",\n        \"Espionage or spying\",\n        \"Genocide\",\n        \"Oppression\",\n        \"Raising taxes\",\n      ],\n    },\n    {\n      method: \"Religion\",\n      subMethod: [\"Curses\", \"Desecration\", \"False gods\", \"Heresy or cults\"],\n    },\n    { method: \"Stalking\" },\n    {\n      method: \"Theft or Property Crime\",\n      subMethod: [\n        \"Arson\",\n        \"Blackmail or extortion\",\n        \"Burglary\",\n        \"Counterfeiting\",\n        \"Highway robbery\",\n        \"Looting\",\n        \"Mugging\",\n        \"Poaching\",\n        \"Seizing property\",\n        \"Smuggling\",\n      ],\n    },\n    {\n      method: \"Torture\",\n      subMethod: [\n        \"Acid\",\n        \"Blinding\",\n        \"Branding\",\n        \"Racking\",\n        \"Thumbscrews\",\n        \"Whipping\",\n      ],\n    },\n    {\n      method: \"Vice\",\n      subMethod: [\"Adultery\", \"Drugs or alcohol\", \"Gambling\", \"Seduction\"],\n    },\n    {\n      method: \"Warfare\",\n      subMethod: [\n        \"Ambush\",\n        \"Invasion\",\n        \"Massacre\",\n        \"Mercen aries\",\n        \"Rebellion\",\n        \"Terrorism\",\n      ],\n    },\n  ],\n};\n\nexport interface GeneratedQuest {\n  goal?: string;\n}\n\nexport interface GeneratedVillain {\n  goal?: string;\n  subGoal?: string;\n  method?: string;\n  subMethod?: string;\n}\n\nexport const generateQuest = (): GeneratedQuest => {\n  const goal = sample(goalsTable);\n  return { goal };\n};\n\nexport const generateVillain = (): GeneratedVillain => {\n  const goal = sample(villainsTable.goalsTable);\n  const method = sample(villainsTable.methodsTable);\n  return {\n    goal: goal?.goal,\n    method: method?.method,\n    subGoal: sample(goal?.subGoals),\n    subMethod: sample(method?.subMethod),\n  };\n};\n","import React, { FC, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  GeneratedQuest,\n  generateQuest,\n  generateVillain,\n  GeneratedVillain,\n} from \"./utils\";\n\nconst Container = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  button {\n    margin-bottom: 2em;\n  }\n`;\n\nconst Quests: FC = () => {\n  const [generatedQuest, setGeneratedQuest] = useState<GeneratedQuest>(\n    generateQuest()\n  );\n  const [generatedVillain, setGeneratedVillain] = useState<GeneratedVillain>(\n    generateVillain()\n  );\n  const generateNewQuest = () => {\n    setGeneratedQuest(generateQuest());\n  };\n  const generateNewVillain = () => {\n    setGeneratedVillain(generateVillain());\n  };\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewQuest}\n      >\n        Generate Quest\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewVillain}\n      >\n        Generate Villain\n      </Button>\n      <h3>Quest goal</h3>\n      <p>{generatedQuest.goal}</p>\n      <h3>Villain</h3>\n      <h4>{generatedVillain.goal}</h4>\n      <p>{generatedVillain.subGoal}</p>\n      <h4>{generatedVillain.method}</h4>\n      <p>{generatedVillain.subMethod}</p>\n    </Container>\n  );\n};\n\nexport default Quests;\n","import { sample } from \"lodash\";\n\nconst classesTable = [\n  \"Artificer\",\n  \"Barbarian\",\n  \"Bard\",\n  \"Cleric\",\n  \"Druid\",\n  \"Fighter\",\n  \"Monk\",\n  \"Paladin\",\n  \"Ranger\",\n  \"Rogue\",\n  \"Sorcerer\",\n  \"Warlock\",\n  \"Wizard\",\n];\n\nconst alignmentX = [\"L\", \"N\", \"C\"];\nconst alignmentY = [\"G\", \"N\", \"E\"];\n\nexport const generateDNDChar = () => {\n  let alignment = (sample(alignmentX) ?? \"N\") + (sample(alignmentY) ?? \"N\");\n  if (alignment === \"NN\") {\n    alignment = \"N\";\n  }\n  return `${sample(classesTable)} - ${alignment}`;\n};\n","import { sampleSize } from \"lodash\";\n\nconst originsTable = [\n  \"Advanced\",\n  \"Brutal\",\n  \"Colonist\",\n  \"Crowded\",\n  \"Forlorn\",\n  \"Galactic\",\n  \"Impoverished\",\n  \"Occult\",\n  \"Primal\",\n  \"Privileged\",\n  \"Productive\",\n  \"Programmed\",\n  \"Regimented\",\n  \"Rustic\",\n  \"Spiritual\",\n];\nconst careersTable = [\n  \"Academic\",\n  \"Augmented\",\n  \"Chosen\",\n  \"Clandestine\",\n  \"Commercial\",\n  \"Consul\",\n  \"Explorer\",\n  \"Fanatic\",\n  \"Industrial\",\n  \"Kinetic\",\n  \"Military\",\n  \"Personality\",\n  \"Personality\",\n  \"Psychic\",\n  \"Scoundrel\",\n  \"Shaper\",\n  \"Starfarer\",\n  \"Technnocrat\",\n];\n\nexport const generateArchetype = () => {\n  return `${sampleSize(careersTable, 2).join(\" - \")} - ${sampleSize(\n    originsTable\n  )}`;\n};\n","import { sample } from \"lodash\";\n\nexport interface Skill {\n  name: string;\n  description: string;\n  iconName?: string;\n}\n\nconst skillsTable: { [key: string]: Skill } = {\n  education: {\n    name: \"education\",\n    description:\n      \"When you gain one or more Data Points about a subject, each ally that was present or involved also gains a Data Point about the subject.\",\n    iconName: \"school\",\n  },\n  chemistry: {\n    name: \"chemistry\",\n    description:\n      \"When creating an antidote, vaccine, drug, poison or pathogen in a lab, state the effect you want it to have and its method of transmission (spray, injector, pill, etc). Roll+Expertise.\\nOn a 10+, you successfully create it.\\nOn a 7-9, it will have reduced potency or have unintended side effects.\",\n    iconName: \"flask\",\n  },\n  surgery: {\n    name: \"surgery\",\n    description:\n      \"When using a medical facility, your Patch Up can be used to install prosthetics and perform surgical reconstruction on living beings. This treats critical injuries.\",\n    iconName: \"medkit\",\n  },\n  deduction: {\n    name: \"deduction\",\n    description:\n      \"When you first witness a situation, you may ask one of the following questions, the GM will answer honestly.\\nWho or what? \\n- is most vulnerable in this situation? \\n- is most dangerous in this situation? \\n- caused this situation?\",\n    iconName: \"search\",\n  },\n  technobabble: {\n    name: \"technobabble\",\n    description:\n      \"You can Command crew using Expertise rather than Influence. Subjects of your Command can perform minor technical or scientific tasks, no matter their skill set.\",\n    iconName: \"wifi\",\n  },\n  stealth: {\n    name: \"stealth\",\n    description:\n      \"Whenever you can move around freely and are unobserved, you can choose to vanish without a trace. While missing, you may show up in the midst of events, as long as you can explain how you got there.\",\n    iconName: \"contact\",\n  },\n  sabotage: {\n    name: \"sabotage\",\n    description:\n      \"When you tamper with machines, plans, etc, describe how you go about it and Roll+[Stat].\\nOn a 10+ the target of your tampering is doomed to fail, just as you planned.\\nOn a 7-9, the target of your tampering is doomed to fail spectacularly, horrifically or comically, at the GM's discretion.\",\n    iconName: \"build\",\n  },\n  assassination: {\n    name: \"assassination\",\n    description:\n      \"Any successful (10+) Move that results in someone's death also leaves no evidence that you committed the act.\",\n    iconName: \"locate\",\n  },\n  surveillance: {\n    name: \"surveillance\",\n    description:\n      \"After you Access someone's personal systems, you can track that person's public movements from then on (general location, interactions, transactions, etc). You can only have one surveillance subject at a time.\",\n    iconName: \"videocam\",\n  },\n  interrogation: {\n    name: \"interrogation\",\n    description:\n      \"When you question someone who is at your mercy, gain 3 Data Points about them: their lives, their job, their transactions, their friends, their family, their guilt, their shame, etc.\",\n    iconName: \"help\",\n  },\n  outfit: {\n    name: \"outfit\",\n    description:\n      \"Own a unique Class 3 Attire. If your attire is ever lost or damaged, you can abandon it and spend an extended period of time claiming new attire as your Outfit, adding an extra upgrade to it.\",\n    iconName: \"shirt\",\n  },\n  marketing: {\n    name: \"marketing\",\n    description:\n      \"When you arrive in a civilized area, choose a type of market. You can easily find that kind of market here.\\n- Elite: High class, exacting.\\n- Secretive: Discrete, illicit.\\n- Motivated: Fast, agreeable.\",\n    iconName: \"cash\",\n  },\n  acumen: {\n    name: \"acumen\",\n    description:\n      \"When you first visit a market or environment, you may ask one of the following questions, and the GM will answer honestly:\\n- What is profitably exploitable here?\\n- What is in high demand here?\\n- Who is the biggest economic player?\",\n    iconName: \"card\",\n  },\n  luxury: {\n    name: \"luxury\",\n    description:\n      \"Your clothing, belongings and quarters are all lavish and expensive. Gain one of the following NPCs as a retainer: Butler, Assistant, Consort or Advisor. Name the NPC and give them a 2-4 word description.\",\n    iconName: \"star\",\n  },\n  bribe: {\n    name: \"bribe\",\n    description:\n      \"You can use Acquisition to purchase the following: \\n- Political power \\n- Legal decisions \\n- Faction involvement \\n- Diplomatic immunity\",\n    iconName: \"wallet\",\n  },\n  \"boldly go\": {\n    name: \"boldly go\",\n    description:\n      \"When leading an expedition into the unknown, Roll+Mettle. \\nOn a 10+, choose 1. \\nOn a 7-9, the GM will choose 1. \\nYou encounter: \\n- something potentially profitable \\n- something currently useful \\n- something uniquely awesome\",\n    iconName: \"rocket\",\n  },\n  reconnaissance: {\n    name: \"reconnaissance\",\n    description:\n      \"When you make an Assessment of any aspect of a wilderness (animals, plants, weather, terrain, hazards, etc) you gain 3 Data Points about that subject on a 10+, and 1 Data Point about that subject on a 7-9.\",\n    iconName: \"search\",\n  },\n  survival: {\n    name: \"survival\",\n    description:\n      \"You can scrounge up the following from all but the most barren, inhospitable surroundings:\\n- Somewhat edible food and drink\\n- Basic medicine or first-aid materials\\n- Rustic Wilderness Kit\\n- Primitive Class 0 melee weapon\",\n    iconName: \"bonfire\",\n  },\n  recklessness: {\n    name: \"recklessness\",\n    description:\n      \"When you make a needlessly risky Move where the odds are a million to one, roll 1d6 instead of making a normal Roll. On a 4, 5 or 6, the Move is a fantastically lucky success. On a 1, 2 or 3, the Move is a spectacularly awful failure with harsh consequences.\",\n    iconName: \"warning\",\n  },\n  \"custom vehicle\": {\n    name: \"custom vehicle\",\n    description:\n      \"You own a custom-designed Class 3 land vehicle. If that vehicle is ever lost, you can spend an extended period of time claiming a new land vehicle as your Custom Vehicle, adding an extra upgrade to it.\",\n    iconName: \"car\",\n  },\n  repair: {\n    name: \"repair\",\n    description:\n      \"When using a repair bay or workshop, your Patch Up can be used to install replacement parts and perform major reconstruction on machines. This repairs critical and fatal breakages.\",\n    iconName: \"build\",\n  },\n  construction: {\n    name: \"construction\",\n    description:\n      \"A few hours of work creates a small structure with one of the following traits, or adds that trait to an existing room.\\n- Shelter\\n- Defensible\\n- Concealed\\n- Workspace\",\n    iconName: \"construct\",\n  },\n  tinker: {\n    name: \"tinker\",\n    description:\n      \"You can assemble the following from scrap metal and spare parts:\\n- Shoddy Class 0 melee weapon\\n- Makeshift Class 0 explosive\\n- Crude Engineering Kit\",\n    iconName: \"hammer\",\n  },\n  upgrade: {\n    name: \"upgrade\",\n    description:\n      \"Your Patch Up can very temporarily add up to one additional upgrade to a weapon or vehicle, briefly increasing its Class by +1.\",\n    iconName: \"trending-up\",\n  },\n  dismantle: {\n    name: \"dismantle\",\n    description:\n      \"When forcefully dismantling, demolishing or breaking something, Roll+Physique.\\nOn a 10+, choose 2.\\nOn a 7-9, choose 1.\\n- It doesn't take very long.\\n- It doesn't attract too much attention.\\n- You recover useful components.\\n- You could rebuild or reassemble it.\\n- You gain a Data Point about it.\",\n    iconName: \"cog\",\n  },\n  tactics: {\n    name: \"tactics\",\n    description:\n      \"When you Open Fire or Launch Assault, you choose one or more consequences on a partial success (7-9), not the GM.\",\n    iconName: \"clipboard\",\n  },\n  toughness: {\n    name: \"toughness\",\n    description:\n      \"You can suffer two injuries of each severity, rather than one.\",\n    iconName: \"heart\",\n  },\n  \"unique weapon\": {\n    name: \"unique weapon\",\n    description:\n      \"Own a unique Class 3 firearm or heavy weapon. If that weapon is ever lost, you can abandon it and spend an extended period of time claiming a new weapon as your Unique Weapon, adding an extra upgrade to it.\",\n    iconName: \"flame\",\n  },\n  \"heavy lifting\": {\n    name: \"heavy lifting\",\n    description:\n      \"Ignore the Clumsy trait inflicted by heavy weapons, heavy armor, encumbrance and high gravity.\",\n    iconName: \"fitness\",\n  },\n  authority: {\n    name: \"authority\",\n    description:\n      \"Whenever you are in a position of clear superiority over a group of NPCs, you can Command those NPCs even if the order goes against their own traits, loyalties and willingness.\",\n    iconName: \"medal\",\n  },\n  fame: {\n    name: \"fame\",\n    description:\n      \"Decide what you are famous/infamous for. Factions, groups and people of importance always know who you are when you meet them. Allies may use your +Influence if they speak in your name, but you'll suffer for any faux-pas.\",\n    iconName: \"star\",\n  },\n  leadership: {\n    name: \"leadership\",\n    description:\n      \"You have a hand-picked, elite Class 3 Crew. Given enough time and training, you can replace lost members of this crew with new NPCs.\",\n    iconName: \"people\",\n  },\n  contacts: {\n    name: \"contacts\",\n    description:\n      \"You have acquaintances and contacts all over the galaxy. When arriving anywhere civilized, introduce a contact. That NPC operates here.\",\n    iconName: \"contacts\",\n  },\n  inspiration: {\n    name: \"inspiration\",\n    description:\n      \"Choose an emotion and the medium/ art with which you convey it, then Roll+Influence or +Physique.\\nOn a 7-9, the emotion takes hold of your audience.\\nOn a 10+, as above, and choose 1:\\n- You gain a keen admirer.\\n- You are treated lavishly.\\n- You can Command the audience.\",\n    iconName: \"bulb\",\n  },\n  diplomacy: {\n    name: \"diplomacy\",\n    description:\n      \"Factions will ignore political boundaries, jurisdictions, your personal relationship, and even their own prejudices when you call in a Favor.\",\n    iconName: \"globe\",\n  },\n  criminal: {\n    name: \"criminal\",\n    description:\n      \"Any successful (10+) Move that involves theft, smuggling, extortion or similar crimes also leaves no evidence that could indict you.\",\n    iconName: \"glasses\",\n  },\n  \"sneak attack\": {\n    name: \"sneak attack\",\n    description:\n      \"When you get the drop on someone, Roll+Mettle.\\nOn a 10+, choose 1.\\nOn a 7-9, the GM will give you 2 of the following options, choose 1 of them.\\n- Kill them\\n- Injure them\\n- Rob/disarm them\\n- Capture/disable them\",\n    iconName: \"flash\",\n  },\n  scapegoat: {\n    name: \"scapegoat\",\n    description:\n      \"When you would suffer social, legal or financial consequences, name someone and Roll+Expertise.\\nOn a 10+, they suffer instead.\\nOn a 7-9, as above. They know it was you. On a 6-, it didn't work, and they know what you tried to do.\",\n    iconName: \"walk\",\n  },\n  \"false identity\": {\n    name: \"false identity\",\n    description:\n      \"You maintain a number of fake identities that have neutral standing with all factions. As long as a chosen identity holds, your actions do not incur Debt or earn Favor.\",\n    iconName: \"contact\",\n  },\n  addict: {\n    name: \"addict\",\n    description:\n      \"Choose one of your five stats. As long as you regularly dose yourself with your drug of choice, increase that stat by +1. Failure to subsequently dose yourself will reduce that stat by -2 until you dose yourself again or recover from the lengthy effects of withdrawal.\",\n    iconName: \"medical\",\n  },\n  weightlessness: {\n    name: \"weightlessness\",\n    description:\n      \"Ignore the Clumsy trait and/or movement restrictions inflicted by micro- gravity, low-gravity, freefall, climbing and jump jets. A successful (10+) Move while in those situations lets you describe a moment of exceptional acrobatic grace.\",\n    iconName: \"cloudy\",\n  },\n  cosmopolitan: {\n    name: \"cosmopolitan\",\n    description:\n      \"When you make an Assessment of any aspect of a society (culture, traditions, laws, government, economy, etc) you gain 3 Data Points about that subject on a 10+, and 1 Data Point about that subject on a 7-9.\",\n    iconName: \"business\",\n  },\n  navigation: {\n    name: \"navigation\",\n    description:\n      \"When you plan a long voyage, choose 1. The voyage will be:\\n- Fast: You know a shortcut.\\n- Safe: Choose a faction to avoid.\\n- Pleasant: +2 to Cramped Quarters.\\n- Profitable: If you deliver the passengers who are asking for passage.\",\n    iconName: \"compass\",\n  },\n  calibrations: {\n    name: \"calibrations\",\n    description:\n      \"When you diligently calibrate your favorite console or vehicle, make a Get Involved using Interface and record the result. The next time anyone uses it, the result of the Get Involved applies.\",\n    iconName: \"build\",\n  },\n  \"custom flyer\": {\n    name: \"custom flyer\",\n    description:\n      \"You own a custom-designed Class 3 shuttle or speeder vehicle. If that vehicle is ever lost, you can spend an extended period of time claiming a new vehicle as your Custom Vehicle, adding an extra upgrade to it.\",\n    iconName: \"jet\",\n  },\n  upload: {\n    name: \"upload\",\n    description:\n      \"Expend a Data Point on the SectorNet to have the facts about the subject:\\n- be erased, hidden, classified.\\n- become common knowledge.\\n- be falsified, pivotally altered.\",\n    iconName: \"cloud-upload\",\n  },\n  hijack: {\n    name: \"hijack\",\n    description:\n      \"When you Access a system, it locks out everyone else. You can open the system to anyone you wish.\",\n    iconName: \"lock\",\n  },\n  program: {\n    name: \"program\",\n    description:\n      \"When you Access a system, choose a behavior that the system could perform and a condition that will trigger that behavior.\",\n    iconName: \"code-working\",\n  },\n  network: {\n    name: \"network\",\n    description:\n      \"You can simultaneously track the location and health of a dozen willing subjects through a console or HUD. You are able to remotely Get Involved or issue Commands.\",\n    iconName: \"wifi\",\n  },\n  \"artificial intelligence\": {\n    name: \"artificial intelligence\",\n    description:\n      \"You have the loyalty of a digital, artificial intelligence NPC. Give it a name and a 2-4 word description of its personality. It can enter, unlock and activate systems at your Command. Your AI can only be in one system at a time.\",\n    iconName: \"cog\",\n  },\n  \"cutting edge\": {\n    name: \"cutting edge\",\n    description:\n      \"Interacting with new, advanced technology comes naturally to you. On the other hand, dealing with old, clunky, obsolete dreck is rather aggravating. You gain +1 to your Interface stat, to a maximum of +2.\",\n    iconName: \"cloud-upload\",\n  },\n  branded: {\n    name: \"branded\",\n    description:\n      \"You have a prominent, recognisable physical mark (scars, burns, tattoos, prison barcode, slave brand), as a testament to the hardships you've survived. You gain +1 to your Physique stat, to a maximum of +2.\",\n    iconName: \"flash\",\n  },\n  resourceful: {\n    name: \"resourceful\",\n    description:\n      \"You're good at making do with limited resources, and getting the most out of what you have, making you a bit of a hoarder. You gain +1 to your Expertise stat, to a maximum of +2.\",\n    iconName: \"bonfire\",\n  },\n  affable: {\n    name: \"affable\",\n    description:\n      \"You get along well with almost everyone in your own way. You are most comfortable around others, and get lonely quickly. You gain +1 to your Influence stat, to a maximum of +2.\",\n    iconName: \"contacts\",\n  },\n  \"fine tuning\": {\n    name: \"fine tuning\",\n    description:\n      \"You're adept at interfacing with climate controlled living spaces; natural environments tend to be uncomfortable. You gain +1 to your Interface stat, to a maximum of +2.\",\n    iconName: \"build\",\n  },\n  scrappy: {\n    name: \"scrappy\",\n    description:\n      \"Life has beaten you down, but you never, ever give up. No matter how bad things get, you rarely back down, even when you really should. You gain +1 to your Mettle stat, to a maximum of +2.\",\n    iconName: \"fitness\",\n  },\n  decorum: {\n    name: \"decorum\",\n    description:\n      \"You are well versed in the rules of etiquette, civility and propriety. You can carry yourself with grace in formal affairs, but are ill-at-ease in casual settings. You gain +1 to your Influence stat, to a maximum of +2.\",\n    iconName: \"cube\",\n  },\n  vocation: {\n    name: \"vocation\",\n    description:\n      \"You've spent many years training in a variety of techniques and trades. Sadly, you've never had time for fun or relaxation. You gain +1 to your Expertise stat, to a maximum of +2.\",\n    iconName: \"school\",\n  },\n  discipline: {\n    name: \"discipline\",\n    description:\n      \"You know the rules, the codes, the processes, the scripture, the laws. They give you stability. You don't deal well with change. You gain +1 to your Mettle stat, to a maximum of +2.\",\n    iconName: \"qr-scanner\",\n  },\n  \"hard labor\": {\n    name: \"hard labor\",\n    description:\n      \"You can perform long grueling hours of physical labor with minimal rest. You've collected a wide variety of aches, pains and minor ailments from doing this. You gain +1 to your Physique stat, to a maximum of +2.\",\n    iconName: \"hammer\",\n  },\n  harder: {\n    name: \"harder\",\n    description:\n      \"You resist damage as a Vehicle would: Incoming damage is reduced by one step before you Brace for Impact, unless that damage has Penetrating or Breaching.\",\n  },\n  better: {\n    name: \"Better\",\n    description:\n      \"Your body can support two additional cybernetic Mods. You gain two free cybermods if this Skill was chosen during character creation.\",\n  },\n  faster: {\n    name: \"faster\",\n    description:\n      \"Your run speed and reaction time are incredibly fast. You can include extreme acts of acrobatics, reflexes, and/or flexibility in your Moves (quick- drawing weapons, catching bullets, running up walls, outrunning explosions, sprinting on water, etc.).\",\n  },\n  technologic: {\n    name: \"technologic\",\n    description:\n      \"You can establish a wireless mental connection to any computer system within line of sight. Open and Accessed systems remain connected to you as long as you are within signal range. \",\n  },\n  stronger: {\n    name: \"stronger\",\n    description:\n      \"Your unarmed and melee attacks are Destructive, Impact, and Penetrating.\",\n  },\n  pact: {\n    name: \"pact\",\n    description:\n      \"Create a Faction consisting of just your deity. You gain 1 Favor and 3 Debt with it. You communicate with your deity through prayer and can call in Favors. Your deity makes demands and calls in your Debts through dreams and prophecy. \",\n  },\n  \"lay on hands\": {\n    name: \"lay on hands\",\n    description:\n      \"Your Patch Up takes only a few seconds. You do not need tools or materials to perform a Patch Up, just a touch and a word.\",\n  },\n  relic: {\n    name: \"relic\",\n    description: `Create a Class 3 melee weapon. Choose one:\n- It is a symbol of your order.\n- It is a sign of your greatness.\n- It is feared and reviled.\nA Relic is almost indestructible. If you become separated, you always have a vague, painful sense of where it is.`,\n  },\n  wisdom: {\n    name: \"wisdom\",\n    description: `When you are in Cramped Quarters with yourself or another, choose any number of the following:\n- Peace: Each participant recovers from a minor debility.\n- Quiet: Get Involved has no effect on the Cramped Quarters.\n- Enlightenment: Do not roll, simply use the 7-9 result.\n- Introspection: Each participant`,\n  },\n  inscribe: {\n    name: \"inscribe\",\n    description:\n      \"When you perform a Patch Up using a Ritual Kit, you can very temporarily add an Attire upgrade to a person or set of Attire.\",\n  },\n  trinkets: {\n    name: \"trinkets\",\n    description:\n      \"Whenever you successfully engage a foreign society (visit, experience, infiltrate, attack, etc.), gain a Class 1 Cargo of miscellaneous baubles, trinkets, and other cultural detritus.\",\n  },\n  linguist: {\n    name: \"linguist\",\n    description:\n      \"You can communicate passably in the languages of all known societies and species. A successful Assessment of a newly-encountered or long-dead culture grants you permanent access to their written and/or spoken language.\",\n  },\n  advise: {\n    name: \"advise\",\n    description: `\n    When you steer someone towards a decision or desire, Roll+Influence.\n    -On a 10+, they readily accept your advice and will act on it if they can.\n    -On a 7-9, they’re cautious, conflicted or confused. They need time before they’re ready to act.\n    `,\n  },\n  adaptive: {\n    name: \"adaptive\",\n    description:\n      \"You can partake of all the most exotic consumables (food, drink, narcotics, etc.) avoiding those that are poisonous to your species. You can use machinery, games, devices, vehicles, tools, equipment, and weapons not designed for your species.\",\n  },\n\n  mediate: {\n    name: \"mediate\",\n    description: `When you successfully interfere or Get Involved in an interpersonal situation (including Cramped Quarters), choose 1:\n- Each participant gains a Data Point about another participant.\n- Escalate the situation. The choices are now Fight or Flight.\n- Defuse the situation. Violence is currently not an option.`,\n  },\n  bravery: {\n    name: \"bravery\",\n    description:\n      \"You feel no terror, revulsion or hopelessness. You never have to Face Adversity to overcome emotions. Any Crew you Command is Fearless.\",\n  },\n  nemesis: {\n    name: \"nemesis\",\n    description:\n      \"Whenever you fail a Move, declare who or what caused you to fail. You gain a Data Point about that subject.\",\n  },\n  terrify: {\n    name: \"terrify\",\n    description: `When your presence becomes known, Roll+Influence or +Physique.\n- On a 10+, people are meek and respectful.\n- On a 7-9, people are cautious and worried.\n- On a 6-, people are panicked and hostile.`,\n  },\n\n  obsession: {\n    name: \"obsession\",\n    description:\n      \"Choose the subject of your Obsession. When you would gain a Data Point about a tangentially related subject, gain a Data Point about your Obsession instead.\",\n  },\n  martyr: {\n    name: \"martyr\",\n    description: `When a nearby victim would suffer harm or consequences, you may interpose yourself and Roll+Mettle.\n- On a 10+, they are protected, and you suffer a lesser consequence. On a 7-9, you suffer instead of them.\n- On a 6-, you share in their suffering.`,\n  },\n  telekinesis: {\n    name: \"telekinesis\",\n    description: `You can project physical actions over a short distance (interact, carry, punch, etc.), using the appropriate +Stats as if you were physically there.`,\n  },\n  launch: {\n    name: \"launch\",\n    description: `You can propel small, inanimate objects with deadly speed and precision using +Mettle. Large, oddly shaped or defiant subjects (small vehicles, people) tend to be clumsier projectiles, and are propelled with +Physique.`,\n  },\n  animate: {\n    name: \"animate\",\n    description: `Choose a collection of objects. Those objects become a Class 1 Artificial Crew (see page 101) with an upgrade that matches the materials used. You can only have one Animated Crew at a time.`,\n  },\n  barrier: {\n    name: \"barrier\",\n    description: `You can project a flat or hemispherical barrier of force that deflects or resists impacts, leveraging your +Mettle as a manifestation of solid willpower. This is extremely encumbering; you will be Clumsy while maintaining it.`,\n  },\n  flight: {\n    name: \"flight\",\n    description: `You can soar, glide, and hover in midair.`,\n  },\n  telepathy: {\n    name: \"telepathy\",\n    description: `With a moment of focus, you can:\n- Communicate mentally with someone within line of sight.\n- Communicate mentally with someone you know well.\n- Sense the general life force, health, and emotional state of everyone within a given area.`,\n  },\n  probe: {\n    name: \"probe\",\n    description:\n      \"Grasping the head of another being allows you to forcefully Access their mind (with +Interface), exactly as if it was a computer system.\",\n  },\n  precognition: {\n    name: \"precognition\",\n    description:\n      \"If your mind is clear, you may suffer a minor mental debility (headache, nausea, vertigo, etc.) to declare that a roll you just made was merely a glimpse of possible future. Briefly describe the immediate or long-term consequences of that future, then reroll.\",\n  },\n  compel: {\n    name: \"compel\",\n    description: `You can Command any group or individual, no matter their disposition, no matter the command. On a 10+, choose 1 consequence.\nOn a 7-9, choose 2 consequences.\n- They only obey non-harmful parts of your command.\n- They are stilted, clumsy, and obviously controlled.\n- You suffer a mental or emotional debility as backlash.`,\n  },\n  clairvoyance: {\n    name: \"clairvoyance\",\n    description:\n      \"Meditation allows you to use your +Mettle to make Assessment about specific people, objects, and locations over any distance. The glimpses granted by a failed Clairvoyance can be extremely disturbing.\",\n  },\n  teleport: {\n    name: \"teleport\",\n    description: `You can instantly move yourself and nearby targets across any distance, using +Mettle to overcome potential adversity, if you either:\n- See your destination clearly.\n- Know the destination intimately.\n- Don’t care where you end up, as long as it’s Not Here.`,\n  },\n\n  regeneration: {\n    name: \"regeneration\",\n    description: `A moment of stillness allows you to reduce the severity of one of your injuries by one step, if available. This can regrow limbs/organs lost to Critical Injuries, and happens while you are dead.`,\n  },\n  alchemy: {\n    name: \"alchemy\",\n    description: `When using a Ritual Kit to Patch Up a person, object, or material, choose from this list instead of the standard Patch Up: Spread rust, rot, or erosion. Purify, clean, and rejuvenate. Transmute one material into another.`,\n  },\n  evoke: {\n    name: \"evoke\",\n    description: `Each time you Evoke the elements, choose between Fire, Frost, Lightning, Darkness, and Light. You may create and manipulate that element as part of any Move or Skill. You may wield it as a weapon when you Launch Assault or Open Fire. You may only Evoke one element at a time.`,\n  },\n  transform: {\n    name: \"transform\",\n    description: `You can take on the form and bodily capabilities of a physical subject up to three times bigger or smaller than you...\n- Immediately after an Assessment of the subject.\n- At any time by spending a Data Point about the subject.\nYou can return to your original form at any time. Assuming a shape larger than the available area is a bad idea.`,\n  },\n  insolence: {\n    name: \"insolence\",\n    description: `When you solve a problem by defying customs, propriety, and the desires of those around you, you can roll +Mettle instead of whatever the usual stat would be. This will likely be selfish, rude, and possibly hurtful.`,\n  },\n  ritual: {\n    name: \"ritual\",\n    description:\n      \"When you entrust a situation to the power of your rituals, fortunes, hexes, and charms, you can roll +Expertise instead of whatever the usual stat would be. This will likely be complicated, unpredictable, and deeply unsettling.\",\n  },\n  strength: {\n    name: \"strength\",\n    description:\n      \"When you handle a situation with rage, violence, and brute force, you can roll +Physique instead of whatever the usual stat would be. This will likely be loud, ugly, and possibly painful.\",\n  },\n  abnegation: {\n    name: \"abnegation\",\n    description:\n      \"When you black out and allow your programming to take over in order to solve a problem, you can roll +Interface instead of whatever the usual stat would be. Your programming won’t undermine its own agenda.\",\n  },\n  tranquility: {\n    name: \"tranquility\",\n    description:\n      \"When you handle a situation with the wisdom of a koan, parable, or aphorism, you can roll +Influence instead of whatever the usual stat would be. This will likely be soft, subtle, and slow.\",\n  },\n  procognition: {\n    name: \"precognition\",\n    description:\n      \"If your mind is clear, you may suffer a minor mental debility (headache, nausea, vertigo, etc.) to declare that a roll you just made was merely a glimpse of possible future. Briefly describe the immediate or long-term consequences of that future, then reroll.\",\n  },\n};\n\n// const careersTable = {\n//   academic: {\n//     name: \"academic\",\n//     summary:\n//       \"The Academic career represents years of study and learning, with a strong focus on science and logic. Academics can be found in specialist positions in other fields, leveraging their years of study.\",\n//     descriptions: [\n//       \"thin\",\n//       \"pallid\",\n//       \"elderly\",\n//       \"kind-hearted\",\n//       \"aloof\",\n//       \"distracted\",\n//     ],\n//     skillOptions: [\n//       \"education\",\n//       \"chemistry\",\n//       \"surgery\",\n//       \"deduction\",\n//       \"technobabble\",\n//     ],\n//     iconName: \"school\",\n//     workspaceOptions: [\n//       {\n//         name: \"medical\",\n//         description:\n//           \"Sterile environment. Medbay, cryotubes, surgical servo arms, isolation chamber, recovery ward.\",\n//       },\n//       {\n//         name: \"research\",\n//         description:\n//           \"Sensors gather scientific readings. Laboratory, containment units, sample scanners, sealed storage.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"A life is saved or destroyed by science.\",\n//       \"A vital lesson is imparted.\",\n//       \"An experiment yields surprising results.\",\n//       \"A subject is thoroughly analyzed.\",\n//       \"A fascinating phenomenon is explained.\",\n//     ],\n//   },\n//   clandestine: {\n//     name: \"clandestine\",\n//     summary:\n//       \"The Clandestine career is a sinister profession, relying on information and invisibility. Clandestine operatives tend toward low profiles and subtlety, no matter their complimentary profession.\",\n//     descriptions: [\n//       \"hawk nosed\",\n//       \"sinister\",\n//       \"wiry\",\n//       \"bland\",\n//       \"suspicious\",\n//       \"bald\",\n//     ],\n//     skillOptions: [\n//       \"stealth\",\n//       \"sabotage\",\n//       \"assassination\",\n//       \"surveillance\",\n//       \"interrogation\",\n//     ],\n//     iconName: \"finger-print\",\n//     workspaceOptions: [\n//       {\n//         name: \"stealthy\",\n//         description:\n//           \"Difficult to detect, high tech camouflage, cloaking or concealment. Scanning bafflers, sound dampening, hidden doors/rooms.\",\n//       },\n//       {\n//         name: \"secure\",\n//         description:\n//           \"Sensors to track people and movement. Security cameras, monitoring stations, holding cells, security doors.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"An intentional 'accident' happens.\",\n//       \"A victim experiences true fear.\",\n//       \"A conspiracy is uncovered.\",\n//       \"An act is performed covertly.\",\n//       \"A dark secret is extracted.\",\n//     ],\n//   },\n//   commercial: {\n//     name: \"commercial\",\n//     summary:\n//       \"The Commercial career's strength lies in making deals, acquiring goods and managing the complex web of inter-faction debt and influence. Almost all other careers benefit in some way from the Commercial's purchasing power.\",\n//     descriptions: [\n//       \"oily\",\n//       \"well-fed\",\n//       \"manicured\",\n//       \"harried\",\n//       \"miserly\",\n//       \"cunning\",\n//     ],\n//     skillOptions: [\"outfit\", \"marketing\", \"acumen\", \"luxury\", \"bribe\"],\n//     iconName: \"cash\",\n//     workspaceOptions: [\n//       {\n//         name: \"mercantile\",\n//         description:\n//           \"Prominent advertisement, easy access. Large cargo storage space, automatic loader-unloader systems.\",\n//       },\n//       {\n//         name: \"leisure\",\n//         description:\n//           \"Relaxing, inviting, well-lit. Studio, lounge, entertainment systems, recreation area.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"A solution is purchased.\",\n//       \"A frivolous expense is made.\",\n//       \"A celebration is held.\",\n//       \"A rich resource is found.\",\n//       \"A cargo unit is exchanged.\",\n//     ],\n//   },\n//   explorer: {\n//     name: \"explorer\",\n//     summary:\n//       \"The Explorer is the most daring and risky career, forever seeking new horizons and new treasures. Other careers that regularly deal with harsh environments and unexplored reaches benefit from the Explorer's courage and survival instinct.\",\n//     descriptions: [\n//       \"weathered\",\n//       \"battered\",\n//       \"unkempt\",\n//       \"rude\",\n//       \"cheerful\",\n//       \"brash\",\n//     ],\n//     skillOptions: [\n//       \"boldly go\",\n//       \"reconnaissance\",\n//       \"survival\",\n//       \"recklessness\",\n//       \"custom vehicle\",\n//     ],\n//     iconName: \"compass\",\n//     workspaceOptions: [\n//       {\n//         name: \"rugged\",\n//         description:\n//           \"Withstands harsh climates and weather. Decontamination units, hydroponics facilities, advanced water/air/waste recyclers, self-sufficient.\",\n//       },\n//       {\n//         name: \"survey\",\n//         description:\n//           \"Planetary scanners (weather, geological activity, etc). Probe launcher, topography holo-projector, motor-pool.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"An alien wilderness is traversed.\",\n//       \"A bold act fails spectacularly.\",\n//       \"A needed item is scrounged up.\",\n//       \"A ludicrous stunt turns the tides.\",\n//       \"A forgotten place is excavated.\",\n//     ],\n//   },\n//   industrial: {\n//     name: \"industrial\",\n//     summary:\n//       \"The Industrial career shapes its surroundings by constructing, improving and demolishing. Other careers benefit greatly from the Industrial's ability to create, repair, maintain a variety of machines.\",\n//     descriptions: [\n//       \"muscled\",\n//       \"grimy\",\n//       \"wrinkled\",\n//       \"rigorous\",\n//       \"rugged\",\n//       \"focused\",\n//     ],\n//     skillOptions: [\"repair\", \"construction\", \"tinker\", \"upgrade\", \"dismantle\"],\n//     iconName: \"construct\",\n//     workspaceOptions: [\n//       {\n//         name: \"refinery\",\n//         description:\n//           \"Heavy raw-material collectors. Gathers, processes raw matter into refined materials. Material storage tanks.\",\n//       },\n//       {\n//         name: \"manufactory\",\n//         description:\n//           \"Engineering bays. Builds, upgrades and repairs. Workbenches, tool racks, winches, pulleys, lifts.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"A piece of junk proves pivotal.\",\n//       \"A piece of technology is 'improved'.\",\n//       \"A breakage occurs.\",\n//       \"An explosion alters the situation.\",\n//       \"A structural weakness is exposed.\",\n//     ],\n//   },\n//   military: {\n//     name: \"military\",\n//     summary:\n//       \"The Military career specializes in combat, with a heavy reliance on command, discipline and strategy. Careers that have to deal with hostilities or war zones benefit greatly when combined with the Military career's command of the battlefield.\",\n//     descriptions: [\n//       \"scarred\",\n//       \"grizzled\",\n//       \"massive\",\n//       \"skittish\",\n//       \"weary\",\n//       \"grim\",\n//     ],\n//     skillOptions: [\n//       \"tactics\",\n//       \"toughness\",\n//       \"unique weapon\",\n//       \"heavy lifting\",\n//       \"authority\",\n//     ],\n//     iconName: \"medal\",\n//     workspaceOptions: [\n//       {\n//         name: \"armored\",\n//         description:\n//           \"Made of reinforced materials. Difficult to damage, can withstand direct impacts and explosions. Reinforced blast doors, structurally sound.\",\n//       },\n//       {\n//         name: \"barracks\",\n//         description:\n//           \"Efficient, defensible, practical. Berthing for many soldiers, lockers, gym, training ring, mobilization area.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"An objective is taken by force.\",\n//       \"A perilous order is obeyed.\",\n//       \"An injury is sustained.\",\n//       \"A problem is resolved with firepower.\",\n//       \"A worthy enemy is exterminated.\",\n//     ],\n//   },\n//   personality: {\n//     name: \"personality\",\n//     summary:\n//       \"The Personality career revolves around influencing others through charm, good looks and oratory. Personality is useful to any career that relies on persuasion or fame.\",\n//     descriptions: [\n//       \"stunning\",\n//       \"sexy\",\n//       \"chiselled\",\n//       \"placid\",\n//       \"soft\",\n//       \"haughty\",\n//     ],\n//     skillOptions: [\n//       \"fame\",\n//       \"leadership\",\n//       \"contacts\",\n//       \"inspiration\",\n//       \"diplomacy\",\n//     ],\n//     iconName: \"star\",\n//     workspaceOptions: [\n//       {\n//         name: \"habitation\",\n//         description:\n//           \"Living space for many guests or crew. Communal eating rooms, extended life-support/facilities.\",\n//       },\n//       {\n//         name: \"stately\",\n//         description:\n//           \"Expensive, luxurious, finely appointed décor. More expensive to maintain, but provides much higher quality of life.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"A relationship changes drastically.\",\n//       \"A statement starts or ends a fight.\",\n//       \"A difficult promise is upheld.\",\n//       \"A rumor spreads like wildfire.\",\n//       \"An unlikely hero is exalted.\",\n//     ],\n//   },\n//   scoudrel: {\n//     name: \"scoudrel\",\n//     summary:\n//       \"The Scoundrel is the most underhanded career, relying on lies, violence, betrayal and theft to achieve goals. The Scoundrel career can be a benefit to other careers that live outside the law.\",\n//     descriptions: [\"thick\", \"dapper\", \"sly\", \"meaty\", \"slick\", \"cold\"],\n//     skillOptions: [\n//       \"criminal\",\n//       \"sneak attack\",\n//       \"scapegoat\",\n//       \"false identity\",\n//       \"addict\",\n//     ],\n//     iconName: \"glasses\",\n//     workspaceOptions: [\n//       {\n//         name: \"facade\",\n//         description:\n//           \"False identification/registry, disguised as something else. Crawlspaces, hidden compartments, false walls.\",\n//       },\n//       {\n//         name: \"sleazy\",\n//         description:\n//           \"Ramshackle, grimy, dimly lit. Space for drinking, smoking, recreational drug use, or other vices.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"A deal ends in betrayal.\",\n//       \"A broken law goes unpunished.\",\n//       \"A valuable is stolen.\",\n//       \"A threat is pre-emptively removed.\",\n//       \"An unsuspecting victim is exploited.\",\n//     ],\n//   },\n//   starfarer: {\n//     name: \"starfarer\",\n//     summary:\n//       \"The Starfarer career involves traveling all over the galaxy, experiencing a multitude of cultures and societies. The Starfarer's ease with spaceships, vehicles and navigation make it useful to many other careers that are on the move.\",\n//     descriptions: [\"bony\", \"quick\", \"tall\", \"sunny\", \"restless\", \"tolerant\"],\n//     skillOptions: [\n//       \"weightlessness\",\n//       \"cosmopolitan\",\n//       \"navigation\",\n//       \"calibrations\",\n//       \"custom flyer\",\n//     ],\n//     iconName: \"rocket\",\n//     workspaceOptions: [\n//       {\n//         name: \"navigation\",\n//         description:\n//           \"Wide bay windows, observation decks, star-charts, holo-screens. Satellite uplinks, orbital tracking systems, airspace control/coordination tower.\",\n//       },\n//       {\n//         name: \"launch pad\",\n//         description:\n//           \"Aircraft/shuttle hangar with wide bay doors, launchpads for shuttles and speeders.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"A passenger reaches a destination.\",\n//       \"A solution leverages gravity.\",\n//       \"A piloting maneuver causes a reversal.\",\n//       \"A system is pushed to the limit.\",\n//       \"A new culture is experienced.\",\n//     ],\n//   },\n//   technocrat: {\n//     name: \"technocrat\",\n//     summary:\n//       \"The Technocrat career is the most wired-in and computer-centric of the careers, focusing on programming, data and electronic warfare. Other careers benefit from the Technocrat's mastery of the computer systems that run almost all of civilized space.\",\n//     descriptions: [\n//       \"nearsighted\",\n//       \"lanky\",\n//       \"underfed\",\n//       \"smug\",\n//       \"awkward\",\n//       \"intense\",\n//     ],\n//     skillOptions: [\n//       \"upload\",\n//       \"hijack\",\n//       \"program\",\n//       \"network\",\n//       \"artificial intelligence\",\n//     ],\n//     iconName: \"power\",\n//     workspaceOptions: [\n//       {\n//         name: \"communication\",\n//         description:\n//           \"High-powered communications array, transceivers, antennae. Screens, conference rooms, holo-projectors.\",\n//       },\n//       {\n//         name: \"observer\",\n//         description:\n//           \"Advanced, multi-band sensors, capable of long-distance scans. Probe launchers. Recording equipment, shielded data storage.\",\n//       },\n//     ],\n//     advancementOptions: [\n//       \"A system's security is breached.\",\n//       \"A solution is found on the SectorNet.\",\n//       \"A computer crash causes chaos.\",\n//       \"A pivotal data cluster is accessed.\",\n//       \"An offending program is expunged.\",\n//     ],\n//   },\n// };\n// const originsTable = {\n//   advanced: {\n//     summary:\n//       \"The Advanced grew up in prosperous, high tech societies, well ahead of the galactic technology curve, enjoying an unprecedented quality of life. Technologies and gadgets that would be rare or fantastical elsewhere were considered commonplace.\",\n//     descriptions: [\n//       \"angular\",\n//       \"robust\",\n//       \"strapping\",\n//       \"carefree\",\n//       \"lazy\",\n//       \"arrogant\",\n//     ],\n//     skillOptions: [\n//       \"cutting edge\",\n//       \"artificial intelligence\",\n//       \"custom flyer\",\n//       \"surveillance\",\n//     ],\n//     iconName: \"navigate\",\n//   },\n//   brutal: {\n//     summary:\n//       \"The Brutal were forged in the most volatile conditions; war zones, slavery or in barbaric, bloodthirsty societies. Life was short and cruel, blood and pain are the norm. There was no room for weakness or mercy, no place for honor or fair play.\",\n//     descriptions: [\n//       \"tired\",\n//       \"disfigured\",\n//       \"suppressed\",\n//       \"cruel\",\n//       \"angry\",\n//       \"severe\",\n//     ],\n//     skillOptions: [\"branded\", \"assassination\", \"toughness\", \"sneak attack\"],\n//     iconName: \"flash\",\n//   },\n//   colonist: {\n//     summary:\n//       \"The Colonists are born and raised out on the fringes of galactic civilization, living in domes, colony pods or habitation modules, working diligently and tirelessly to terraform planets to make them more hospitable for the next generation.\",\n//     descriptions: [\"hard\", \"serious\", \"calloused\", \"dusky\", \"solid\", \"prudent\"],\n//     skillOptions: [\"resourceful\", \"tinker\", \"custom vehicle\", \"heavy lifting\"],\n//     iconName: \"home\",\n//   },\n//   crowded: {\n//     summary:\n//       \"The Crowded have lived their lives shoulder-to- shoulder with humanity. They come from the cramped confines of heavily-populated hive cities, underground facilities, domes and space stations. They are one face among billions.\",\n//     descriptions: [\n//       \"lively\",\n//       \"compact\",\n//       \"stout\",\n//       \"spare\",\n//       \"loud\",\n//       \"agoraphobic\",\n//     ],\n//     skillOptions: [\"affable\", \"contacts\", \"network\", \"bribe\"],\n//     iconName: \"people\",\n//   },\n//   galactic: {\n//     summary:\n//       \"The Galactics are born and raised in orbital stations, starships, and asteroid mining colonies. Most have lived their whole lives among the stars, surrounded and protected by machinery and electronics, breathing recycled air and eating hydroponic food.\",\n//     descriptions: [\n//       \"sharp\",\n//       \"guarded\",\n//       \"stoic\",\n//       \"isolated\",\n//       \"energetic\",\n//       \"graceful\",\n//     ],\n//     skillOptions: [\"fine tuning\", \"program\", \"weightlessness\", \"repair\"],\n//     iconName: \"planet\",\n//   },\n//   impoverished: {\n//     summary:\n//       \"The Impoverished grew up on the margins, in the slums, in slavery and prisons and filth. They have little to call their own, only what they could scrape and scrounge together. They've fought tooth and nail to survive against oppressive conditions.\",\n//     descriptions: [\"gaunt\", \"haggard\", \"sickly\", \"filthy\", \"vulgar\", \"fierce\"],\n//     skillOptions: [\"scrappy\", \"stealth\", \"recklessness\", \"criminal\"],\n//     iconName: \"trending-down\",\n//   },\n//   privileged: {\n//     summary:\n//       \"The Privileged are the nobility of the galaxy, the elite. Their families hold great power and influence, be it financial, political or religious. Moving in such exalted circles, wielding their family name and power, they have grown up expecting courtesy and respect.\",\n//     descriptions: [\n//       \"manicured\",\n//       \"plump\",\n//       \"groomed\",\n//       \"snobbish\",\n//       \"sleek\",\n//       \"pompous\",\n//     ],\n//     skillOptions: [\"decorum\", \"luxury\", \"fame\", \"scapegoat\"],\n//     iconName: \"star\",\n//   },\n//   productive: {\n//     summary:\n//       \"The Productive live in societies, cultures or groups that place high importance on education and social responsibility. From a young age they begin training for their destined profession, devoting any spare time to higher education and secondary vocations.\",\n//     descriptions: [\n//       \"slight\",\n//       \"curious\",\n//       \"faded\",\n//       \"greying\",\n//       \"detached\",\n//       \"introverted\",\n//     ],\n//     skillOptions: [\"vocation\", \"calibrations\", \"education\", \"acumen\"],\n//     iconName: \"construct\",\n//   },\n//   regimented: {\n//     summary:\n//       \"The Regimented have lived very strict lives. Whether in a militaristic society, a religious organisation or an authoritarian government, they have been indoctrinated to the advantages of discipline, obedience and loyalty.\",\n//     descriptions: [\n//       \"athletic\",\n//       \"meditative\",\n//       \"sturdy\",\n//       \"organised\",\n//       \"formal\",\n//       \"strict\",\n//     ],\n//     skillOptions: [\"discipline\", \"leadership\", \"tactics\", \"deduction\"],\n//     iconName: \"clipboard\",\n//   },\n//   rustic: {\n//     summary:\n//       \"The Rustic were raised on the very edges of galactic society, on the most inhospitable and savage worlds. With only basic machinery and tools, they were forced to toil by the sweat of their brow, shaping the hostile landscape.\",\n//     descriptions: [\"wrinkled\", \"creaking\", \"wiry\", \"aged\", \"weary\", \"strong\"],\n//     skillOptions: [\"hard labor\", \"construction\", \"survival\", \"chemistry\"],\n//     iconName: \"hammer\",\n//   },\n// };\n\nexport const generateSkill = (): Skill | null => {\n  const skillKey = sample(Object.keys(skillsTable));\n  if (!skillKey) return null;\n  return skillsTable[skillKey];\n};\n","import { Button } from \"@material-ui/core\";\nimport React, { FC, useState } from \"react\";\nimport { generateArchetype, generateDNDChar } from \"./utils\";\n\ninterface IProps {}\n\nconst Characters: FC<IProps> = () => {\n  const [generatedUWArchetype, setGeneratedUWArchetype] = useState<string>(\n    generateArchetype()\n  );\n  const [generatedDNDArchetype, setGeneratedDNDArchetype] = useState<string>(\n    generateDNDChar()\n  );\n  return (\n    <section>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setGeneratedUWArchetype(generateArchetype())}\n      >\n        Generate UW Archetype\n      </Button>\n      <h3>{generatedUWArchetype}</h3>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setGeneratedDNDArchetype(generateDNDChar())}\n      >\n        Generate D&D Archetype\n      </Button>\n      <h3>{generatedDNDArchetype}</h3>\n    </section>\n  );\n};\n\nexport default Characters;\n","import { sample } from \"lodash\";\nimport { GeneratedItem, generateItemTraits } from \"../../items/utils\";\n\nexport interface Mod {\n  type: \"Bio\" | \"Cyber\";\n  class?: {\n    description?: string;\n    extra?: GeneratedItem;\n    class?: string;\n    locomotion?: string;\n  };\n}\n\nconst classTable: Mod[\"class\"][] = [\n  {\n    class: \"Adaptation\",\n    description:\n      \"Choose a type of environment. You can function normally in that environment.\",\n  },\n  {\n    class: \"Amplifier\",\n    description:\n      \"Increases memory, attention, thought speed, and the range of supernatural abilities.\",\n  },\n  {\n    class: \"Camouflage\",\n    description: \"Blend into your surroundings, especially when not moving.\",\n  },\n  {\n    class: \"Implements\",\n    description: \"Choose a Kit. It is built directly into your body.\",\n  },\n  {\n    class: \"Locomotion\",\n    description:\n      \"Choose a new means of locomotion: slithering, leaping, climbing, swimming, gliding, hovering.\",\n  },\n  {\n    class: \"Projectile\",\n    description:\n      \"Create effects/projectiles like a Class 1 Firearm. Biomod: Regrow/refill ammunition over time. Cybermod: Spent ammo/cells can be replaced.\",\n  },\n  { class: \"Reinforced\", description: \"+ 1 Armor. Difficult to damage/break.\" },\n  {\n    class: \"Storage\",\n    description:\n      \"Hollow section which can store a variety of small objects. Resists scans.\",\n  },\n  {\n    class: \"Beauty \",\n    description: \"Designed to be stunning, dazzling, and distracting.\",\n  },\n  {\n    class: \"Connector\",\n    description:\n      \"Choose a type of vehicle, system, or organism. You can physically attach yourself to it, allowing a direct neural interaction.\",\n  },\n  {\n    class: \"Link \",\n    description:\n      \"Share thoughts and emotions with others who have the same link.\",\n  },\n  {\n    class: \"Perception\",\n    description:\n      \"Choose a type of information. You can receive sensory data about it when you focus. The more specific the type of information, the more detailed the data collected.\",\n  },\n  {\n    class: \"Prehensile\",\n    description:\n      \"Independent extra limb (or pair of limbs) ending in a Class 0 Melee weapon.\",\n  },\n  {\n    class: \"Replacement\",\n    description:\n      \"Create a Class 1 Melee Weapon that replaces a limb. Manual tasks using that limb are Clumsy without an appropriate upgrade (Glove, Flexible, Hidden, Living, etc.). Does not count towards Mod support maximum.\",\n  },\n];\n\nconst locomotionTable = [\n  \"Slithering\",\n  \"Leaping\",\n  \"Climbing\",\n  \"Swimming\",\n  \"Gliding\",\n  \"Hovering\",\n];\n\nexport const generateMod = (): Mod => {\n  const mod = sample(classTable);\n  let extra;\n  let locomotion;\n  if (mod?.class === \"Replacement\") {\n    extra = generateItemTraits(\"melee\", 1);\n  } else if (mod?.class === \"Projectile\") {\n    extra = generateItemTraits(\"firearm\", 1);\n  } else if (mod?.class === \"Prehensile\") {\n    extra = generateItemTraits(\"melee\", 0);\n  } else if (mod?.class === \"Locomotion\") {\n    locomotion = sample(locomotionTable);\n  }\n  return {\n    type: sample([\"Bio\", \"Cyber\"]) ?? \"Cyber\",\n    class: {\n      class: mod?.class,\n      description: mod?.description,\n      extra,\n      locomotion,\n    },\n  };\n};\n","import { Button } from \"@material-ui/core\";\nimport React, { FC, useState } from \"react\";\nimport { generateMod, Mod } from \"./utils\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.section`\n  margin: 0 auto;\n  max-width: 400px;\n`;\n\nconst Mods: FC = () => {\n  const [generatedMod, setGeneratedMod] = useState<Mod>(generateMod());\n  const generateNewMod = () => {\n    setGeneratedMod(generateMod());\n  };\n  return (\n    <Container>\n      <Button variant=\"contained\" color=\"primary\" onClick={generateNewMod}>\n        Generate Mod\n      </Button>\n      {generatedMod.class && (\n        <h3>\n          {generatedMod.class.class} ({generatedMod.type})\n        </h3>\n      )}\n      <h4>{generatedMod.class?.description}</h4>\n      {generatedMod.class?.extra && (\n        <p>{generatedMod.class.extra.tags.map((t) => t.name).join(\", \")}</p>\n      )}\n      {generatedMod.class?.locomotion && (\n        <p>{generatedMod.class?.locomotion}</p>\n      )}\n    </Container>\n  );\n};\n\nexport default Mods;\n","import { random, sample, sampleSize } from \"lodash\";\n\nexport interface Vessel {\n  tier: number;\n  class: number;\n  form?: { name: string; description: string };\n  upgrades?: { name: string; description: string }[];\n}\n\nconst formTable: Vessel[\"form\"][] = [\n  {\n    name: \"Crawler\",\n    description:\n      \"(Land Vessel) Moves overland on wheels or treads. Does not suffer additional damage if locomotion is disabled. Easiest Vessel to build, fix and maintain. Negligible penalties for excess weight.\",\n  },\n  {\n    name: \"Grav-Flyer\",\n    description:\n      \"(Sky Vessel) Fast moving plane/grav-tank, propelled by gravity engines. Must keep moving. Can land and take off on prepared surfaces (landing strips). Low stability, can be destabilized by harsh weather and environmental dangers. Will crash if gravity engines fail.\",\n  },\n  {\n    name: \"Starship\",\n    description:\n      \"(Space Vessel) Operates in vacuum, can enter and exit planetary atmospheres. Tier I-II can land on any surface, Tier III-IV can land on prepared surfaces (landing pads).Tier V+ count landings as crash landings. Vulnerable to hull breaches (decompression).\",\n  },\n  {\n    name: \"Grav-Platform\",\n    description:\n      \"(Sky Vessel) Slow moving skyship held aloft by gravity engines. Can hover in place. Can land and take off on almost any surface. Extremely stable. Will crash if gravity engines fail.\",\n  },\n  {\n    name: \"Mecha, Humanoid\",\n    description:\n      \"(Land Vessel) Strides across terrain on two legs. Full range of humanoid motion. Capable of picking up, carrying, and manipulating objects. Ignores normal “Sections” rules, instead has 5 Sections (Torso, Left Arm, Right Arm, Left Leg, Right Leg). All aspects of the Mecha are controlled from the Torso section. Damage to the legs causes a short fall.\",\n  },\n  {\n    name: \"Mecha, Quadruped\",\n    description:\n      \"(Land Vessel) Strides across terrain on four legs. Greater stability and terrain navigation. In addition to the usual compliment of sections, it has four additional sections (Front Left Leg, Front Right Leg, Back Left Leg, Back Right Leg). Damage to the legs causes a short fall.\",\n  },\n\n  {\n    name: \"Watercraft\",\n    description:\n      \"(Ocean Vessel) Floats on or under liquid or semi-liquid surfaces. Does not suffer additional issues/damage if locomotion is disabled. Venerable to hull breaches (sinking).\",\n  },\n];\n\nconst upgradeTable: Vessel[\"upgrades\"] = [\n  {\n    name: \"Armored\",\n    description:\n      \"Gain +1 when rolling Brace for Impact. Vessel is slightly slower, bulkier and heavier for each instance of Armored.\",\n  },\n  {\n    name: \"Artificial Gravity\",\n    description:\n      \"Creates its own internal gravity. Can create small gravitational fields to stabilize or tractor in nearby objects.\",\n  },\n\n  {\n    name: \"Automated\",\n    description:\n      \"Choose an upgrade installed on this Vessel. That upgrade doesn’t need to be manually operated, and will act as programmed.\",\n  },\n  { name: \"Cargo Bay\", description: \"Holds X Cargo containers.\" },\n  {\n    name: \"Jump-Drive\",\n    description:\n      \"Allows the Vessel to use Jump Points and make Wild Jumps. Requires a Reactor.\",\n  },\n  {\n    name: \"Launch Bay\",\n    description:\n      \"Holds X Vehicles. Vehicles can be launched/deployed from here.\",\n  },\n  {\n    name: \"Life Support\",\n    description:\n      \"Creates its own oxygen. Recycles water and waste for up to 10 people per tier. Necessary for Starships.\",\n  },\n  {\n    name: \"Massive\",\n    description: \"Built at a greater scale, increase the Vessel’s Tier by 1.\",\n  },\n  {\n    name: \"Pivot\",\n    description:\n      \"The section where this is installed is can rotate/pivot independently of the angle of the rest of the Vessel.\",\n  },\n  {\n    name: \"Reactor\",\n    description:\n      \"A dedicated energy source for demanding systems like Boosters, Jump-Drives, Shields, or Cloak. Can only power one system at a time.\",\n  },\n  {\n    name: \"Shields\",\n    description:\n      \"Deflects environmental harm and debris. Can be actively used by a character to add their +Interface to the Vessel’s Brace For Impact roll.\",\n  },\n  {\n    name: \"Stylish\",\n    description: \"Impressive, unique, artistic, inspires awe and/or fear.\",\n  },\n  {\n    name: \"Turrets\",\n    description:\n      \"Design a Heavy Weapon (page 94). The Vessel has X turrets equipped with that weapon. Each turret covers a semi-spherical arc.\",\n  },\n  {\n    name: \"Workspace\",\n    description:\n      \"Choose a workspace from any career to install in this section. The higher the tier of Vessel, the larger the workspace.\",\n  },\n  {\n    name: \"Artillery\",\n    description:\n      \"Design an Artillery Weapon (page 96). The Vessel has that weapon attached.\",\n  },\n  {\n    name: \"Boosters\",\n    description:\n      \"Allows non-flying Vessels to jump, hover, or fly. Gives airborne Vessels a massive burst of speed. Requires a Reactor.\",\n  },\n  {\n    name: \"Cloak\",\n    description:\n      \"The Vessel fades from view, and is almost undetectable. It moves slowly and can’t attack while Cloaked. Requires a Reactor.\",\n  },\n  {\n    name: \"Quarters\",\n    description:\n      \"Choose X: Single luxury suite, 2 regular rooms, common room for 4 people, or 8 cryochambers.\",\n  },\n  {\n    name: \"Sensors\",\n    description:\n      \"Long-range detection across multiple bands. Includes advanced targeting and satellite uplink.\",\n  },\n  {\n    name: \"Weapon\",\n    description:\n      \"The Vessel’s hull is equipped with a massive weapon that can be used to ram or sideswipe. Mecha Vessels swing this as a Melee weapon.\",\n  },\n];\n\nexport const generateVessel = (): Vessel => {\n  const vClass = random(5) + random(5);\n  let tier;\n  if (vClass <= 3) tier = 1;\n  else if (vClass <= 6) tier = 2;\n  else if (vClass <= 9) tier = 3;\n  else if (vClass <= 12) tier = 4;\n  else tier = 2;\n  const upgrades = sampleSize(upgradeTable, vClass);\n  if (upgrades.some((u) => u.name === \"Massive\")) {\n    tier = tier + 1;\n  }\n\n  return {\n    tier,\n    class: vClass,\n    form: sample(formTable),\n    upgrades,\n  };\n};\n","import { Button } from \"@material-ui/core\";\nimport React, { FC, useState } from \"react\";\nimport { generateVessel, Vessel } from \"./utils\";\nimport styled from \"styled-components\";\n\nconst Upgrades = styled.div`\n  text-align: left;\n`;\nconst Container = styled.section`\n  margin: 0 auto;\n  max-width: 400px;\n  padding: 8px;\n`;\n\nconst Vessels: FC = () => {\n  const [generatedVessel, setGeneratedVessel] = useState<Vessel>(\n    generateVessel()\n  );\n  const generateNewVessel = () => {\n    setGeneratedVessel(generateVessel());\n  };\n  return (\n    <Container>\n      <Button variant=\"contained\" color=\"primary\" onClick={generateNewVessel}>\n        Generate Vessel\n      </Button>\n      {generatedVessel.form && (\n        <>\n          <h3>\n            {generatedVessel.form.name} (Class: {generatedVessel.class}, Tier:{\" \"}\n            {generatedVessel.tier})\n          </h3>\n          <h4>{generatedVessel.form.description}</h4>\n        </>\n      )}\n      <Upgrades>\n        {generatedVessel.upgrades?.map((u) => (\n          <p key={u.name}>\n            <strong>{u.name}</strong>:{\" \"}\n            {u.description.replace(\"X\", generatedVessel.tier.toString())}\n          </p>\n        ))}\n      </Upgrades>\n    </Container>\n  );\n};\n\nexport default Vessels;\n","import React, { FC, useState } from \"react\";\nimport { generateSkill, Skill } from \"../characters/utils\";\n\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport { startCase } from \"lodash\";\n\nconst SkillBox = styled.div`\n  text-align: left;\n  white-space: pre-wrap;\n`;\nconst Container = styled.section`\n  margin: 0 auto;\n  max-width: 400px;\n`;\nconst Skills: FC = () => {\n  const [generatedSkill, setGeneratedSkill] = useState<Skill | null>(\n    generateSkill()\n  );\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setGeneratedSkill(generateSkill())}\n      >\n        Generate Skill\n      </Button>\n      <SkillBox>\n        {generatedSkill && (\n          <>\n            <h3>{startCase(generatedSkill.name)}</h3>\n            <p>{generatedSkill.description}</p>\n          </>\n        )}\n      </SkillBox>\n    </Container>\n  );\n};\n\nexport default Skills;\n","import React, { useState } from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport {\n  Names,\n  Questions,\n  // Cities,\n  // Pinterest,\n  Factions,\n  Items,\n  Worlds,\n  Markets,\n  Events,\n} from \"./sections\";\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport Creatures from \"./sections/worlds/Creatures\";\nimport Settlements from \"./sections/settlement/Settlements\";\nimport Quests from \"./sections/quests/Quests\";\nimport { startCase } from \"lodash\";\nimport Characters from \"./sections/characters/Characters\";\nimport Mods from \"./sections/mods/Mods\";\nimport Vessels from \"./sections/vessels/Vessels\";\nimport Skills from \"./sections/skills/Skills\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst TABS = [\n  { key: \"questions\", component: <Questions /> },\n  { key: \"items\", component: <Items /> },\n  { key: \"skills\", component: <Skills /> },\n  { key: \"mods\", component: <Mods /> },\n  { key: \"worlds\", component: <Worlds /> },\n  { key: \"factions\", component: <Factions /> },\n  { key: \"characters\", component: <Characters /> },\n  { key: \"markets\", component: <Markets /> },\n  { key: \"creatures\", component: <Creatures /> },\n  { key: \"names\", component: <Names /> },\n  { key: \"settlements\", component: <Settlements /> },\n  { key: \"vessels\", component: <Vessels /> },\n  { key: \"events\", component: <Events /> },\n  { key: \"quests\", component: <Quests /> },\n];\nfunction App() {\n  const history = useHistory();\n  let defaultTabIndex = TABS.findIndex(\n    (t) => history.location.pathname === `/${t.key}`\n  );\n  if (defaultTabIndex < 0) {\n    defaultTabIndex = 0;\n  }\n  const [activeTabIndex, setActiveTabIndex] = useState<number>(defaultTabIndex);\n  const handleChange = (event: any, newValue: number) => {\n    history.push(`/${TABS[newValue].key}`);\n    setActiveTabIndex(newValue);\n  };\n  const handleChangeIndex = (index: number) => {\n    history.push(`/${TABS[index].key}`);\n    setActiveTabIndex(index);\n  };\n  console.log(history);\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Tabs\n          value={activeTabIndex}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n          aria-label=\"simple tabs example\"\n        >\n          {TABS.map((t, idx) => (\n            <Tab label={startCase(t.key)} {...a11yProps(idx)} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={\"x\"}\n        index={activeTabIndex}\n        onChangeIndex={handleChangeIndex}\n      >\n        {TABS.map((t, idx) => (\n          <TabPanel value={activeTabIndex} index={idx}>\n            <h1>{startCase(t.key)}</h1>\n            {t.component}\n          </TabPanel>\n        ))}\n      </SwipeableViews>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { FC } from \"react\";\nimport App from \"./App\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\n\ninterface IProps {}\n\nconst Router: FC<IProps> = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Route component={App} path={\"/:key\"} />\n      <Route component={App} path={\"/\"} exact />\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./Router\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}