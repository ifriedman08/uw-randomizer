{"version":3,"sources":["components/IFrame.ts","sections/names/Names.tsx","sections/questions/Questions.tsx","sections/factions/utils/uw.ts","sections/factions/Factions.tsx","sections/items/utils/uw.ts","sections/items/Items.tsx","sections/markets/utils/uw-markets.ts","sections/markets/Markets.tsx","sections/worlds/utils/sf-flora.ts","sections/worlds/utils/sf-sentients.ts","sections/worlds/utils/sf-fauna.ts","sections/worlds/utils/sf-biomes.ts","sections/worlds/utils/sf-poi.ts","sections/worlds/utils/sf-planets.ts","sections/worlds/Flora.tsx","sections/worlds/Fauna.tsx","sections/worlds/Biome.tsx","sections/worlds/Worlds.tsx","sections/events/utils/dnd-events.ts","sections/events/Events.tsx","sections/worlds/Creatures.tsx","sections/settlement/utils/dnd-settlements.ts","sections/settlement/Settlements.tsx","sections/quests/utils/dnd-quests.ts","sections/quests/Quests.tsx","App.tsx","serviceWorker.js","index.js"],"names":["styled","iframe","IFrame","Names","Button","variant","color","size","onClick","window","open","src","questionsTable","CheckboxesGroup","useState","Alex","Devon","Talicia","JaMile","TRX","Joe","Noodles","playersPresent","setPlayersPresent","questionResults","setQuestionResults","handleChange","event","target","name","checked","genLabel","question","FormControl","component","FormGroup","FormControlLabel","onChange","control","Checkbox","label","result","Object","keys","forEach","player","sample","traits","generateFactionTraits","Factions","generatedFaction","setGeneratedFaction","itemTraits","melee","tags","description","firearm","types","heavy","explosive","artillery","attire","type","landVehicle","flyer","crew","beast","generateItemTraits","itemType","itemClass","itemTypes","switching","classLevel","random","sampleSize","some","generateMeleeWeapon","design","generateFirearm","generateHeavyWeapon","generateExplosive","generateArtillery","generateAttire","tool","t","undefined","generateLandVehicle","generateFlyer","armed","generateCrew","locomotion","weapon","generateBeast","Controls","div","TagContainer","Items","generatedItem","setGeneratedItem","selectedItemType","setSelectedItemType","selectedItemClass","setSelectedItemClass","Grid","container","justify","spacing","item","xs","sm","md","fullWidth","InputLabel","id","Select","labelId","value","MenuItem","map","startCase","alignItems","tag1","key","uniqueId","tag2","deadly","marketsTable","ButtonContainer","Container","StyledModal","Markets","generatedMarket","setGeneratedMarket","modalVisible","setModalVisible","handleClose","generateNewMarket","Modal","onClose","aria-labelledby","aria-describedby","m","amountOfFloraTable","varietyOfFloraTable","typeOfFloraTable","floraSizeTable","relativeAmountTable","threatTable","floraQuirkTable","generateFloraBiome","amount","typeCount","floraTypes","times","quirk","relativeAmount","threat","getTechLevel","dRoll","attitudesTable","valuesTable","leadershipTable","unityTable","religionTable","architectureTable","artTable","themeTable","getTheme","generateSentient","values","architecture","unity","theme","attitude","techLevel","leadership","religion","art","faunaAmountTable","faunaVarietyTable","generateFaunaSubType","faunaSizeTable","relativeAmoutTable","faunaThreatTable","faunaTemperamentTable","groupingTable","locomotionTable","quirkTable","generateFaunaType","isSentient","isCreature","quirkString","join","grouping","temperament","sentientDetails","generateNFaunaTypes","count","generateFaunaBiome","basicFaunaTypes","sentientFaunaTypes","variety","sentientCount","generateSentientCount","basicFaunaCount","basicsTables","surfaceTypes","undergroundTypes","heat","modifier","generateBiomeBasics","biomeClass","modIdx","flora","fauna","pointsOfInterestTable","genPOI","planetTables","generatePlanet","temperature","atmosphere","gravity","surfaceBiomeCount","undergroundBiomeCount","pointOfInterest","FloraView","relativeAmountSymbol","SentientSection","FaunaView","style","marginBottom","BiomeContainer","BiomeView","biomeData","floraType","Flora","Divider","faunaType","Fauna","section","Worlds","generatedPlanet","setGeneratedPlanet","surfaceBiomes","setSurfaceBiomes","undergroundBiomes","setUndergroundBiomes","useEffect","GeneratedComponent","biome","Biome","eventsTable","subTable","generateEvent","eventType","subType","Events","generatedEvent","setGeneratedEvent","Creatures","generatedCreature","setGeneratedCreature","settlementTables","generateSettlement","raceRelation","rulerStatus","notableTrait","knownFor","calamity","Settlements","generatedSettlement","setGeneratedSettlement","goalsTable","villainsTable","goal","subGoals","method","subMethod","generateQuest","generateVillain","subGoal","Quests","generatedQuest","setGeneratedQuest","generatedVillain","setGeneratedVillain","TabPanel","props","children","index","other","role","hidden","a11yProps","App","activeTabIndex","setActiveTabIndex","console","log","className","AppBar","position","Tabs","newValue","scrollButtons","aria-label","Tab","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sYAEsBA,IAAOC,OAAV,KAAZ,I,iLCEP,IAAMC,EAASF,IAAOC,OAAV,KA0BGE,EAlBG,WAChB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,MAAM,UACNC,KAAK,QACLC,QAAS,kBACPC,OAAOC,KAAK,oCAAqC,YALrD,qBAUA,kBAAC,EAAD,CAAQC,IAAI,6C,2DCjBZC,EAAiB,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAEzC,SAASC,IAAmB,IAAD,EACIC,mBAAc,CACxDC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,KAAK,EACLC,SAAS,IAR6B,mBACjCC,EADiC,KACjBC,EADiB,OAUMT,mBAAc,IAVpB,mBAUjCU,EAViC,KAUhBC,EAVgB,KAoBlCC,EAAe,SAACC,GACpBJ,EAAkB,eACbD,EADY,eAEdK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,YAIhCC,EAAW,SAACF,EAAcG,GAC9B,OAAKA,EAGG,GAAN,OAAUH,EAAV,eAAqBG,GAFdH,GAKX,OACE,oCACE,6BACE,kBAACI,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEN,QAASR,EAAeP,KACxBsB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,OACLW,MAAOT,EAAS,OAAQP,EAAgBT,QAE1C,kBAACqB,EAAA,EAAD,CACEN,QAASR,EAAeN,MACxBqB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,QACLW,MAAOT,EAAS,QAASP,EAAgBR,SAE3C,kBAACoB,EAAA,EAAD,CACEN,QAASR,EAAeL,QACxBoB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,UACLW,MAAOT,EAAS,UAAWP,EAAgBP,WAE7C,kBAACmB,EAAA,EAAD,CACEN,QAASR,EAAeH,IACxBkB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,MACLW,MAAOT,EAAS,MAAOP,EAAgBL,OAEzC,kBAACiB,EAAA,EAAD,CACEN,QAASR,EAAeD,QACxBgB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,UACLW,MAAOT,EAAS,UAAWP,EAAgBH,WAE7C,kBAACe,EAAA,EAAD,CACEN,QAASR,EAAeJ,OACxBmB,SAAUX,EACVY,QAAS,kBAACC,EAAA,EAAD,MACTV,KAAK,SACLW,MAAOT,EAAS,SAAUP,EAAgBN,UAE5C,kBAACkB,EAAA,EAAD,CACEN,QAASR,EAAeF,IACxBkB,QAAS,kBAACC,EAAA,EAAD,MACTF,SAAUX,EACVG,KAAK,MACLW,MAAOT,EAAS,MAAOP,EAAgBJ,UAK/C,kBAAChB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,QAhFtB,WACxB,IAAMiC,EAAS,GACfC,OAAOC,KAAKrB,GAAgBsB,SAAQ,SAACC,GAC/BvB,EAAeuB,KACjBJ,EAAOI,GAAUC,iBAAOlC,OAG5Ba,EAAmBgB,KAyEjB,uBCnGC,IAAMM,EAAS,CACpB,CACE,CAAC,WAAY,cAAe,YAAa,UAAW,YAAa,WACjE,CAAC,UAAW,YAAa,UAAW,aAAc,UAAW,cAC7D,CAAC,SAAU,cAAe,UAAW,aAAc,UAAW,UAEhE,CACE,CACE,eACA,aACA,gBACA,aACA,QACA,aAEF,CACE,WACA,cACA,WACA,WACA,YACA,cAEF,CACE,QACA,YACA,aACA,YACA,aACA,cAGJ,CACE,CAAC,aAAc,OAAQ,QAAS,UAAW,cAAe,cAC1D,CAAC,UAAW,YAAa,SAAU,UAAW,aAAc,YAC5D,CAAC,SAAU,WAAY,SAAU,SAAU,WAAY,YAI9CC,EAAwB,WAKnC,MAAO,CAJYF,iBAAOA,iBAAOC,EAAO,KACrBD,iBAAOA,iBAAOC,EAAO,KACrBD,iBAAOA,iBAAOC,EAAO,OCrB3BE,EAnBM,WAAO,IAAD,EACuBnC,mBAE9CkC,KAHuB,mBAClBE,EADkB,KACAC,EADA,KAOzB,OACE,iCACE,4BACGD,EAAiB,GADpB,MAC2BA,EAAiB,GAD5C,MACmDA,EAAiB,IAEpE,kBAAC9C,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,QARrB,WACzB2C,EAAoBH,OAOlB,sBCwDOI,EAAyB,CACpCC,MAAO,CACLC,KAAM,CACJ,CACEzB,KAAM,cACN0B,YACE,oEAEJ,CACEA,YAAa,4CACb1B,KAAM,aAER,CACE0B,YACE,wEACF1B,KAAM,cAER,CACE0B,YACE,gFACF1B,KAAM,aAER,CACE0B,YACE,8EACF1B,KAAM,UAER,CACE0B,YACE,uEACF1B,KAAM,UAER,CACE0B,YAAa,gDACb1B,KAAM,WAER,CACE0B,YACE,gFACF1B,KAAM,eAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YACE,0EACF1B,KAAM,aAER,CACE0B,YACE,8EACF1B,KAAM,UAER,CACE0B,YACE,gEACF1B,KAAM,WAER,CACE0B,YAAa,+DACb1B,KAAM,aAER,CACE0B,YAAa,kCACb1B,KAAM,aAER,CACE0B,YACE,6DACF1B,KAAM,eAER,CACE0B,YACE,4DACF1B,KAAM,UAER,CACE0B,YACE,2EACF1B,KAAM,YAER,CACE0B,YAAa,2DACb1B,KAAM,SAER,CACE0B,YACE,mEACF1B,KAAM,UAER,CACE0B,YACE,6EACF1B,KAAM,SAER,CACE0B,YACE,gEACF1B,KAAM,UAER,CACE0B,YACE,wEACF1B,KAAM,YAER,CACE0B,YAAa,uDACb1B,KAAM,UAER,CACE0B,YAAa,oDACb1B,KAAM,YAER,CACE0B,YACE,wEACF1B,KAAM,SAER,CACE0B,YAAa,6CACb1B,KAAM,WAER,CACE0B,YACE,kEACF1B,KAAM,YAIZ2B,QAAS,CACPC,MAAO,CAAC,SAAU,SAClBH,KAAM,CACJ,CACEC,YACE,4EACF1B,KAAM,WAER,CACE0B,YACE,+EACF1B,KAAM,WAER,CACE0B,YACE,mEACF1B,KAAM,eAER,CACE0B,YACE,wEACF1B,KAAM,cAER,CACE0B,YACE,6DACF1B,KAAM,UAER,CACE0B,YACE,uEACF1B,KAAM,UAER,CACE0B,YACE,+DACF1B,KAAM,WAER,CACE0B,YACE,kEACF1B,KAAM,YAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YACE,0EACF1B,KAAM,aAER,CACE0B,YACE,8EACF1B,KAAM,UAER,CACE0B,YACE,gEACF1B,KAAM,WAER,CACE0B,YACE,mEACF1B,KAAM,cAER,CACE0B,YAAa,yDACb1B,KAAM,SAER,CACE0B,YAAa,+DACb1B,KAAM,aAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YAAa,0DACb1B,KAAM,eAER,CACE0B,YACE,0EACF1B,KAAM,aAER,CACE0B,YACE,gEACF1B,KAAM,UAER,CACE0B,YAAa,iDACb1B,KAAM,SAER,CACE0B,YACE,mEACF1B,KAAM,SAER,CACE0B,YAAa,0DACb1B,KAAM,YAER,CACE0B,YAAa,0DACb1B,KAAM,WAER,CAAE0B,YAAa,iBAAkB1B,KAAM,eACvC,CACE0B,YAAa,sDACb1B,KAAM,UAER,CACE0B,YAAa,kDACb1B,KAAM,cAER,CACE0B,YACE,6DACF1B,KAAM,SAER,CACE0B,YAAa,8CACb1B,KAAM,SAER,CACE0B,YACE,6DACF1B,KAAM,YAER,CACE0B,YAAa,uDACb1B,KAAM,YAER,CACE0B,YAAa,wDACb1B,KAAM,cAER,CACE0B,YAAa,qDACb1B,KAAM,QAER,CACE0B,YAAa,6CACb1B,KAAM,aAIZ6B,MAAO,CACLJ,KAAM,CACJ,CACEC,YACE,+EACF1B,KAAM,WAER,CACE0B,YACE,mEACF1B,KAAM,eAER,CACE0B,YACE,wEACF1B,KAAM,cAER,CACE0B,YACE,sEACF1B,KAAM,aAER,CACE0B,YACE,6DACF1B,KAAM,UAER,CACE0B,YACE,kEACF1B,KAAM,YAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YACE,0EACF1B,KAAM,aAER,CACE0B,YACE,4EACF1B,KAAM,UAER,CACE0B,YACE,gEACF1B,KAAM,WAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YAAa,+CACb1B,KAAM,aAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YACE,0EACF1B,KAAM,cAER,CACE0B,YAAa,oCACb1B,KAAM,cAER,CACE0B,YACE,gEACF1B,KAAM,UAER,CACE0B,YAAa,iDACb1B,KAAM,SAER,CACE0B,YACE,mEACF1B,KAAM,SAER,CAAE0B,YAAa,iBAAkB1B,KAAM,eACvC,CACE0B,YAAa,sDACb1B,KAAM,UAER,CACE0B,YAAa,2CACb1B,KAAM,WAER,CACE0B,YAAa,8CACb1B,KAAM,SAER,CACE0B,YACE,mEACF1B,KAAM,YAER,CACE0B,YACE,gFACF1B,KAAM,SAER,CACE0B,YAAa,qDACb1B,KAAM,QAER,CACE0B,YAAa,6CACb1B,KAAM,WAER,CACE0B,YACE,6DACF1B,KAAM,eAIZ8B,UAAW,CACTF,MAAO,CAAC,SAAU,UAAW,WAC7BH,KAAM,CACJ,CACEC,YACE,mEACF1B,KAAM,eAER,CACE0B,YACE,wEACF1B,KAAM,cAER,CACE0B,YACE,sEACF1B,KAAM,aAER,CACE0B,YACE,iFACF1B,KAAM,WAER,CACE0B,YACE,oEACF1B,KAAM,WAER,CACE0B,YACE,6EACF1B,KAAM,WAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YACE,4EACF1B,KAAM,aAER,CACE0B,YACE,gEACF1B,KAAM,WAER,CACE0B,YACE,6EACF1B,KAAM,YAER,CACE0B,YACE,4DACF1B,KAAM,aAER,CACE0B,YACE,oFACF1B,KAAM,YAER,CACE0B,YACE,2EACF1B,KAAM,WAER,CACE0B,YAAa,+DACb1B,KAAM,aAER,CACE0B,YACE,0EACF1B,KAAM,cAER,CACE0B,YACE,wEACF1B,KAAM,eAER,CACE0B,YAAa,2DACb1B,KAAM,WAER,CACE0B,YACE,8EACF1B,KAAM,WAER,CACE0B,YACE,sEACF1B,KAAM,cAER,CACE0B,YACE,gEACF1B,KAAM,WAER,CACE0B,YACE,+DACF1B,KAAM,UAER,CACE0B,YAAa,8CACb1B,KAAM,SAER,CACE0B,YAAa,2DACb1B,KAAM,YAER,CACE0B,YAAa,wDACb1B,KAAM,UAER,CACE0B,YAAa,qDACb1B,KAAM,QAER,CACE0B,YACE,oEACF1B,KAAM,aAIZ+B,UAAW,CACTN,KAAM,CACJ,CACEC,YACE,iEACF1B,KAAM,WAER,CACE0B,YACE,+EACF1B,KAAM,WAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YACE,0EACF1B,KAAM,cAER,CACE0B,YACE,mEACF1B,KAAM,eAER,CAAE0B,YAAa,oCAAqC1B,KAAM,cAC1D,CACE0B,YACE,wEACF1B,KAAM,cAER,CACE0B,YACE,gEACF1B,KAAM,UAER,CACE0B,YACE,sEACF1B,KAAM,aAER,CACE0B,YAAa,wDACb1B,KAAM,SAER,CACE0B,YACE,mEACF1B,KAAM,SAER,CACE0B,YAAa,6CACb1B,KAAM,YAER,CACE0B,YACE,8EACF1B,KAAM,UAER,CACE0B,YACE,gFACF1B,KAAM,WAER,CACE0B,YAAa,sDACb1B,KAAM,UAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YACE,kEACF1B,KAAM,WAER,CACE0B,YAAa,yDACb1B,KAAM,YAER,CACE0B,YAAa,8CACb1B,KAAM,SAER,CACE0B,YACE,mEACF1B,KAAM,YAER,CACE0B,YACE,+EACF1B,KAAM,SAER,CACE0B,YAAa,oDACb1B,KAAM,QAER,CACE0B,YAAa,6CACb1B,KAAM,WAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YACE,6DACF1B,KAAM,aAER,CACE0B,YACE,qEACF1B,KAAM,aAER,CACE0B,YACE,+EACF1B,KAAM,cAIZgC,OAAQ,CACNC,KAAM,CAAC,SAAU,SAAU,WAAY,SAAU,WACjDR,KAAM,CACJ,CACEC,YACE,uEACF1B,KAAM,eAER,CACE0B,YACE,iEACF1B,KAAM,cAER,CACE0B,YACE,yEACF1B,KAAM,aAER,CACE0B,YACE,yEACF1B,KAAM,WAER,CACE0B,YACE,qEACF1B,KAAM,UAER,CACE0B,YACE,uEACF1B,KAAM,SAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YACE,+DACF1B,KAAM,WAER,CAAE0B,YAAa,YAAa1B,KAAM,WAClC,CAAE0B,YAAa,oBAAqB1B,KAAM,YAC1C,CACE0B,YAAa,0DACb1B,KAAM,SAER,CACE0B,YACE,8EACF1B,KAAM,aAER,CACE0B,YACE,gFACF1B,KAAM,cAER,CACE0B,YACE,6EACF1B,KAAM,aAER,CACE0B,YAAa,0CACb1B,KAAM,aAER,CACE0B,YACE,oFACF1B,KAAM,OAER,CACE0B,YAAa,0DACb1B,KAAM,SAER,CACE0B,YACE,+EACF1B,KAAM,UAER,CACE0B,YACE,4EACF1B,KAAM,UAER,CACE0B,YACE,4EACF1B,KAAM,YAER,CACE0B,YACE,8EACF1B,KAAM,YAER,CACE0B,YACE,gEACF1B,KAAM,WAIZkC,YAAa,CACXD,KAAM,CAAC,OAAQ,YAAa,aAAc,UAC1CR,KAAM,CACJ,CACEC,YACE,mEACF1B,KAAM,aAER,CACE0B,YACE,uEACF1B,KAAM,UAER,CACE0B,YACE,2EACF1B,KAAM,eAER,CACE0B,YACE,0EACF1B,KAAM,WAER,CACE0B,YACE,gFACF1B,KAAM,SAER,CACE0B,YACE,qEACF1B,KAAM,UAER,CACE0B,YACE,6EACF1B,KAAM,YAER,CACE0B,YAAa,2DACb1B,KAAM,YAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YACE,2EACF1B,KAAM,gBAER,CACE0B,YACE,kEACF1B,KAAM,WAER,CACE0B,YAAa,+CACb1B,KAAM,SAER,CACE0B,YACE,8DACF1B,KAAM,SAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YAAa,kDACb1B,KAAM,cAER,CACE0B,YACE,2EACF1B,KAAM,UAER,CAAE0B,YAAa,YAAa1B,KAAM,UAClC,CACE0B,YAAa,qDACb1B,KAAM,cAER,CACE0B,YACE,wEACF1B,KAAM,UAER,CACE0B,YACE,gFACF1B,KAAM,UAER,CACE0B,YAAa,oDACb1B,KAAM,WAER,CACE0B,YACE,2EACF1B,KAAM,YAER,CACE0B,YACE,8EACF1B,KAAM,QAER,CACE0B,YACE,6EACF1B,KAAM,aAER,CACE0B,YAAa,0DACb1B,KAAM,UAER,CACE0B,YAAa,kDACb1B,KAAM,eAIZmC,MAAO,CACLF,KAAM,CAAC,UAAW,WAClBR,KAAM,CACJ,CACEC,YACE,oEACF1B,KAAM,aAER,CACE0B,YACE,uEACF1B,KAAM,UAER,CACE0B,YACE,2EACF1B,KAAM,eAER,CACE0B,YACE,0EACF1B,KAAM,WAER,CACE0B,YACE,gFACF1B,KAAM,SAER,CACE0B,YAAa,yDACb1B,KAAM,YAER,CACE0B,YACE,qEACF1B,KAAM,UAER,CACE0B,YAAa,wDACb1B,KAAM,YAER,CACE0B,YACE,8EACF1B,KAAM,gBAER,CACE0B,YACE,mEACF1B,KAAM,WAER,CACE0B,YAAa,+CACb1B,KAAM,SAER,CACE0B,YACE,8DACF1B,KAAM,SAER,CAAE0B,YAAa,WAAY1B,KAAM,WACjC,CACE0B,YAAa,kDACb1B,KAAM,cAER,CACE0B,YACE,2EACF1B,KAAM,UAER,CACE0B,YACE,wEACF1B,KAAM,UAER,CACE0B,YACE,+EACF1B,KAAM,UAER,CACE0B,YAAa,oDACb1B,KAAM,WAER,CACE0B,YACE,8EACF1B,KAAM,YAER,CACE0B,YACE,2EACF1B,KAAM,YAER,CACE0B,YACE,8EACF1B,KAAM,QAER,CACE0B,YACE,+DACF1B,KAAM,aAER,CACE0B,YAAa,0DACb1B,KAAM,UAER,CACE0B,YAAa,uDACb1B,KAAM,eAIZoC,KAAM,CACJH,KAAM,CAAC,aAAc,OAAQ,QAAS,QAAS,SAC/CR,KAAM,CACJ,CACEC,YACE,oFACF1B,KAAM,SAER,CACE0B,YACE,gFACF1B,KAAM,WAER,CACE0B,YACE,0EACF1B,KAAM,cAER,CACE0B,YACE,+DACF1B,KAAM,aAER,CACE0B,YACE,gFACF1B,KAAM,gBAER,CACE0B,YAAa,2DACb1B,KAAM,aAER,CACE0B,YACE,mEACF1B,KAAM,YAER,CACE0B,YACE,6DACF1B,KAAM,WAER,CACE0B,YACE,uFACF1B,KAAM,WAER,CACE0B,YACE,iFACF1B,KAAM,SAER,CACE0B,YACE,iEACF1B,KAAM,aAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YACE,uEACF1B,KAAM,aAER,CACE0B,YACE,qEACF1B,KAAM,YAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YACE,+EACF1B,KAAM,YAER,CACE0B,YACE,gFACF1B,KAAM,YAER,CACE0B,YACE,mEACF1B,KAAM,YAER,CACE0B,YACE,uEACF1B,KAAM,cAER,CACE0B,YACE,yEACF1B,KAAM,SAER,CACE0B,YACE,+EACF1B,KAAM,aAER,CACE0B,YACE,+EACF1B,KAAM,UAER,CACE0B,YACE,gFACF1B,KAAM,YAER,CACE0B,YAAa,2DACb1B,KAAM,UAER,CACE0B,YACE,6DACF1B,KAAM,YAER,CACE0B,YACE,6EACF1B,KAAM,aAER,CACE0B,YAAa,0CACb1B,KAAM,cAIZqC,MAAO,CACLJ,KAAM,CAAC,aAAc,UACrBR,KAAM,CACJ,CACEC,YACE,2EACF1B,KAAM,cAER,CACE0B,YACE,gFACF1B,KAAM,WAER,CACE0B,YACE,0EACF1B,KAAM,aAER,CACE0B,YACE,2EACF1B,KAAM,QAER,CACE0B,YACE,gEACF1B,KAAM,UAER,CACE0B,YAAa,0CACb1B,KAAM,eAER,CACE0B,YACE,2EACF1B,KAAM,YAER,CACE0B,YACE,wEACF1B,KAAM,cAER,CACE0B,YACE,uEACF1B,KAAM,aAER,CACE0B,YACE,gEACF1B,KAAM,UAER,CACE0B,YACE,8DACF1B,KAAM,SAER,CACE0B,YACE,6EACF1B,KAAM,YAER,CACE0B,YACE,wEACF1B,KAAM,QAER,CACE0B,YACE,oFACF1B,KAAM,cAER,CACE0B,YAAa,kDACb1B,KAAM,cAER,CACE0B,YAAa,yDACb1B,KAAM,YAER,CACE0B,YACE,mEACF1B,KAAM,YAER,CAAE0B,YAAa,gCAAiC1B,KAAM,cACtD,CACE0B,YACE,wEACF1B,KAAM,QAER,CACE0B,YAAa,kDACb1B,KAAM,SAER,CACE0B,YACE,mEACF1B,KAAM,cAwJDsC,EAAqB,SAACC,EAAmBC,GACpD,IAAMC,EAAY5B,OAAOC,KAAKS,GAE9B,OADQ,OAAGgB,QAAH,IAAGA,IAAYtB,iBAAOwB,IAE5B,IAAK,QACH,OAvJsB,SAACD,GAC3B,I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ACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,cACA,WACA,YAEIC,GAAc,CAClB,oBACA,qBACA,oBACA,uBACA,sBACA,wBAGIC,GAAkB,CACtB,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,SACA,SACA,SACA,SACA,gBACA,gBACA,aACA,eACA,cACA,6BAGIC,GAAa,CACjB,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,qCACA,qCACA,qCACA,mCACA,mCACA,kBAEIC,GAAgB,CACpB,UACA,UACA,UACA,UACA,UACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,mBACA,+BACA,uBAEIC,GAAoB,CACxB,SACA,mBACA,cACA,WACA,QACA,QACA,yBACA,eACA,YACA,WACA,UACA,2BAGIC,GAAW,CACf,UACA,UACA,SACA,SACA,WACA,WACA,YACA,YACA,QACA,QACA,WACA,eAGIC,GAAa,CACjB,SACA,UACA,QACA,SACA,UACA,YACA,cACA,UACA,SACA,QACA,eACA,SACA,QACA,SACA,QACA,cACA,OACA,SACA,UACA,WACA,YACA,aACA,kBAGIC,GAAW,WACf,IAAMT,EAAQrF,iBAAO,IAAMA,iBAAO,IAClC,OAAO6F,GAAWR,IAePU,GAAmB,WAC9B,IAAM/H,EAAmB,CACvBgI,OAAQ3H,iBAAOkH,IACfU,aAAc5H,iBAAOsH,IACrBO,MAAO7H,iBAAOoH,IACdU,MAAOL,KACPM,SAAU/H,iBAAOiH,IACjBe,UAAWjB,KACXkB,WAAYjI,iBAAOmH,IACnBe,SAAUlI,iBAAOqH,KAGnB,OADqB,IAAjB1F,iBAAO,EAAG,KAAUhC,EAAOwI,IAAMnI,iBAAOuH,KACrC5H,GCzLHyI,GAAmB,CACvB,OACA,OACA,OACA,OACA,OACA,WACA,WACA,WACA,SACA,SACA,SACA,WAEIC,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEtDC,GAAuB,WAC3B,IAAMtB,EAAQrF,iBAAO,EAAG,KACxB,OAAIqF,GAAS,GAAW,YACpBA,GAAS,GAAW,YACpBA,GAAS,GAAW,QACpBA,GAAS,GAAW,YACpBA,GAAS,GAAW,aACpBA,GAAS,GAAW,UACpBA,GAAS,GAAW,WACpBA,GAAS,GAAW,YACjB,UAGHuB,GAAiB,CACrB,OACA,aACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,wBAGIC,GAAqB,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE1DC,GAAmB,CACvB,WACA,WACA,WACA,WACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBAGIC,GAAwB,CAC5B,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,cACA,cACA,cACA,WACA,WACA,YACA,YACA,YACA,WACA,YAGIC,GAAgB,CACpB,QACA,QACA,QACA,eACA,eACA,eACA,QACA,QACA,QACA,0BACA,0BACA,2BAGIC,GAAkB,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,YACA,YACA,WACA,WACA,WACA,aACA,aACA,WAGIC,GAAa,CACjB,iBACA,kBACA,eACA,qBACA,qBACA,gBACA,cACA,UACA,WACA,cACA,cACA,qBACA,YACA,eACA,kBACA,iBACA,iBACA,eACA,kBACA,qBACA,eACA,iBACA,aA8BWC,GAAoB,SAC/BC,EACAC,GAEA,IAAIC,EAOJ,OALEA,EADED,EACYpH,qBAAWiH,GAAYlH,iBAAO,EAAG,IAAIuH,KAAK,MAGvC,KAAfvH,iBAAO,IAAakH,GAAWlH,iBAAO,IAAMA,iBAAO,UAAOY,EAEvD,CACLsE,eAAgB7G,iBAAOwI,IACvB5F,WAAY5C,iBAAO4I,IACnBhC,MAAOqC,EACPxL,KAAMuC,iBAAOuI,IACbY,SAAUnJ,iBAAO2I,IACjBS,YAAapJ,iBAAO0I,IACpB1H,KAAMsH,KACNxB,OAAQ9G,iBAAOy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YY,WACd,IAAMxG,EAAQrF,iBAAO,EAAG,IACxB,OAAIqF,GAAS,EAAU,4BACnBA,GAAS,EAAU,gBACT,IAAVA,EAAoB,iCACV,KAAVA,EAAqB,0CACX,KAAVA,EAAqB,4CACX,KAAVA,EAAqB,8BACX,KAAVA,EAAqB,sCACX,KAAVA,EAAqB,4BACX,KAAVA,EAAqB,eACX,KAAVA,EAAqB,2CACrBA,GAAS,GAAW,4BACpBA,GAAS,GAAW,wBAAxB,GAzBEwG,GA2BW,CACb,6BACA,6BACA,eACA,iBACA,6BACA,qBACA,qBACA,6CACA,4BACA,sBACA,uCACA,wCACA,uBACA,oCACA,+BACA,6BACA,sBACA,6BACA,sCACA,4BA/CEA,GAiDM,CACR,oBACA,cACA,mBACA,sBACA,oBACA,UACA,oBACA,iBACA,aACA,YACA,OACA,WACA,cACA,YACA,OACA,eACA,qBACA,kBACA,eACA,aArEEA,GAuEM,CACR,gCACA,0BACA,4CACA,oCACA,mCACA,mCACA,oBACA,qBACA,qBACA,sCACA,wCACA,WACA,gCACA,mBACA,cACA,qCACA,sBACA,sCACA,kDACA,sCAISC,GAAqB,WAChC,MAAO,CACLC,aAAcF,KACdG,YAAaH,KACbI,aAAc5N,iBAAOwN,IACrBK,SAAU7N,iBAAOwN,IACjBM,SAAU9N,iBAAOwN,M,sICzGrB,IAAMtI,GAAYhI,IAAO8F,IAAV,MA4CA+K,GAtCS,WAAO,IAAD,EAC0B/P,mBAEpDyP,IAH0B,mBACrBO,EADqB,KACAC,EADA,KAQ5B,OACE,kBAAC,GAAD,KACE,kBAAC3Q,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNyG,WAAS,EACTxG,KAAK,QACLC,QAVwB,WAC5BuQ,EAAuBR,QAIrB,uBASA,2BACE,qDADF,IACsCO,EAAoBN,cAE1D,2BACE,iDADF,IACkCM,EAAoBL,aAEtD,2BACE,mDADF,IACoCK,EAAoBJ,cAExD,2BACE,8CADF,IAC+BI,EAAoBH,UAEnD,2BACE,qDADF,IACsCG,EAAoBF,YC1C1DI,GAAa,CACjB,2EACA,gCACA,+CACA,oBACA,iDACA,gDACA,iDACA,oBACA,qDACA,2CACA,mDACA,sEACA,oDACA,wCACA,oDACA,uDACA,oGACA,wCACA,0CACA,gGACA,wDACA,kCACA,sEACA,iDACA,uCACA,iDACA,kBACA,sCACA,2BACA,2BACA,oCACA,8CACA,6CACA,sDACA,uBACA,0CACA,gCACA,4CACA,2EACA,oCACA,oEACA,qCACA,4DACA,oFACA,gFACA,mCACA,+EACA,8CACA,+EACA,gCACA,+BACA,0BACA,qBACA,4FACA,0BACA,sBACA,6CACA,6DACA,sCACA,kCACA,yBACA,mCACA,4BACA,yCACA,oBACA,oCACA,wBACA,iDAGIC,GACQ,CACV,CACEC,KAAM,cACNC,SAAU,CACR,2CACA,oBACA,yCACA,sCAGJ,CACED,KAAM,YACNC,SAAU,CACR,qCACA,8BACA,wCACA,wCAGJ,CACED,KAAM,QACNC,SAAU,CACR,6BACA,sCACA,6BACA,8BACA,gCACA,iCAGJ,CACED,KAAM,SACNC,SAAU,CACR,kCACA,8CACA,0BACA,yBACA,6BACA,wCAIJ,CACED,KAAM,UACNC,SAAU,CACR,kCACA,wCACA,oCACA,kDAGJ,CACED,KAAM,QACNC,SAAU,CACR,yCACA,0BACA,qCACA,8BAGJ,CACED,KAAM,UACNC,SAAU,CACR,sCACA,uCACA,kCACA,kDAGJ,CACED,KAAM,SACNC,SAAU,CACR,qCACA,oBACA,wBACA,kCA5EFF,GAgFU,CACZ,CACEG,OAAQ,eACRC,UAAW,CAAC,SAAU,eAAgB,UAAW,WAEnD,CACED,OAAQ,uBAEV,CACEA,OAAQ,mCAGV,CACEA,OAAQ,wBACRC,UAAW,CACT,UACA,aACA,YACA,gBACA,aACA,qBACA,cACA,YACA,UACA,0BAGJ,CACED,OAAQ,mBACRC,UAAW,CACT,qBACA,WACA,eACA,aACA,qBACA,uBAGJ,CACED,OAAQ,aACRC,UAAW,CACT,UACA,uBACA,cACA,qBAGJ,CACED,OAAQ,oBACRC,UAAW,CACT,YACA,uBACA,gBACA,eACA,yBACA,UACA,aACA,uBAGJ,CAAED,OAAQ,6BACV,CAAEA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","file":"static/js/main.8cdcffca.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const IFrame = styled.iframe`\n  width: 100%;\n  height: 30em;\n`;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\n\nconst IFrame = styled.iframe`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 75%;\n  border: 2px;\n`;\nconst Names: FC = () => {\n  return (\n    <>\n      <Button\n        variant=\"text\"\n        color=\"default\"\n        size=\"large\"\n        onClick={() =>\n          window.open(\"https://donjon.bin.sh/scifi/name/\", \"_blank\")\n        }\n      >\n        Link to generator\n      </Button>\n      <IFrame src=\"https://www.fantasynamegenerators.com/\" />\n    </>\n  );\n};\n\nexport default Names;\n","import React, { useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Button } from \"@material-ui/core\";\nimport { sample } from \"lodash\";\n\nconst questionsTable = [\"Who\", \"What\", \"When\", \"Where\", \"Why\"];\n\nexport default function CheckboxesGroup() {\n  const [playersPresent, setPlayersPresent] = useState<any>({\n    Alex: false,\n    Devon: false,\n    Talicia: false,\n    JaMile: false,\n    TRX: false,\n    Joe: false,\n    Noodles: false,\n  });\n  const [questionResults, setQuestionResults] = useState<any>({});\n  const generateQuestions = () => {\n    const result = {} as any;\n    Object.keys(playersPresent).forEach((player) => {\n      if (playersPresent[player]) {\n        result[player] = sample(questionsTable);\n      }\n    });\n    setQuestionResults(result);\n  };\n  const handleChange = (event: any) => {\n    setPlayersPresent({\n      ...playersPresent,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const genLabel = (name: string, question: string) => {\n    if (!question) {\n      return name;\n    } else {\n      return `${name} => ${question}`;\n    }\n  };\n  return (\n    <>\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormGroup>\n            <FormControlLabel\n              checked={playersPresent.Alex}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"Alex\"\n              label={genLabel(\"Alex\", questionResults.Alex)}\n            />\n            <FormControlLabel\n              checked={playersPresent.Devon}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"Devon\"\n              label={genLabel(\"Devon\", questionResults.Devon)}\n            />\n            <FormControlLabel\n              checked={playersPresent.Talicia}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"Talicia\"\n              label={genLabel(\"Talicia\", questionResults.Talicia)}\n            />\n            <FormControlLabel\n              checked={playersPresent.TRX}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"TRX\"\n              label={genLabel(\"TRX\", questionResults.TRX)}\n            />\n            <FormControlLabel\n              checked={playersPresent.Noodles}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"Noodles\"\n              label={genLabel(\"Noodles\", questionResults.Noodles)}\n            />\n            <FormControlLabel\n              checked={playersPresent.JaMile}\n              onChange={handleChange}\n              control={<Checkbox />}\n              name=\"JaMile\"\n              label={genLabel(\"JaMile\", questionResults.JaMile)}\n            />\n            <FormControlLabel\n              checked={playersPresent.Joe}\n              control={<Checkbox />}\n              onChange={handleChange}\n              name=\"Joe\"\n              label={genLabel(\"Joe\", questionResults.Joe)}\n            />\n          </FormGroup>\n        </FormControl>\n      </div>\n      <Button variant=\"contained\" color=\"primary\" onClick={generateQuestions}>\n        Generate Questions\n      </Button>\n    </>\n  );\n}\n","import { sample } from \"lodash\";\n\nexport const traits = [\n  [\n    [\"Sinister\", \"Controlling\", \"Secretive\", \"Popular\", \"Rapacious\", \"Austere\"],\n    [\"Wealthy\", \"Honorable\", \"Violent\", \"Degenerate\", \"Defiant\", \"Tyrannical\"],\n    [\"Brutal\", \"Underhanded\", \"Ancient\", \"Terrifying\", \"Fanatic\", \"Brave\"],\n  ],\n  [\n    [\n      \"Expansionist\",\n      \"Scientific\",\n      \"Authoritarian\",\n      \"Colonizing\",\n      \"Trade\",\n      \"Mercenary\",\n    ],\n    [\n      \"Merchant\",\n      \"Industrious\",\n      \"Criminal\",\n      \"Military\",\n      \"Anarchist\",\n      \"Starfaring\",\n    ],\n    [\n      \"Rebel\",\n      \"High Tech\",\n      \"Diplomatic\",\n      \"Corporate\",\n      \"Regimented\",\n      \"Political\",\n    ],\n  ],\n  [\n    [\"Government\", \"Cult\", \"Fleet\", \"Council\", \"Corporation\", \"Federation\"],\n    [\"Society\", \"Coalition\", \"Armada\", \"Network\", \"Consortium\", \"Republic\"],\n    [\"Empire\", \"Religion\", \"Regime\", \"Cartel\", \"Alliance\", \"Legion\"],\n  ],\n];\n\nexport const generateFactionTraits = () => {\n  const col1Result = sample(sample(traits[0]));\n  const col2Result = sample(sample(traits[1]));\n  const col3Result = sample(sample(traits[2]));\n\n  return [col1Result, col2Result, col3Result];\n};\n","import React, { FC, useState } from \"react\";\nimport { generateFactionTraits } from \"./utils\";\nimport { Button } from \"@material-ui/core\";\n\nconst Factions: FC = () => {\n  const [generatedFaction, setGeneratedFaction] = useState<\n    (string | undefined)[]\n  >(generateFactionTraits());\n  const generateNewFaction = () => {\n    setGeneratedFaction(generateFactionTraits());\n  };\n  return (\n    <section>\n      <h3>\n        {generatedFaction[0]} - {generatedFaction[1]} - {generatedFaction[2]}\n      </h3>\n      <Button variant=\"contained\" color=\"primary\" onClick={generateNewFaction}>\n        Generate Faction\n      </Button>\n    </section>\n  );\n};\n\nexport default Factions;\n","import { random, sample, sampleSize } from \"lodash\";\n\nexport interface Tag {\n  description: string;\n  name: string;\n}\n\nexport interface GeneratedItem {\n  armed?: Tag;\n  classLevel: number;\n  design?: string;\n  locomotion?: string;\n  tags: Tag[];\n  type: ItemTypes;\n  switching?: Tag[];\n  weapon?: Tag;\n  deadly?: Tag[];\n  tool?: Tag;\n}\n\nexport interface ItemTraits {\n  melee: {\n    tags: Tag[];\n  };\n  firearm: {\n    types: (\"pistol\" | \"rifle\")[];\n    tags: Tag[];\n  };\n  heavy: {\n    tags: Tag[];\n  };\n  explosive: {\n    types: (\"grenade\" | \"charge\" | \"missile\")[];\n    tags: Tag[];\n  };\n  artillery: {\n    tags: Tag[];\n  };\n  attire: {\n    type: (\"rugged\" | \"simple\" | \"cultural\" | \"formal\" | \"uniform\")[];\n    tags: Tag[];\n  };\n  landVehicle: {\n    type: (\"bike\" | \"groundcar\" | \"walker\" | \"quadwalker\")[];\n    tags: Tag[];\n  };\n  flyer: {\n    type: (\"speeder\" | \"shuttle\")[];\n    tags: Tag[];\n  };\n  crew: {\n    type: (\"squad\" | \"techs\" | \"gang\" | \"staff\" | \"artificial\")[];\n    tags: Tag[];\n  };\n  beast: {\n    type: (\"weapon\" | \"locomotion\")[];\n    tags: Tag[];\n  };\n}\n\nexport type ItemTypes =\n  | \"melee\"\n  | \"firearm\"\n  | \"heavy\"\n  | \"explosive\"\n  | \"artillery\"\n  | \"attire\"\n  | \"landVehicle\"\n  | \"flyer\"\n  | \"crew\"\n  | \"beast\";\n\nexport const itemTraits: ItemTraits = {\n  melee: {\n    tags: [\n      {\n        name: \"Consecrated\",\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n      },\n      {\n        description: \"Causes harm to anyone but its true owner.\",\n        name: \"Dangerous\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Creates a lasting elemental reaction. Ex: fire, corrosion, frost, smoke, etc.\",\n        name: \"Elemental\",\n      },\n      {\n        description:\n          \"A living organic creature. Minor mobility. Regrows and regenerates if hurt.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Two weapons that act in perfect tandem. Mediocre if used separately.\",\n        name: \"Paired\",\n      },\n      {\n        description: \"Glows with light. Unleashes blinding flashes.\",\n        name: \"Radiant\",\n      },\n      {\n        description:\n          \"Choose a skill. Lessens/diverts/absorbs some of the consequences of failures.\",\n        name: \"Specialized\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Choose 2 basic upgrades. The weapon can switch forms between those two.\",\n        name: \"Switching\",\n      },\n      {\n        description:\n          \"Choose the element or concept this weapon drinks (heat, blood, fear, etc.).\",\n        name: \"Syphon\",\n      },\n      {\n        description:\n          \"A cyber weapon program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description: \"Inconspicuous, easily hidden, doesn’t show on scanners.\",\n        name: \"Concealed\",\n      },\n      {\n        description: \"Can parry, deflect, and disarm.\",\n        name: \"Defensive\",\n      },\n      {\n        description:\n          \"Causes property damage and damages machinery and vehicles.\",\n        name: \"Destructive\",\n      },\n      {\n        description:\n          \"Glows with incandescent energy, melts, burns, cauterizes.\",\n        name: \"Energy\",\n      },\n      {\n        description:\n          \"Whip-like length capable of binding and lashing. Optimal Range: Adjacent\",\n        name: \"Flexible\",\n      },\n      {\n        description: \"A heavy, weaponized glove. Can still manipulate objects.\",\n        name: \"Glove\",\n      },\n      {\n        description:\n          \"Two handed. Long reach. Sweeping attacks. Range: Melee, Adjacent\",\n        name: \"Hafted\",\n      },\n      {\n        description:\n          \"Two handed. Massive, resilient. Heavy, devastating attacks, hard to block.\",\n        name: \"Heavy\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Impact\",\n      },\n      {\n        description:\n          \"Can pin targets, pierce thin materials, and stab with great accuracy.\",\n        name: \"Piercing\",\n      },\n      {\n        description: \"Loud mechanical motion rips, tears, grinds or shreds\",\n        name: \"Ripper\",\n      },\n      {\n        description: \"Chops, cuts, causes bleeding and can sever limbs.\",\n        name: \"Severing\",\n      },\n      {\n        description:\n          \"Electrocutes, harms electronics and robots. Can stun on low settings.\",\n        name: \"Shock\",\n      },\n      {\n        description: \"Looks impressive, distinctive, and unique.\",\n        name: \"Stylish\",\n      },\n      {\n        description:\n          \"Range: Adjacent, Close. Handful of one-handed throwing weapons.\",\n        name: \"Thrown\",\n      },\n    ],\n  },\n  firearm: {\n    types: [\"pistol\", \"rifle\"],\n    tags: [\n      {\n        description:\n          \"Choose a Skill. Characters with that Skill can use it through the weapon.\",\n        name: \"Channel\",\n      },\n      {\n        description:\n          \"Takes significant time to charge up, vastly increased damage at full charge.\",\n        name: \"Charged\",\n      },\n      {\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n        name: \"Consecrated\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"A living organic creature. Regrows its own ammo over time.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Two pistols that act in perfect tandem. Mediocre if used separately.\",\n        name: \"Paired\",\n      },\n      {\n        description:\n          \"Projectiles unleash blinding flashes and illuminate targets.\",\n        name: \"Radiant\",\n      },\n      {\n        description:\n          \"Projectiles bounce off hard surfaces, allowing for trick shots.\",\n        name: \"Ricochet\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Choose 2 basic upgrades. The weapon can switch forms between those two.\",\n        name: \"Switching\",\n      },\n      {\n        description:\n          \"Choose the element or concept this weapon drinks (heat, blood, fear, etc.).\",\n        name: \"Syphon\",\n      },\n      {\n        description:\n          \"A cyber weapon program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description:\n          \"Attach Class 0 Small weapon with Sharp, Ripper, Energy or Shock.\",\n        name: \"Attachment\",\n      },\n      {\n        description: \"Instead of a single shot, sprays shots in a wide cone.\",\n        name: \"Burst\",\n      },\n      {\n        description: \"Inconspicuous, easily hidden, doesn’t show on scanners.\",\n        name: \"Concealed\",\n      },\n      {\n        description:\n          \"Creates a lasting chemical reaction. Ex: fire, corrosion, frost, smoke, etc.\",\n        name: \"Chemical\",\n      },\n      {\n        description: \"Causes property damage, damages machinery and vehicles.\",\n        name: \"Destructive\",\n      },\n      {\n        description:\n          \"Loud. Causes messy wounds and property damage near the point of impact.\",\n        name: \"Explosive\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Impact\",\n      },\n      {\n        description: \"Can only be fired by you unless you unlock it.\",\n        name: \"Keyed\",\n      },\n      {\n        description:\n          \"Projects focused beams of energy that can cut or melt materials.\",\n        name: \"Laser\",\n      },\n      {\n        description: \"Lobbed, arcing projectile with a modest area of effect.\",\n        name: \"Launcher\",\n      },\n      {\n        description: \"Mounted to a forearm or shoulder rig, keeps hands free.\",\n        name: \"Mounted\",\n      },\n      { description: \"Ignores Armor.\", name: \"Penetrating\" },\n      {\n        description: \"Fires bright bolts of supercharged, burning energy.\",\n        name: \"Plasma\",\n      },\n      {\n        description: \"Unleashes suppressing fire at multiple targets.\",\n        name: \"Rapid Fire\",\n      },\n      {\n        description:\n          \"Can fire at distant objects. Optimal Ranges: Far, Distant.\",\n        name: \"Scope\",\n      },\n      {\n        description: \"Electrocutes, harms electronics and robots.\",\n        name: \"Shock\",\n      },\n      {\n        description:\n          \"Causes heavy bleeding and disfigurement around the target.\",\n        name: \"Shrapnel\",\n      },\n      {\n        description: \"Suppressed muzzle flash and practically silent shot.\",\n        name: \"Silenced\",\n      },\n      {\n        description: \"No recoil, can be used in micro-gravity environments.\",\n        name: \"Stabilized\",\n      },\n      {\n        description: \"Non-lethal. Stuns, snares, or renders unconscious.\",\n        name: \"Stun\",\n      },\n      {\n        description: \"Looks impressive, distinctive, and unique.\",\n        name: \"Stylish\",\n      },\n    ],\n  },\n  heavy: {\n    tags: [\n      {\n        description:\n          \"Takes significant time to charge up, vastly increased damage at full charge.\",\n        name: \"Charged\",\n      },\n      {\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n        name: \"Consecrated\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Creates a brief implosion that draws in nearby targets and objects.\",\n        name: \"Implosion\",\n      },\n      {\n        description:\n          \"A living organic creature. Regrows its own ammo over time.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Projectiles bounce off hard surfaces, allowing for trick shots.\",\n        name: \"Ricochet\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Choose 2 basic upgrades. The weapon can switch forms between those two.\",\n        name: \"Switching\",\n      },\n      {\n        description:\n          \"Can be deployed and given simple directives. Fires using your +Interface.\",\n        name: \"Turret\",\n      },\n      {\n        description:\n          \"A cyber weapon program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description:\n          \"Breaching, Impact, and Detonation on a roll of 10+, then needs to recharge. \",\n        name: \"Volatile\",\n      },\n      {\n        description: \"Damages starships and reinforced structures.\",\n        name: \"Breaching\",\n      },\n      {\n        description:\n          \"Creates a lasting chemical reaction. Ex: fire, corrosion, frost, smoke, etc.\",\n        name: \"Chemical\",\n      },\n      {\n        description:\n          \"Exceptionally loud and bright. Stuns, deafens, blinds, and knocks away.\",\n        name: \"Concussive\",\n      },\n      {\n        description: \"Explodes in a large blast radius.\",\n        name: \"Detonation\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Impact\",\n      },\n      {\n        description: \"Can only be fired by you unless you unlock it.\",\n        name: \"Keyed\",\n      },\n      {\n        description:\n          \"Projects focused beams of energy that can cut or melt materials.\",\n        name: \"Laser\",\n      },\n      { description: \"Ignores Armor.\", name: \"Penetrating\" },\n      {\n        description: \"Fires bright bolts of supercharged, burning energy.\",\n        name: \"Plasma\",\n      },\n      {\n        description: \"Projectile arcs towards a moving target.\",\n        name: \"Seeking\",\n      },\n      {\n        description: \"Electrocutes, harms electronics and robots.\",\n        name: \"Shock\",\n      },\n      {\n        description:\n          \"Causes amputation, bleeding, and disfigurement in a wide radius.\",\n        name: \"Shrapnel\",\n      },\n      {\n        description:\n          \"Reduces distance but increases coverage to a wide cone. Optimal Range: Close.\",\n        name: \"Spray\",\n      },\n      {\n        description: \"Non-lethal. Stuns, snares, or renders unconscious.\",\n        name: \"Stun\",\n      },\n      {\n        description: \"Looks impressive, distinctive, and unique.\",\n        name: \"Stylish\",\n      },\n      {\n        description:\n          \"Unleashes a constant suppressing fire at multiple targets.\",\n        name: \"Sustained\",\n      },\n    ],\n  },\n  explosive: {\n    types: [\"charge\", \"missile\", \"grenade\"],\n    tags: [\n      {\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n        name: \"Consecrated\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Creates a brief implosion that draws in nearby targets and objects.\",\n        name: \"Implosion\",\n      },\n      {\n        description:\n          \"Continuous effect for several minutes, or repeats multiple times over an hour.\",\n        name: \"Ongoing\",\n      },\n      {\n        description:\n          \"Sends back telemetry needed to perform an Assessment. Non-lethal.\",\n        name: \"Scanner\",\n      },\n      {\n        description:\n          \"Grenade/Missile only. Used with +Interface, seeks target before exploding.\",\n        name: \"Seeking\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Grenade only. Explodes when conditions are met (signal, proximity, etc.).\",\n        name: \"Triggered\",\n      },\n      {\n        description:\n          \"A cyber weapon program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description:\n          \"Becomes Breaching, Concussive, and Kinetic on a roll of 10+ when using it.\",\n        name: \"Volatile\",\n      },\n      {\n        description:\n          \"Breaches reinforced buildings and starships. Charge only.\",\n        name: \"Breaching\",\n      },\n      {\n        description:\n          \"Creates a lasting chemical reaction. Ex: incendiary, corrosion, frost, smoke etc.\",\n        name: \"Chemical\",\n      },\n      {\n        description:\n          \"Scatters secondary explosives in the area, which detonate moments later.\",\n        name: \"Cluster\",\n      },\n      {\n        description: \"Inconspicuous, easily hidden, doesn’t show on scanners.\",\n        name: \"Concealed\",\n      },\n      {\n        description:\n          \"Exceptionally loud and bright. Stuns, deafens, blinds, and knocks away.\",\n        name: \"Concussive\",\n      },\n      {\n        description:\n          \"Causes property damage, damages machinery and vehicles. Grenade only.\",\n        name: \"Destructive\",\n      },\n      {\n        description: \"Directed high explosive force, little collateral damage.\",\n        name: \"Focused\",\n      },\n      {\n        description:\n          \"Scrambles and disrupts electronic systems, scanners, and advanced weaponry.\",\n        name: \"Haywire\",\n      },\n      {\n        description:\n          \"Massive area of effect, city block or more. Charge or Missile only.\",\n        name: \"High Yield\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Kinetic\",\n      },\n      {\n        description:\n          \"Creates a nova of incandescent energy that vaporizes matter.\",\n        name: \"Plasma\",\n      },\n      {\n        description: \"Electrocutes, harms electronics and robots.\",\n        name: \"Shock\",\n      },\n      {\n        description: \"Causes heavy bleeding, dismemberment, and disfigurement.\",\n        name: \"Shrapnel\",\n      },\n      {\n        description: \"Attaches itself to any surfaces, difficult to remove.\",\n        name: \"Sticky\",\n      },\n      {\n        description: \"Non-lethal. Stuns, snares, or renders unconscious.\",\n        name: \"Stun\",\n      },\n      {\n        description:\n          \"Creates impressive, distinctive, and unique visual effects.      \",\n        name: \"Stylish\",\n      },\n    ],\n  },\n  artillery: {\n    tags: [\n      {\n        description:\n          \"Resists non-Breaching damage. Crew +2 Armor from outside harm.\",\n        name: \"Armored\",\n      },\n      {\n        description:\n          \"Takes significant time to charge up, vastly increased damage at full charge.\",\n        name: \"Charged\",\n      },\n      {\n        description:\n          \"Creates a lasting chemical reaction. Ex: fire, corrosion, frost, smoke, etc.\",\n        name: \"Chemical\",\n      },\n      {\n        description:\n          \"Exceptionally loud and bright. Stuns, deafens, blinds, and knocks away.\",\n        name: \"Concussive\",\n      },\n      {\n        description:\n          \"Dedicated to a cause. Causes great harm to enemies of the cause.\",\n        name: \"Consecrated\",\n      },\n      { description: \"Explodes in a large blast radius.\", name: \"Detonation\" },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Heavy kinetic force that breaks bones and knocks people over.\",\n        name: \"Impact\",\n      },\n      {\n        description:\n          \"Creates a brief implosion that draws in nearby targets and objects.\",\n        name: \"Implosion\",\n      },\n      {\n        description: \"Can only be fired by its owner unless they unlock it.\",\n        name: \"Keyed\",\n      },\n      {\n        description:\n          \"Projects focused beams of energy that can cut or melt materials.\",\n        name: \"Laser\",\n      },\n      {\n        description: \"Launches Missile explosives (see page 95).\",\n        name: \"Launcher\",\n      },\n      {\n        description:\n          \"A living organic creature. Minor mobility. Regrows its own ammo over time. \",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Constant effect for several minutes, or repeats multiple times over an hour. \",\n        name: \"Ongoing\",\n      },\n      {\n        description: \"Fires bright bolts of supercharged, burning energy.\",\n        name: \"Plasma\",\n      },\n      {\n        description:\n          \"Can be disassembled, carried, and set up elsewhere. Must be set up to fire. \",\n        name: \"Portable\",\n      },\n      {\n        description:\n          \"Fired with +Interface. Projectile arcs towards a moving target.\",\n        name: \"Seeking\",\n      },\n      {\n        description: \"Crew gains +1 Armor. Blocks remote Access and hacking.\",\n        name: \"Shielded\",\n      },\n      {\n        description: \"Electrocutes, harms electronics and robots.\",\n        name: \"Shock\",\n      },\n      {\n        description:\n          \"Causes amputation, bleeding, and disfigurement in a wide radius.\",\n        name: \"Shrapnel\",\n      },\n      {\n        description:\n          \"Reduces distance but increases coverage to a wide cone. Optimal Range: Far. \",\n        name: \"Spray\",\n      },\n      {\n        description: \"Non-lethal. Stuns, snares or renders unconscious.\",\n        name: \"Stun\",\n      },\n      {\n        description: \"Looks impressive, distinctive, and unique.\",\n        name: \"Stylish\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Unleashes a constant suppressing fire at multiple targets.\",\n        name: \"Sustained\",\n      },\n      {\n        description:\n          \"Choose 2 upgrades. The weapon can switch forms between those two. \",\n        name: \"Switching\",\n      },\n      {\n        description:\n          \"Concussive, Impact, and Detonation on a roll of 10+, then needs to recharge.\",\n        name: \"Volatile\",\n      },\n    ],\n  },\n  attire: {\n    type: [\"rugged\", \"simple\", \"cultural\", \"formal\", \"uniform\"],\n    tags: [\n      {\n        description:\n          \"Dedicated to a cause. Grants +2 Armor against enemies of that cause.\",\n        name: \"Consecrated\",\n      },\n      {\n        description:\n          \"The wearer and those nearby cannot use supernatural abilities.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Constantly creates the chosen mental state (rage, bliss, focus, etc.).\",\n        name: \"Emotional\",\n      },\n      {\n        description:\n          \"Aspects of the attire inconspicuously fold away, deployed when needed.\",\n        name: \"Folding\",\n      },\n      {\n        description:\n          \"A living organic creature. Heals and regrows naturally if damaged.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Bladed, spiked, etc. Limbs and body count as Severing melee weapons.\",\n        name: \"Sharp\",\n      },\n      {\n        description:\n          \"Mimic different Designs at will (rugged, simple, cultural, formal, uniform).\",\n        name: \"Shifting\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"A cyber armor program that also exists inside the SectorNet.\",\n        name: \"Virtual\",\n      },\n      { description: \"+2 Armor.\", name: \"Armored\" },\n      { description: \"Clumsy, +3 Armor.\", name: \"Carapace\" },\n      {\n        description: \"Can receive and broadcast signals over great distances.\",\n        name: \"Comms\",\n      },\n      {\n        description:\n          \"Built in computer with eye-piece HUD, connects wirelessly to other systems.\",\n        name: \"Connected\",\n      },\n      {\n        description:\n          \"Ostentatious, distinctive, intimidating, with embellishments and accessories.\",\n        name: \"Impressive\",\n      },\n      {\n        description:\n          \"Can give small burst jumps, slow descent, and controlled flight in zero-g.\",\n        name: \"Jump Jets\",\n      },\n      {\n        description: \"+1 Armor that looks like normal fabric.\",\n        name: \"Meshweave\",\n      },\n      {\n        description:\n          \"Choose the Kit that is integrated in the suit. A second Kit can still be carried.\",\n        name: \"Rig\",\n      },\n      {\n        description: \"Protects from elements, hard to damage, easy to repair.\",\n        name: \"Tough\",\n      },\n      {\n        description:\n          \"An airtight suit, helmet and oxygen tank. Functions in space or under water.\",\n        name: \"Sealed\",\n      },\n      {\n        description:\n          \"Choose a type of information. Screen scans and displays that information.\",\n        name: \"Sensor\",\n      },\n      {\n        description:\n          \"+1 Armor provided by thin, invisible energy shield projected by the suit.\",\n        name: \"Shielded\",\n      },\n      {\n        description:\n          \"Muffled, blends in to environments and is difficult to pick up on scanners.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Choose a type of information. The visor detects that subject.\",\n        name: \"Visor\",\n      },\n    ],\n  },\n  landVehicle: {\n    type: [\"bike\", \"groundcar\", \"quadwalker\", \"walker\"],\n    tags: [\n      {\n        description:\n          \"Deals extra ramming damage. +6 Armor against head-on collisions.\",\n        name: \"Battering\",\n      },\n      {\n        description:\n          \"Covered in sharp implements. Can cut down or impale targets on foot.\",\n        name: \"Bladed\",\n      },\n      {\n        description:\n          \"Locked, sealed, shielded compartment. Special codes/keys needed to open.\",\n        name: \"Containment\",\n      },\n      {\n        description:\n          \"Aspects of the vehicle inconspicuously fold away, deployed when needed.\",\n        name: \"Folding\",\n      },\n      {\n        description:\n          \"Designed to be piloted by a chosen person, hostile/resistant to other pilots.\",\n        name: \"Keyed\",\n      },\n      {\n        description:\n          \"A living organic creature. Heals and regrows naturally if damaged.\",\n        name: \"Living\",\n      },\n      {\n        description:\n          \"Can attach an Artillery weapon (see page 96). Vehicle is slow and Clumsy. \",\n        name: \"Platform\",\n      },\n      {\n        description: \"+1 Armor (grav field). Blocks remote Access and hacking.\",\n        name: \"Shielded\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Chose a Vehicle/Flyer design. Can change to that design and back again. \",\n        name: \"Transforming\",\n      },\n      {\n        description:\n          \"A cyber vehicle program that also exists inside the SectorNet. \",\n        name: \"Virtual\",\n      },\n      {\n        description: \"Quick, maneuverable, able to perform stunts.\",\n        name: \"Agile\",\n      },\n      {\n        description:\n          \"A heavy weapon attached to the vehicle, fired by the pilot.\",\n        name: \"Armed\",\n      },\n      {\n        description: \"Greatly increases overland speed. Allows short jumps.\",\n        name: \"Boosters\",\n      },\n      {\n        description: \"Can be remotely activated and given directions.\",\n        name: \"Controlled\",\n      },\n      {\n        description:\n          \"Impressive, high quality, comfortable. Various quality-of-life features.\",\n        name: \"Luxury\",\n      },\n      { description: \"+3 Armor.\", name: \"Plated\" },\n      {\n        description: \"Ponderous. +3 Armor. Ignores non-Breaching damage.\",\n        name: \"Reinforced\",\n      },\n      {\n        description:\n          \"Protects from elements, resists environmental damage, easy to repair.\",\n        name: \"Rugged\",\n      },\n      {\n        description:\n          \"Fully enclosed frame, oxygen source. Can function in space, under water, etc.\",\n        name: \"Sealed\",\n      },\n      {\n        description: \"The vehicle gathers various types of information.\",\n        name: \"Sensors\",\n      },\n      {\n        description:\n          \"Silent, difficult to pick up on sensors, occupants invisible to sensors.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Choose a melee weapon upgrade to represent a tool attached to this vehicle.\",\n        name: \"Tool\",\n      },\n      {\n        description:\n          \"Can carry a dozen people or a cargo container. Groundcar/Quad Walker only.\",\n        name: \"Transport\",\n      },\n      {\n        description: \"A heavy weapon on a swivel mount, fired by a passenger.\",\n        name: \"Turret\",\n      },\n      {\n        description: \"Choose a Kit to be integrated into the vehicle.\",\n        name: \"Workspace\",\n      },\n    ],\n  },\n  flyer: {\n    type: [\"shuttle\", \"speeder\"],\n    tags: [\n      {\n        description:\n          \"Designed for ramming. Head-on collisions only cause Major damage.\",\n        name: \"Battering\",\n      },\n      {\n        description:\n          \"Covered in sharp implements. Can cut down or impale targets on foot.\",\n        name: \"Bladed\",\n      },\n      {\n        description:\n          \"Locked, sealed, shielded compartment. Special codes/keys needed to open.\",\n        name: \"Containment\",\n      },\n      {\n        description:\n          \"Aspects of the vehicle inconspicuously fold away, deployed when needed.\",\n        name: \"Folding\",\n      },\n      {\n        description:\n          \"Designed to be piloted by a chosen person, hostile/resistant to other pilots.\",\n        name: \"Keyed\",\n      },\n      {\n        description: \"Can carry and launch Missile explosives (see page 95).\",\n        name: \"Launcher\",\n      },\n      {\n        description:\n          \"A living organic creature. Heals and regrows naturally if damaged.\",\n        name: \"Living\",\n      },\n      {\n        description: \"Called into existence from nothing, can be dismissed.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Chose a Vehicle or Flyer design. Can change to that design and back again. \",\n        name: \"Transforming\",\n      },\n      {\n        description:\n          \"A cyber vehicle program that also exists inside the SectorNet.  \",\n        name: \"Virtual\",\n      },\n      {\n        description: \"Quick, maneuverable, able to perform stunts.\",\n        name: \"Agile\",\n      },\n      {\n        description:\n          \"A heavy weapon attached to the vehicle, fired by the pilot.\",\n        name: \"Armed\",\n      },\n      { description: \"+2 Armor\", name: \"Armored\" },\n      {\n        description: \"Can be remotely activated and given directions.\",\n        name: \"Controlled\",\n      },\n      {\n        description:\n          \"Impressive, high quality, comfortable. Various quality-of-life features.\",\n        name: \"Luxury\",\n      },\n      {\n        description:\n          \"Protects from elements, resists environmental damage, easy to repair.\",\n        name: \"Rugged\",\n      },\n      {\n        description:\n          \"Fully enclosed frame,oxygen source. Can function in space, under water, etc.\",\n        name: \"Sealed\",\n      },\n      {\n        description: \"The vehicle gathers various types of information.\",\n        name: \"Sensors\",\n      },\n      {\n        description:\n          \"+1 Armor provided by extended grav field. Blocks remote Access and hacking.\",\n        name: \"Shielded\",\n      },\n      {\n        description:\n          \"Silent, difficult to pick up on sensors, occupants invisible to sensors.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Choose a melee weapon upgrade to represent a tool attached to this vehicle.\",\n        name: \"Tool\",\n      },\n      {\n        description:\n          \"Can carry a dozen people or a cargo container. Shuttle only.\",\n        name: \"Transport\",\n      },\n      {\n        description: \"A heavy weapon on a swivel mount, fired by a passenger.\",\n        name: \"Turret\",\n      },\n      {\n        description: \"Choose a Kit to be integrated into the vehicle.     \",\n        name: \"Workspace\",\n      },\n    ],\n  },\n  crew: {\n    type: [\"artificial\", \"gang\", \"squad\", \"staff\", \"techs\"],\n    tags: [\n      {\n        description:\n          \"Belongs to an existing Xeno or Evolved species, shares that species’ traits.\",\n        name: \"Alien\",\n      },\n      {\n        description:\n          \"Resists and makes use of chosen element (fire, ice, acid, dark, light, etc.).\",\n        name: \"Attuned\",\n      },\n      {\n        description:\n          \"Each member has an augmented sense, implanted armor, or grafted weapon.\",\n        name: \"Cybernetic\",\n      },\n      {\n        description:\n          \"Powerful, mysterious, and have their own inscrutable agenda.\",\n        name: \"Enigmatic\",\n      },\n      {\n        description:\n          \"Crew eventually rebuilds, reconstructs, or restores itself after harm/losses.\",\n        name: \"Regenerating\",\n      },\n      {\n        description: \"Able to perform minor rituals or assist in larger rites.\",\n        name: \"Spiritual\",\n      },\n      {\n        description:\n          \"Commanded into existence. Dismissed when their task is complete.\",\n        name: \"Summoned\",\n      },\n      {\n        description:\n          \"Their avatars automatically follow you into the SectorNet.\",\n        name: \"Virtual\",\n      },\n      {\n        description:\n          \"Dedicated to a cause. Will try to advance the cause when they have no orders.       \",\n        name: \"Zealots\",\n      },\n      {\n        description:\n          \"Choose a Class 1 Firearm. The crew is equipped with it and trained in its use.\",\n        name: \"Armed\",\n      },\n      {\n        description:\n          \"Able to bombard with artillery, turrets, or starship weaponry.\",\n        name: \"Artillery\",\n      },\n      {\n        description:\n          \"Graceful, swift, strong, and flexible. Much better than average, physically.\",\n        name: \"Athletic\",\n      },\n      {\n        description:\n          \"Chosen for their good looks and wit. Able to distract and entertain.\",\n        name: \"Beautiful\",\n      },\n      {\n        description:\n          \"Able to build small structures or assist in construction projects.\",\n        name: \"Builders\",\n      },\n      {\n        description:\n          \"Able to commit small-scale criminal activities or assist with larger crimes.\",\n        name: \"Criminal\",\n      },\n      {\n        description:\n          \"Choose a Kit. The crew carries various tools from that kit and can use them.\",\n        name: \"Equipped\",\n      },\n      {\n        description:\n          \"Never afraid or intimidated, will follow insane orders, but often go too far.\",\n        name: \"Fearless\",\n      },\n      {\n        description:\n          \"Imposing in some way. Able to frighten, threaten, dissuade, etc.\",\n        name: \"Imposing\",\n      },\n      {\n        description:\n          \"Able to collect information and report back, or pass on information.\",\n        name: \"Informants\",\n      },\n      {\n        description:\n          \"Only take orders from you. Quickly recover to their normal disposition\",\n        name: \"Loyal\",\n      },\n      {\n        description:\n          \"Able to service and maintain machinery, and assist in repairs and overhauls.\",\n        name: \"Mechanics\",\n      },\n      {\n        description:\n          \"Able to provide long-term convalescent care or assist in medical procedures.\",\n        name: \"Medics\",\n      },\n      {\n        description:\n          \"There are a large number of them, you have trouble keeping track of them all.\",\n        name: \"Numerous\",\n      },\n      {\n        description: \"Can work in harsh climates for extended periods of time.\",\n        name: \"Rugged\",\n      },\n      {\n        description:\n          \"Able to sneak into (or out of) places, and pass unnoticed.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Able to quickly load, unload, assemble, and pack away heavy objects/cargo.\",\n        name: \"Teamsters\",\n      },\n      {\n        description: \"Able to destroy terrain and structures.\",\n        name: \"Wreckers\",\n      },\n    ],\n  },\n  beast: {\n    type: [\"locomotion\", \"weapon\"],\n    tags: [\n      {\n        description:\n          \"Perfectly at home in the chosen environment. Can survive harsh climates.\",\n        name: \"Adaptation\",\n      },\n      {\n        description:\n          \"Resists and makes use of chosen element (fire, ice, acid, dark, light, etc.).\",\n        name: \"Attuned\",\n      },\n      {\n        description:\n          \"Impressive, aesthetically pleasing. Can distract, charm, and entertain.\",\n        name: \"Beautiful\",\n      },\n      {\n        description:\n          \"Share thoughts and emotions with their master and others with this bond.\",\n        name: \"Bond\",\n      },\n      {\n        description:\n          \"Choose a melee weapon upgrade. They attack with that upgrade.\",\n        name: \"Deadly\",\n      },\n      {\n        description: \"Causes property damage, harms vehicles.\",\n        name: \"Destructive\",\n      },\n      {\n        description:\n          \"Able to carry objects with their hands and perform simple manipulations.\",\n        name: \"Dextrous\",\n      },\n      {\n        description:\n          \"Harms shields, supernatural forces, magic, and incorporeal creatures.\",\n        name: \"Disruptive\",\n      },\n      {\n        description:\n          \"Constantly creates a chosen mental state (rage, bliss, focus, etc.).\",\n        name: \"Emotional\",\n      },\n      {\n        description:\n          \"Can carry or drag heavy burdens for extended periods of time.\",\n        name: \"Mighty\",\n      },\n      {\n        description:\n          \"Large. Can be ridden. Steered with +Influence or +Physique.\",\n        name: \"Mount\",\n      },\n      {\n        description:\n          \"New locomotion: slithering, leaping, climbing, swimming, flying, hovering.\",\n        name: \"Movement\",\n      },\n      {\n        description:\n          \"Several animals that work as a team. They take up more room and food.\",\n        name: \"Pack\",\n      },\n      {\n        description:\n          \"Choose a sense (sight, hearing, smell, vibration, etc.).It is extremely advanced.\",\n        name: \"Perception\",\n      },\n      {\n        description: \"Able to interpose themselves to protect others.\",\n        name: \"Protective\",\n      },\n      {\n        description: \"Camouflaged, silent, able to sneak and pass unnoticed.\",\n        name: \"Stealthy\",\n      },\n      {\n        description:\n          \"Commanded into existence. Dismissed when their task is complete.\",\n        name: \"Summoned\",\n      },\n      { description: \"Able to frighten or threaten.\", name: \"Terrifying\" },\n      {\n        description:\n          \"Very small. Can fit on a shoulder or in a pouch. (Cannot be a Mount).\",\n        name: \"Tiny\",\n      },\n      {\n        description: \"Can survive most harm with only minor injuries.\",\n        name: \"Tough\",\n      },\n      {\n        description:\n          \"Their avatars automatically follow you into the SectorNet.      \",\n        name: \"Virtual\",\n      },\n    ],\n  },\n};\n\nconst generateMeleeWeapon = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 2;\n  const tags = sampleSize(itemTraits.melee.tags, classLevel);\n  let switching;\n  if (tags.some((tags) => tags.name === \"Switching\")) {\n    switching = sampleSize(itemTraits.melee.tags, 2);\n  }\n  return {\n    classLevel,\n    tags,\n    type: \"melee\",\n    switching,\n  };\n};\nconst generateFirearm = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.firearm.tags, classLevel);\n  let switching;\n  if (tags.some((tags) => tags.name === \"Switching\")) {\n    switching = sampleSize(itemTraits.firearm.tags, classLevel);\n  }\n  return {\n    classLevel,\n    design: sample(itemTraits.firearm.types),\n    tags,\n    type: \"firearm\",\n    switching,\n  };\n};\nconst generateHeavyWeapon = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.firearm.tags, classLevel);\n  let switching;\n  if (tags.some((tags) => tags.name === \"Switching\")) {\n    switching = sampleSize(itemTraits.firearm.tags, 2);\n  }\n  return {\n    classLevel,\n    design: sample(itemTraits.firearm.types),\n    tags,\n    type: \"heavy\",\n    switching,\n  };\n};\nconst generateExplosive = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.explosive.tags, classLevel);\n  return {\n    classLevel,\n    design: sample(itemTraits.explosive.types),\n    tags,\n    type: \"explosive\",\n  };\n};\nconst generateArtillery = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.artillery.tags, classLevel);\n  let switching;\n  if (tags.some((tags) => tags.name === \"Switching\")) {\n    switching = sampleSize(itemTraits.firearm.tags, 2);\n  }\n  return {\n    classLevel,\n    tags,\n    type: \"artillery\",\n    switching,\n  };\n};\nconst generateAttire = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.attire.tags, classLevel);\n  return {\n    classLevel,\n    tags,\n    type: \"attire\",\n    design: sample(itemTraits.attire.type),\n  };\n};\nconst generateLandVehicle = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.landVehicle.tags, classLevel);\n  const tool = tags.some((t) => t.name === \"Tool\")\n    ? sample(itemTraits.melee.tags)\n    : undefined;\n  return {\n    classLevel,\n    tags,\n    tool,\n    type: \"landVehicle\",\n    design: sample(itemTraits.landVehicle.type),\n  };\n};\nconst generateFlyer = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.flyer.tags, classLevel);\n  const tool = tags.some((t) => t.name === \"Tool\")\n    ? sample(itemTraits.melee.tags)\n    : undefined;\n  return {\n    classLevel,\n    tags,\n    tool,\n    type: \"flyer\",\n    design: sample(itemTraits.flyer.type),\n  };\n};\nconst generateCrew = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.crew.tags, classLevel);\n  let armed;\n  return {\n    armed,\n    classLevel,\n    tags,\n    type: \"crew\",\n    design: sample(itemTraits.crew.type),\n  };\n};\nconst generateBeast = (itemClass?: number): GeneratedItem => {\n  const classLevel = itemClass ?? random(2) + 1;\n  const tags = sampleSize(itemTraits.beast.tags, classLevel);\n  const design = sample(itemTraits.beast.type);\n  let locomotion;\n  let weapon;\n  if (design === \"locomotion\") {\n    locomotion = sample([\n      \"slithering\",\n      \"leaping\",\n      \"climbing\",\n      \"swimming\",\n      \"gliding\",\n      \"hovering\",\n      \"flying\",\n    ]);\n  } else if (design === \"weapon\") {\n    weapon = sample(itemTraits.melee.tags);\n  }\n  return {\n    classLevel,\n    tags,\n    type: \"beast\",\n    design,\n    locomotion,\n    weapon,\n  };\n};\nexport const generateItemTraits = (itemType?: string, itemClass?: number) => {\n  const itemTypes = Object.keys(itemTraits);\n  let type = itemType ?? sample(itemTypes);\n  switch (type) {\n    case \"melee\":\n      return generateMeleeWeapon(itemClass);\n    case \"firearm\":\n      return generateFirearm(itemClass);\n    case \"heavy\":\n      return generateHeavyWeapon(itemClass);\n    case \"explosive\":\n      return generateExplosive(itemClass);\n    case \"artillery\":\n      return generateArtillery(itemClass);\n    case \"attire\":\n      return generateAttire(itemClass);\n    case \"landVehicle\":\n      return generateLandVehicle(itemClass);\n    case \"flyer\":\n      return generateFlyer(itemClass);\n    case \"crew\":\n      return generateCrew(itemClass);\n    case \"beast\":\n      return generateBeast(itemClass);\n    default:\n      break;\n  }\n};\n","import React, { FC, useState } from \"react\";\nimport { generateItemTraits, itemTraits, GeneratedItem } from \"./utils\";\nimport { startCase, uniqueId } from \"lodash\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const Controls = styled.div`\n  padding: 8px;\n`;\nexport const TagContainer = styled.div`\n  text-align: left;\n  display: flex;\n  justify-content: center;\n  padding: 8px;\n`;\nconst itemTypes = Object.keys(itemTraits);\n\nconst Items: FC = () => {\n  const [generatedItem, setGeneratedItem] = useState<\n    GeneratedItem | undefined\n  >();\n  const [selectedItemType, setSelectedItemType] = useState<\n    undefined | string\n  >();\n  const [selectedItemClass, setSelectedItemClass] = useState<\n    undefined | number\n  >();\n  const generateNewItem = (itemType?: string, classType?: number) => {\n    setGeneratedItem(generateItemTraits(itemType, classType));\n  };\n  const handleTypeChange = (event: any) => {\n    setSelectedItemType(event.target.value);\n  };\n  const handleClassChange = (event: any) => {\n    setSelectedItemClass(event.target.value);\n  };\n\n  return (\n    <section>\n      <Controls>\n        <Grid container justify=\"center\" spacing={4}>\n          <Grid item xs={6} sm={4} md={2}>\n            <FormControl fullWidth>\n              <InputLabel id=\"asset-type\">Type</InputLabel>\n              <Select labelId=\"asset-type\" onChange={handleTypeChange}>\n                <MenuItem value={undefined}>None</MenuItem>\n                {itemTypes.map((itemType) => (\n                  <MenuItem value={itemType}>{startCase(itemType)}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6} sm={4} md={1}>\n            <FormControl fullWidth>\n              <InputLabel id=\"asset-class\">Class</InputLabel>\n              <Select labelId=\"asset-class\" onChange={handleClassChange}>\n                <MenuItem value={undefined}>None</MenuItem>\n                {[1, 2, 3, 4].map((itemClass) => (\n                  <MenuItem value={itemClass}>{itemClass}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={12} md={3} alignItems=\"center\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              size=\"large\"\n              onClick={() =>\n                generateNewItem(selectedItemType, selectedItemClass)\n              }\n            >\n              Generate Item\n            </Button>\n          </Grid>\n        </Grid>\n      </Controls>\n      {generatedItem && (\n        <h2>\n          {startCase(generatedItem?.type)} (Class {generatedItem?.classLevel})\n        </h2>\n      )}\n      {generatedItem?.design && (\n        <>\n          <h3>{startCase(generatedItem.design)}</h3>\n          {generatedItem.design === \"locomotion\" && (\n            <p>{generatedItem.locomotion}</p>\n          )}\n          {generatedItem.design === \"weapon\" && (\n            <p>\n              <strong>{generatedItem.weapon?.name}:</strong>\n              {generatedItem.weapon?.description}\n            </p>\n          )}\n        </>\n      )}\n      <TagContainer>\n        <div>\n          {generatedItem?.tags.map((tag1) => (\n            <div key={uniqueId()}>\n              <p>\n                <strong>{tag1.name}:</strong> {tag1.description}\n              </p>\n              {tag1.name === \"Switching\" &&\n                generatedItem.switching &&\n                generatedItem.switching.map((tag2) => (\n                  <p>\n                    &#9;<strong>↳ {tag2.name}:</strong> {tag2.description}\n                  </p>\n                ))}\n              {tag1.name === \"Deadly\" &&\n                generatedItem.deadly &&\n                generatedItem.deadly.map((tag2) => (\n                  <p>\n                    <strong>↳ {tag2.name}:</strong> {tag2.description}\n                  </p>\n                ))}\n              {tag1.name === \"Armed\" && generatedItem.armed && (\n                <p>\n                  <strong>↳ {generatedItem.armed.name}:</strong>\n                  {generatedItem.armed.description}\n                </p>\n              )}\n              {tag1.name === \"Tool\" && generatedItem.tool && (\n                <p>\n                  <strong>↳ {generatedItem.tool.name}:</strong>\n                  {generatedItem.tool.description}\n                </p>\n              )}\n            </div>\n          ))}\n        </div>\n      </TagContainer>\n    </section>\n  );\n};\n\nexport default Items;\n","import { sample } from \"lodash\";\n\nexport interface Market {\n  type: string;\n  description: string;\n}\n\nexport const marketsTable: Market[] = [\n  {\n    description:\n      \"Highly competitive, cutting-edge market. Class 2 Assets available, Class 1 Assets commonplace, occasional Class 3 prototype. Advanced medical procedures (cybermods) performed regularly.\",\n    type: \"Advanced\",\n  },\n  {\n    description:\n      \"Vile, despicable, and dangerous market. Every Asset and service available for a price, no matter how illegal or depraved. Slave Crews indoctrinated with free Loyalty upgrade. \",\n    type: \"Brutal\",\n  },\n  {\n    description:\n      \"High demand for food, medical supplies, tools, and work vehicles. Few goods or services for sale, mostly Class 0 Assets and excess survival supplies.\",\n    type: \"Colonist\",\n  },\n  {\n    description:\n      \"Chaotic, unpredictable market. Eclectic selection of goods and services that changes from day to day. Mostly junk, but many Class 0 and Class 1 goods available. Diverse selection of Crews.\",\n    type: \"Crowded\",\n  },\n  {\n    description:\n      \"Isolated, independent market. Factions have no direct control of the market. Characters cannot call in Favors here. Equal parts trash and treasure.\",\n    type: \"Forlorn\",\n  },\n  {\n    description:\n      \"Cultural cross-roads market. Assets from the far reaches of the galaxy. Class 1 and Class 2 assets in a wide variety of cultural styles and variations. Non-humanoid Attire and Crew often available.\",\n    type: \"Galactic\",\n  },\n  {\n    description:\n      \"Meager market, with no real value. High demand for basic necessities, little to no profit or trade potential. Abundant Class 0 Crews. Occasional unique Asset, traded out of desperation.\",\n    type: \"Impoverished\",\n  },\n  {\n    description:\n      \"Bizarre, confusing, exotic market. No “normal” Assets, only strange, alien goods. Market likely to follow strange trading customs, or have unusual currency/measure of exchange.\",\n    type: \"Occult\",\n  },\n  {\n    description:\n      \"Primitive, archaic market. Deals uniquely in very low tech Assets (melee weapons, animals, etc.). High technology viewed with suspicion. No medical care beyond crude Patch Up.\",\n    type: \"Primal\",\n  },\n  {\n    description:\n      \"Market that caters to a specific in-group, rarely dealing with the unprivileged. All Assets are of superior craftsmanship, often have the Stylish upgrade. Class 2 Assets, occasional Class 3. No Class 0.\",\n    type: \"Privileged\",\n  },\n  {\n    description:\n      \"Abundance of manufactured goods. High demand for raw materials, processed materials and basic components. Class 0 Assets commonplace, all Class 1s readily available.\",\n    type: \"Productive\",\n  },\n  {\n    description:\n      \"A digital marketplace. Trades primarily in information. Data Points can be purchased through Acquisition (3 Data Points about a single subject). Goods ordered and fulfilled anonymously.\",\n    type: \"Programmed\",\n  },\n  {\n    description:\n      \"Strictly controlled market. All transactions are done through a regulatory body, usually a Faction. Extensive list of restricted and banned Assets and cargo types. Fill out form 76-F in triplicate.\",\n    type: \"Regimented\",\n  },\n  {\n    description:\n      \"Simple goods available, mostly Class 0 goods with a few Class 1s. Cargo types limited to natural resources, food, and hand-made items.\",\n    type: \"Rustic\",\n  },\n  {\n    description:\n      \"Religious, often theocratic market. Goods exchanged for religious services: blessings, prayers, healing, indulgences, political favor, etc. Blessed items and religious Crews available, though rare.\",\n    type: \"Spiritual\",\n  },\n];\n\nexport const generateMarket = (): Market | undefined => sample(marketsTable);\n","import React, { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Modal } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { generateMarket, Market, marketsTable } from \"./utils/uw-markets\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst Container = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nconst StyledModal = styled.div`\n  max-width: 500px;\n  background-color: #fff;\n  padding: 20px;\n  overflow-y: scroll;\n  position: revert;\n  margin: 2em 3em;\n  max-height: 80%;\n`;\n\nconst Markets: FC = () => {\n  const [generatedMarket, setGeneratedMarket] = useState<undefined | Market>();\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n\n  const handleOpen = () => {\n    setModalVisible(true);\n  };\n  const handleClose = () => {\n    setModalVisible(false);\n  };\n\n  const generateNewMarket = () => {\n    setGeneratedMarket(generateMarket());\n  };\n  return (\n    <Container>\n      <ButtonContainer>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          size=\"large\"\n          onClick={handleOpen}\n        >\n          View All\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={() => generateNewMarket()}\n        >\n          Generate Market\n        </Button>\n      </ButtonContainer>\n      <h2>{generatedMarket?.type}</h2>\n      <h3>{generatedMarket?.description}</h3>\n      <Modal\n        open={modalVisible}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <StyledModal>\n          <CloseIcon onClick={handleClose} />\n          {marketsTable.map((m) => (\n            <>\n              <h3 id=\"simple-modal-title\">{m.type}</h3>\n              <p id=\"simple-modal-description\">{m.description}</p>\n            </>\n          ))}\n        </StyledModal>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Markets;\n","import { times, sample } from \"lodash\";\n\nconst amountOfFloraTable = [\n  \"None\",\n  \"None\",\n  \"Sparse\",\n  \"Sparse\",\n  \"Sparse\",\n  \"Moderate\",\n  \"Moderate\",\n  \"Moderate\",\n  \"Dense\",\n  \"Dense\",\n  \"Dense\",\n  \"Overgrown\",\n];\nconst varietyOfFloraTable = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4];\n\nconst typeOfFloraTable = [\n  \"Grass\",\n  \"Grass\",\n  \"Lichen or Moss\",\n  \"Lichen or Moss\",\n  \"Lichen or Moss\",\n  \"Shrub\",\n  \"Shrub\",\n  \"Shrub\",\n  \"Fern\",\n  \"Fern\",\n  \"Fern\",\n  \"Climber or Vine\",\n  \"Climber or Vine\",\n  \"Tree\",\n  \"Tree\",\n  \"Cactus\",\n  \"Cactus\",\n  \"Fungus\",\n  \"Fungus\",\n  \"Exotic\",\n];\n\nconst floraSizeTable = [\n  \"Fine\",\n  \"Dimunitive\",\n  \"Tiny\",\n  \"Tiny\",\n  \"Small\",\n  \"Small\",\n  \"Small\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Large\",\n  \"Large\",\n  \"Large\",\n  \"Large\",\n  \"Huge\",\n  \"Huge\",\n  \"Gargantuan or bigger\",\n];\n\nconst relativeAmountTable = [-1, -1, -1, 0, 0, 0, 0, 0, 0, 1, 1, 1];\n\nconst threatTable = [\n  \"Helpful\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Minor Hazard\",\n  \"Minor Hazard\",\n  \"Minor Hazard\",\n  \"Major Hazard\",\n];\n\nconst floraQuirkTable = [\n  \"Self Destructs\",\n  \"Bioluminescence\",\n  \"Giant Fruit\",\n  \"Changes Color\",\n  \"Creates Noise\",\n  \"Moves Toward Light\",\n  \"Grows in Corpses\",\n  \"Grows on Other Plants\",\n  \"Hardened Exterior\",\n  \"Regenerates Damage\",\n  \"Reacts to Noise\",\n  \"Reacts to Motion\",\n  \"Reacts to Weather\",\n  \"Reacts to Time of Day\",\n  \"Blots out Light\",\n  \"Potent Smell\",\n  \"Carnivorous\",\n  \"Stores Water\",\n  \"Rock-like Appearance\",\n  \"Squirts Liquid\",\n];\n\nexport interface FloraBiome {\n  amount?: string;\n  typeCount?: number;\n  floraTypes?: FloraType[];\n}\n\nexport interface FloraType {\n  size?: string;\n  type?: string;\n  relativeAmount?: number;\n  quirk?: string;\n  threat?: string;\n}\n\nconst generateFloraType = (): FloraType => ({\n  size: sample(floraSizeTable),\n  quirk: sample(floraQuirkTable),\n  relativeAmount: sample(relativeAmountTable),\n  threat: sample(threatTable),\n  type: sample(typeOfFloraTable),\n});\n\nexport const generateFloraBiome = (): FloraBiome => {\n  const amount = sample(amountOfFloraTable);\n  if (amount === \"None\") {\n    return { amount };\n  }\n  const typeCount = sample(varietyOfFloraTable);\n  return {\n    amount,\n    typeCount,\n    floraTypes: times(typeCount ?? 1, () => generateFloraType()),\n  };\n};\n\n// export const generateNFloraBiomes = (count: number): FloraBiome[] => {\n//   return times(count, () => generateFloraBiome());\n// };\n","import { random, sample } from \"lodash\";\n\nconst getTechLevel = () => {\n  const dRoll = random(1, 22);\n  if (dRoll <= 10) return \"Stone Age\";\n  if (dRoll <= 14) return \"Bronze Age\";\n  if (dRoll <= 17) return \"Medieval Age\";\n  if (dRoll <= 19) return \"Steam Age\";\n  if (dRoll <= 20) return \"Industrial Age\";\n  if (dRoll <= 21) return \"Nuclear Age\";\n  return \"Space\";\n};\n\nconst attitudesTable = [\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Hostile\",\n  \"Fearful\",\n  \"Fearful\",\n  \"Fearful\",\n  \"Fearful\",\n  \"Fearful\",\n  \"Indifferent\",\n  \"Reverent\",\n  \"Friendly\",\n];\nconst valuesTable = [\n  \"Strength or Glory\",\n  \"Family or Kindness\",\n  \"Faith or Zealotry\",\n  \"Knowledge or Science\",\n  \"Equality or Balance\",\n  \"Pleasure or Hedonism\",\n];\n\nconst leadershipTable = [\n  \"Democratic\",\n  \"Democratic\",\n  \"Republican\",\n  \"Republican\",\n  \"Republican\",\n  \"Republican\",\n  \"Autocratic\",\n  \"Autocratic\",\n  \"Autocratic\",\n  \"Autocratic\",\n  \"Feudal\",\n  \"Feudal\",\n  \"Feudal\",\n  \"Feudal\",\n  \"Gerontocratic\",\n  \"Gerontocratic\",\n  \"Theocratic\",\n  \"Technocratic\",\n  \"Plutocratic\",\n  \"No Leadership or Anarchic\",\n];\n\nconst unityTable = [\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Many Warring Factions\",\n  \"Divided between a few Great Powers\",\n  \"Divided between a few Great Powers\",\n  \"Divided between a few Great Powers\",\n  \"Divided between two Great Powers\",\n  \"Divided between two Great Powers\",\n  \"United Species\",\n];\nconst religionTable = [\n  \"Animism\",\n  \"Animism\",\n  \"Animism\",\n  \"Animism\",\n  \"Animism\",\n  \"Polytheism\",\n  \"Polytheism\",\n  \"Polytheism\",\n  \"Polytheism\",\n  \"Polytheism\",\n  \"Monotheism\",\n  \"Monotheism\",\n  \"Monotheism\",\n  \"Monotheism\",\n  \"Monotheism\",\n  \"Animatism\",\n  \"Animatism\",\n  \"Ancestor Worship\",\n  \"God King or Personality Cult\",\n  \"Agnostic or Atheist\",\n];\nconst architectureTable = [\n  \"Simple\",\n  \"Heavily Engraved\",\n  \"Underground\",\n  \"Towering\",\n  \"Squat\",\n  \"Crude\",\n  \"Carved out of Material\",\n  \"Easily Moved\",\n  \"Cyclopean\",\n  \"Decadent\",\n  \"Organic\",\n  \"Nonexistent or Cave Men\",\n];\n\nconst artTable = [\n  \"Theatre\",\n  \"Theatre\",\n  \"Poetry\",\n  \"Poetry\",\n  \"Painting\",\n  \"Painting\",\n  \"Sculpting\",\n  \"Sculpting\",\n  \"Music\",\n  \"Dance\",\n  \"Clothing\",\n  \"Mask Making\",\n];\n\nconst themeTable = [\n  \"Cowboy\",\n  \"Samurai\",\n  \"Ninja\",\n  \"Pirate\",\n  \"Fascist\",\n  \"Communist\",\n  \"Libertarian\",\n  \"Mobster\",\n  \"Knight\",\n  \"Hippy\",\n  \"Conquistador\",\n  \"Viking\",\n  \"Aztec\",\n  \"Apache\",\n  \"Wuxia\",\n  \"Greco-Roman\",\n  \"Zulu\",\n  \"Mongol\",\n  \"Arabian\",\n  \"Merchant\",\n  \"Macho Man\",\n  \"Australian\",\n  \"American South\",\n];\n\nconst getTheme = () => {\n  const dRoll = random(11) + random(11);\n  return themeTable[dRoll];\n};\n\nexport interface Sentient {\n  architecture?: string;\n  art?: string;\n  attitude?: string;\n  techLevel?: string;\n  leadership?: string;\n  values?: string;\n  religion?: string;\n  unity?: string;\n  theme?: string;\n}\n\nexport const generateSentient = (): Sentient => {\n  const result: Sentient = {\n    values: sample(valuesTable),\n    architecture: sample(architectureTable),\n    unity: sample(unityTable),\n    theme: getTheme(),\n    attitude: sample(attitudesTable),\n    techLevel: getTechLevel(),\n    leadership: sample(leadershipTable),\n    religion: sample(religionTable),\n  };\n  if (random(1, 4) === 4) result.art = sample(artTable);\n  return result;\n};\n","import { random, sample, times, sampleSize } from \"lodash\";\nimport { Sentient, generateSentient } from \"./sf-sentients\";\n\nconst faunaAmountTable = [\n  \"None\",\n  \"None\",\n  \"Rare\",\n  \"Rare\",\n  \"Rare\",\n  \"Uncommon\",\n  \"Uncommon\",\n  \"Uncommon\",\n  \"Common\",\n  \"Common\",\n  \"Common\",\n  \"Teeming\",\n];\nconst faunaVarietyTable = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4];\n\nconst generateFaunaSubType = () => {\n  const dRoll = random(1, 100);\n  if (dRoll <= 15) return \"Arthopoid\";\n  if (dRoll <= 25) return \"Mammalian\";\n  if (dRoll <= 35) return \"Avian\";\n  if (dRoll <= 47) return \"Reptilian\";\n  if (dRoll <= 59) return \"Molluscoid\";\n  if (dRoll <= 67) return \"Fungoid\";\n  if (dRoll <= 75) return \"Plantoid\";\n  if (dRoll <= 95) return \"Ichthyoid\";\n  return \"Exotic\";\n};\n\nconst faunaSizeTable = [\n  \"Fine\",\n  \"Dimunitive\",\n  \"Tiny\",\n  \"Tiny\",\n  \"Small\",\n  \"Small\",\n  \"Small\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Medium\",\n  \"Large\",\n  \"Large\",\n  \"Large\",\n  \"Large\",\n  \"Huge\",\n  \"Huge\",\n  \"Gargantuan or bigger\",\n];\n\nconst relativeAmoutTable = [-1, -1, -1, 0, 0, 0, 0, 0, 0, 1, 1, 1];\n\nconst faunaThreatTable = [\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Harmless\",\n  \"Minor Threat\",\n  \"Minor Threat\",\n  \"Minor Threat\",\n  \"Minor Threat\",\n  \"Major Threat\",\n  \"Major Threat\",\n  \"Major Threat\",\n  \"Extreme Threat\",\n];\n\nconst faunaTemperamentTable = [\n  \"Uncaring\",\n  \"Uncaring\",\n  \"Uncaring\",\n  \"Skittish\",\n  \"Skittish\",\n  \"Skittish\",\n  \"Cautious\",\n  \"Cautious\",\n  \"Cautious\",\n  \"Cautious\",\n  \"Territorial\",\n  \"Territorial\",\n  \"Territorial\",\n  \"Volatile\",\n  \"Volatile\",\n  \"Predatory\",\n  \"Predatory\",\n  \"Predatory\",\n  \"Sadistic\",\n  \"Sadistic\",\n];\n\nconst groupingTable = [\n  \"Loner\",\n  \"Loner\",\n  \"Loner\",\n  \"Mating Pairs\",\n  \"Mating Pairs\",\n  \"Mating Pairs\",\n  \"Packs\",\n  \"Packs\",\n  \"Packs\",\n  \"Herds, Flocks or Swarms\",\n  \"Herds, Flocks or Swarms\",\n  \"Herds, Flocks or Swarms\",\n];\n\nconst locomotionTable = [\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Walking\",\n  \"Flying\",\n  \"Flying\",\n  \"Flying\",\n  \"Flying\",\n  \"Burrowing\",\n  \"Burrowing\",\n  \"Climbing\",\n  \"Climbing\",\n  \"Climbing\",\n  \"Slithering\",\n  \"Slithering\",\n  \"Hopping\",\n];\n\nconst quirkTable = [\n  \"Self Destructs\",\n  \"Bioluminescence\",\n  \"Potent Smell\",\n  \"Exceptionally Fast\",\n  \"Exceptionally Slow\",\n  \"Changes Color\",\n  \"Camouflaged\",\n  \"Webbing\",\n  \"Venomous\",\n  \"Spit Weapon\",\n  \"Gaze Weapon\",\n  \"Regenerates Damage\",\n  \"Amorphous\",\n  \"Shapeshifter\",\n  \"Heavily Armored\",\n  \"Mimicks Sounds\",\n  \"Breathe Weapon\",\n  \"Shapeshifter\",\n  \"Heavily Armored\",\n  \"Injects Live Young\",\n  \"Unusual Diet\",\n  \"Mind Affecting\",\n  \"Parasitic\",\n];\n\nexport interface FaunaType {\n  type?: string;\n  relativeAmount?: number;\n  size?: string;\n  threat?: string;\n  temperament?: string;\n  grouping?: string;\n  locomotion?: string;\n  quirk?: string;\n  isSentient?: boolean;\n  sentientDetails?: Sentient;\n}\n\nexport interface FaunaBiome {\n  basicFaunaTypes?: FaunaType[];\n  sentientFaunaTypes?: FaunaType[];\n  amount?: string;\n  variety?: number;\n}\n\nconst generateSentientCount = () => {\n  const dRoll = random(1, 100);\n  if (dRoll <= 79) return 0;\n  if (dRoll <= 97) return 1;\n  return 2;\n};\n\nexport const generateFaunaType = (\n  isSentient?: boolean,\n  isCreature?: boolean\n): FaunaType => {\n  let quirkString;\n  if (isCreature) {\n    quirkString = sampleSize(quirkTable, random(1, 4)).join(\", \");\n  } else {\n    quirkString =\n      random(11) === 11 ? quirkTable[random(11) + random(11)] : undefined;\n  }\n  return {\n    relativeAmount: sample(relativeAmoutTable),\n    locomotion: sample(locomotionTable),\n    quirk: quirkString,\n    size: sample(faunaSizeTable),\n    grouping: sample(groupingTable),\n    temperament: sample(faunaTemperamentTable),\n    type: generateFaunaSubType(),\n    threat: sample(faunaThreatTable),\n    sentientDetails: isSentient ? generateSentient() : undefined,\n  };\n};\nconst generateNFaunaTypes = (\n  count: number,\n  isSentient?: boolean\n): FaunaType[] => {\n  return times(count, () => generateFaunaType(isSentient));\n};\n\nexport const generateFaunaBiome = (): FaunaBiome => {\n  const amount = sample(faunaAmountTable);\n  if (amount === \"None\") {\n    return {\n      amount,\n      basicFaunaTypes: undefined,\n      sentientFaunaTypes: undefined,\n    };\n  }\n  const variety = sample(faunaVarietyTable) ?? 1;\n  let sentientCount = generateSentientCount();\n  if (sentientCount > variety) {\n    sentientCount = variety;\n  }\n\n  const basicFaunaCount = variety - sentientCount;\n  return {\n    amount: sample(faunaAmountTable),\n    variety,\n    basicFaunaTypes: generateNFaunaTypes(basicFaunaCount),\n    sentientFaunaTypes: generateNFaunaTypes(sentientCount, true),\n  };\n};\n","import { sample, random, times } from \"lodash\";\nimport { generateFloraBiome } from \"./sf-flora\";\nimport { generateFaunaBiome } from \"./sf-fauna\";\nimport { FaunaBiome } from \"./sf-fauna\";\nimport { FloraBiome } from \"./sf-flora\";\n\nexport const basicsTables = {\n  surfaceTypes: [\n    \"Ocean\",\n    \"Desert\",\n    \"Forest\",\n    \"Marsh\",\n    \"Hills\",\n    \"Mountains\",\n    \"Plains\",\n    \"Exotic\",\n  ],\n  undergroundTypes: [\n    \"Dry Tunnels\",\n    \"Dry Tunnels\",\n    \"Flooded Tunnels\",\n    \"Underocean\",\n    \"Underforest\",\n    \"Underhills\",\n    \"Volcanic\",\n    \"Exotic\",\n  ],\n  heat: [\n    \"-1 Heat Level\",\n    \"-1 Heat Level\",\n    \"No Change\",\n    \"No Change\",\n    \"No Change\",\n    \"+1 Heat Level\",\n    \"+1 Heat Level\",\n  ],\n  modifier: [\n    \"-2 Heat Level\",\n    \"+2 Heat Level\",\n    \"Fluctuating Heat Level\",\n    \"Covered in Crystals\",\n    \"Mobile Migrating Flora\",\n    \"Moving Biome\",\n    \"Unusual Liquids\",\n    \"Steam Vents\",\n    \"Glowing Soil or Rock\",\n    \"Unusual Elevation\",\n    \"Giant Rocks\",\n    \"Local Atmosphere\",\n    \"Irradiated\",\n    \"Thick Fog\",\n    \"Everything Tinted to a Color\",\n    \"Great Chasms\",\n    \"Tar Pits\",\n    \"Floating Islands\",\n    \"Sinkholes\",\n    \"Diseased\",\n    \"Full of Bones\",\n    \"Geysers\",\n    \"Craters\",\n    \"Petrified Flora\",\n    \"Negative Energy\",\n    \"Positive Energy\",\n    \"Airborne Hallucinogen\",\n    \"Unusual Soil or Rock\",\n    \"Tied to a Deity\",\n    \"Planar Taint\",\n    \"Oppressive Silence\",\n    \"Electromagnetic Interference\",\n    \"Surface Metal Deposits\",\n    \"Local Gravity\",\n  ],\n};\n\nexport interface Biome {\n  heat?: string;\n  modifier?: string;\n  type?: string;\n  flora: FloraBiome;\n  fauna: FaunaBiome;\n}\n\nexport const generateBiomeBasics = (\n  count: number,\n  biomeClass: \"surface\" | \"underground\"\n): Biome[] => {\n  return times(count, () => {\n    const modIdx = random(1, 12) + random(1, 12) + random(1, 12) - 1;\n    const types =\n      biomeClass === \"surface\"\n        ? basicsTables.surfaceTypes\n        : basicsTables.undergroundTypes;\n    return {\n      heat: sample(basicsTables.heat),\n      modifier: basicsTables.modifier[modIdx],\n      type: sample(types),\n      flora: generateFloraBiome(),\n      fauna: generateFaunaBiome(),\n    };\n  });\n};\n","import { random } from \"lodash\";\n\nconst pointsOfInterestTable = [\n  \"Crashed Starship\",\n  \"Crashed Satellite\",\n  \"Stranded Survivors\",\n  \"Alien Ruins\",\n  \"Alien Mural\",\n  \"Alien Monument\",\n  \"Outcast Camp\",\n  \"Criminal Base\",\n  \"Precious Material Deposit\",\n  \"Stashed Treasure\",\n  \"Divine Monument\",\n  \"Natural Wonder\",\n];\n\nexport const genPOI = () => {\n  const hasPOI = random(1) === 0;\n  if (!hasPOI) {\n    return;\n  } else {\n    const dRoll = random(11) + random(11);\n    return pointsOfInterestTable[dRoll];\n  }\n};\n","import { sample } from \"lodash\";\nimport { genPOI } from \"./sf-poi\";\n\nexport interface Planet {\n  temperature?:\n    | \"Extreme Cold\"\n    | \"Severe Cold\"\n    | \"Very Cold\"\n    | \"Cold\"\n    | \"Cool\"\n    | \"Warm\"\n    | \"Hot\"\n    | \"Very Hot\"\n    | \"Severe Heat\"\n    | \"Extreme Heat\";\n  gravity?: \"Normal\" | \"Low\" | \"High\";\n  atmosphere?: \"Normal\" | \"Thin\" | \"Thick\" | \"None\" | \"Corrosive\";\n  surfaceBiomeCount?: number;\n  undergroundBiomeCount?: number;\n  pointOfInterest?: string;\n}\n\nexport const planetTables = {\n  temperature: [\n    \"Extreme Cold\",\n    \"Severe Cold\",\n    \"Very Cold\",\n    \"Very Cold\",\n    \"Cold\",\n    \"Cold\",\n    \"Cool\",\n    \"Cool\",\n    \"Cool\",\n    \"Cool\",\n    \"Warm\",\n    \"Warm\",\n    \"Warm\",\n    \"Warm\",\n    \"Hot\",\n    \"Hot\",\n    \"Very Hot\",\n    \"Very Hot\",\n    \"Severe Heat\",\n    \"Extreme Heat\",\n  ],\n  gravity: [\n    \"Normal\",\n    \"Normal\",\n    \"Normal\",\n    \"Normal\",\n    \"Low\",\n    \"Low\",\n    \"High\",\n    \"High\",\n  ],\n  atmosphere: [\n    \"Normal\",\n    \"Normal\",\n    \"Normal\",\n    \"Normal\",\n    \"Thin\",\n    \"Thin\",\n    \"Thick\",\n    \"Thick\",\n    \"None\",\n    \"Corrosive or Toxic\",\n  ],\n  surfaceBiomeCount: [1, 1, 1, 2, 2, 3, 4],\n  undergroundBiomeCount: [1, 1, 1, 1, 2, 2, 2, 3],\n};\n\nexport const generatePlanet = (): Planet => ({\n  temperature: sample(planetTables.temperature) as any,\n  atmosphere: sample(planetTables.atmosphere) as any,\n  gravity: sample(planetTables.gravity) as any,\n  surfaceBiomeCount: sample(planetTables.surfaceBiomeCount),\n  undergroundBiomeCount: sample(planetTables.undergroundBiomeCount),\n  pointOfInterest: genPOI(),\n});\n","import React, { FC } from \"react\";\nimport { FloraType } from \"./utils/sf-flora\";\n\ninterface IProps {\n  flora: FloraType;\n}\n\nconst FloraView: FC<IProps> = ({ flora }) => {\n  const relativeAmountSymbol =\n    flora.relativeAmount && flora.relativeAmount > 0 ? \"(+)\" : \"(-)\";\n  return (\n    <>\n      <h5>\n        <strong>\n          {flora.size} {flora.type}\n        </strong>{\" \"}\n        [ {relativeAmountSymbol} | {flora.threat}{\" \"}\n        {flora.quirk && (\n          <>\n            | <em>{flora.quirk}</em>\n          </>\n        )}{\" \"}\n        ]\n      </h5>\n    </>\n  );\n};\n\nexport default FloraView;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FaunaType } from \"./utils/sf-fauna\";\n\ninterface IProps {\n  fauna: FaunaType;\n}\n\nexport const SentientSection = styled.div`\n  margin-left: 25px;\n  h5 {\n    margin: 2px 0;\n  }\n`;\n\nconst FaunaView: FC<IProps> = ({ fauna }) => {\n  const { sentientDetails } = fauna;\n  const relativeAmountSymbol =\n    fauna.relativeAmount && fauna.relativeAmount > 0 ? \"(+)\" : \"(-)\";\n  return (\n    <>\n      <h5 style={{ marginBottom: \"3px\" }}>\n        <strong>\n          {sentientDetails && \"★ \"}\n          {fauna.size} {fauna.type}\n        </strong>{\" \"}\n        [ {relativeAmountSymbol} | {fauna.threat} | {fauna.temperament} |{\" \"}\n        {fauna.locomotion} | {fauna.grouping}\n        {fauna.quirk && (\n          <>\n            {\" \"}\n            | <em>{fauna.quirk}</em>\n          </>\n        )}{\" \"}\n        ]\n      </h5>\n      <SentientSection>\n        {sentientDetails && (\n          <>\n            <h5>\n              <strong>Architecture</strong>: {sentientDetails.architecture}\n            </h5>\n            {sentientDetails.art && (\n              <h5>\n                <strong>Art</strong>: {sentientDetails.art}\n              </h5>\n            )}\n            <h5>\n              <strong>Attitude</strong>: {sentientDetails.attitude}\n            </h5>\n            <h5>\n              <strong>Leadership</strong>: {sentientDetails.leadership}\n            </h5>\n            <h5>\n              <strong>Religion</strong>: {sentientDetails.religion}\n            </h5>\n            <h5>\n              <strong>Tech</strong> Level: {sentientDetails.techLevel}\n            </h5>\n            <h5>\n              <strong>Theme</strong>: {sentientDetails.theme}\n            </h5>\n            <h5>\n              <strong>Unity</strong>: {sentientDetails.unity}\n            </h5>\n            <h5>\n              <strong>Values</strong>: {sentientDetails.values}\n            </h5>\n          </>\n        )}\n      </SentientSection>\n    </>\n  );\n};\n\nexport default FaunaView;\n","import { Divider } from \"@material-ui/core\";\nimport { uniqueId } from \"lodash\";\nimport React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Biome } from \"./utils\";\nimport FloraView from \"./Flora\";\nimport FaunaView from \"./Fauna\";\n\ninterface IProps {\n  biomeData: Biome;\n}\n\nexport const BiomeContainer = styled.div`\n  border: 1px lightgrey solid;\n  border-radius: 5px;\n  padding: 10px;\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nconst BiomeView: FC<IProps> = ({ biomeData }) => {\n  return (\n    <BiomeContainer>\n      <h3>\n        <u>\n          <strong>{biomeData.type}:</strong>{\" \"}\n          {biomeData.heat !== \"No Change\" && biomeData.heat} (\n          {biomeData.modifier})\n        </u>\n      </h3>\n      <h4>\n        Flora (<em>{biomeData.flora.amount}</em>)\n      </h4>\n      {biomeData.flora.amount !== \"None\" &&\n        biomeData.flora.floraTypes?.map((floraType) => (\n          <FloraView key={uniqueId()} flora={floraType} />\n        ))}\n      <Divider />\n      <h4>\n        Fauna (<em>{biomeData.fauna.amount}</em>)\n      </h4>\n      {biomeData.fauna.amount !== \"None\" && (\n        <>\n          {biomeData.fauna.basicFaunaTypes?.map((faunaType) => (\n            <FaunaView key={uniqueId()} fauna={faunaType} />\n          ))}\n          {biomeData.fauna.sentientFaunaTypes?.map((faunaType) => (\n            <FaunaView key={uniqueId()} fauna={faunaType} />\n          ))}\n        </>\n      )}\n    </BiomeContainer>\n  );\n};\n\nexport default BiomeView;\n","import React, { FC, useState, useEffect } from \"react\";\n\nimport { generateBiomeBasics, generatePlanet } from \"./utils\";\nimport { uniqueId } from \"lodash\";\nimport BiomeView from \"./Biome\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.section`\n  padding: 8px;\n`;\n\nconst Worlds: FC = () => {\n  const [generatedPlanet, setGeneratedPlanet] = useState(generatePlanet());\n  const { surfaceBiomeCount, undergroundBiomeCount } = generatedPlanet;\n  const [surfaceBiomes, setSurfaceBiomes] = useState<any[]>([]);\n  const [undergroundBiomes, setUndergroundBiomes] = useState<any[]>([]);\n\n  useEffect(() => {\n    setSurfaceBiomes(generateBiomeBasics(surfaceBiomeCount ?? 1, \"surface\"));\n    setUndergroundBiomes(\n      generateBiomeBasics(undergroundBiomeCount ?? 1, \"underground\")\n    );\n  }, [generatedPlanet, surfaceBiomeCount, undergroundBiomeCount]);\n\n  const generateNewPlanet = () => {\n    setGeneratedPlanet(generatePlanet());\n  };\n\n  const GeneratedComponent = (\n    <>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={7}>\n          <Grid key=\"atmospere\" item>\n            <p>\n              <strong>Atmosphere</strong>\n            </p>\n            <p>{generatedPlanet.atmosphere}</p>\n          </Grid>\n          <Grid key=\"gravity\" item>\n            <p>\n              <strong>Gravity</strong>\n            </p>\n            <p>{generatedPlanet.gravity}</p>\n          </Grid>\n          <Grid key=\"temperature\" item>\n            <p>\n              <strong>Temperature</strong>\n            </p>\n            <p>{generatedPlanet.temperature}</p>\n          </Grid>\n          {generatedPlanet.pointOfInterest && (\n            <Grid key=\"poi\" item>\n              <p>\n                <strong>POI</strong>\n              </p>\n              <p>{generatedPlanet.pointOfInterest}</p>\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n      <Grid container justify=\"space-around\" spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <h2>Surface Biomes</h2>\n          {surfaceBiomes.map((biome) => (\n            <BiomeView key={uniqueId()} biomeData={biome} />\n          ))}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <h2>Underground Biomes</h2>\n          {undergroundBiomes.map((biome) => (\n            <BiomeView key={uniqueId()} biomeData={biome} />\n          ))}\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        color=\"primary\"\n        onClick={generateNewPlanet}\n      >\n        Generate New Planet\n      </Button>\n      {GeneratedComponent}\n    </Container>\n  );\n};\n\nexport default Worlds;\n","import { sample } from \"lodash\";\n\nconst eventsTable = [\n  {\n    type: \"Rise of a leader or an era\",\n    subTable: [\n      \"Political\",\n      \"Religious\",\n      \"Military\",\n      \"Crime/underworld\",\n      \"Art/culture\",\n      \"Philosophy/learning,/agic\",\n    ],\n  },\n  {\n    type: \"Fall of a leader or an era\",\n    subTable: [\n      \"Political\",\n      \"Religious\",\n      \"Military\",\n      \"Crime/underworld\",\n      \"Art/culture\",\n      \"Philosophy/learning,/agic\",\n    ],\n  },\n  {\n    type: \"Cataclysmic disaster\",\n    subTable: [\n      \"Earthquake\",\n      \"Faminef drought\",\n      \"Fire\",\n      \"Flood\",\n      \"Plaguefdisease\",\n      \"Rain of fire (meteoric impact)\",\n      \"Storm (hurricane, tornado, tsunami)\",\n      \"Volcanic eruption\",\n      \"Magic gone awry or a planar warp\",\n      \"Divine judgment\",\n    ],\n  },\n  {\n    type: \"Assault or invasion\",\n    subTable: [\n      \"A criminal enterprise\",\n      \"Monsters or a unique monster\",\n      \"A planar threat\",\n      \"A past adversary reawakened, reborn, or resurgent\",\n      \"A splinter faction\",\n      \"A savage tribe\",\n      \"A secret society\",\n      \"A traitorous ally\",\n    ],\n  },\n  { type: \"Rebellion, revolution, overthrow\" },\n  {\n    type: \"Extinction or depletion\",\n    subTable: [\n      \"A kind of animal (insect , bird, fish, livestock)\",\n      \"Habitable land\",\n      \"Magic or magic-users (all magic, or specific kinds or schools of magic)\",\n      \"A mineral resource (gems, metals, ores)\",\n      \"A type of monster (unicorn, manticore, dragon)\",\n      \"A people (family line, clan, culture, race)\",\n      \"A kind of plant (crop, tree, herb, forest)\",\n      \"A waterway (river, lake, ocean)\",\n    ],\n  },\n  {\n    type: \"New organization\",\n    subTable: [\n      \"Crime syndicate/bandit confederacy\",\n      \"Guild (masons, apothecaries, goldsmiths)\",\n      \"Magical circle/society\",\n      \"Military/knightly order\",\n      \"New family dynasty/tribe/clan\",\n      \"Philosophy/discipline dedicated to a principle or ideal\",\n      \"Realm (village, town, duchy, kingdom)\",\n      \"Religion/sect/denomination\",\n      \"School/university\",\n      \"Secret society/cult/cabal\",\n    ],\n  },\n  {\n    type: \"Discovery, expansion, invention\",\n    subTable: [\n      \"Ancient ruin/lost city of a legendary race\",\n      \"Animal/monster/magical mutation\",\n      \"Invention/technology/magic (helpful, destructive)\",\n      \"New (or forgotten) god or planar entity\",\n      \"New (or rediscovered) artifact or religious relic\",\n      \"New land (island, continent, lost world, demiplane)\",\n      \"Otherworldly object (planar portal, alien spacecraft)\",\n      \"People (race, tribe, lost civilization, colony)\",\n      \"Plant (miracle herb, fungal parasite, sentient plant)\",\n      \"Resource or wealth (gold, gems, mithral)\",\n    ],\n  },\n  { type: \"Prediction, omen, prophecy\" },\n  {\n    type: \"Myth and legend\",\n    subTable: [\n      \"Rise of a leader or an era\",\n      \"Fall of a leader or an era\",\n      \"Cataclysmic disaster\",\n      \"Assault or invasion\",\n      \"Rebellion, revolution, overthrow\",\n      \"Extinction or depletion\",\n      \"New organization\",\n      \"Discovery, expansion, invention\",\n    ],\n  },\n  { type: \"Anniversary of a monarch's reign \" },\n  { type: \"Anniversary of an important event \" },\n  { type: \"Arena event\" },\n  { type: \"Arrival of a caravan or ship\" },\n  { type: \"Arrival of a circus\" },\n  { type: \"Arrival of an important NPC\" },\n  { type: \"Arrival of marching modrons\" },\n  { type: \"Artistic performance\" },\n  { type: \"Athletic event\" },\n  { type: \"Birth of a child\" },\n  { type: \"Birthday of an important NPC\" },\n  { type: \"Civic festival\" },\n  { type: \"Comet appearance\" },\n  { type: \"Commemoration of a past tragedy\" },\n  { type: \"Consecration of a new temple\" },\n  { type: \"Coronation\" },\n  { type: \"Council meeting\" },\n  { type: \"Equinox or solstice  \" },\n  { type: \"Execution\" },\n  { type: \"FertiIity festivaI\" },\n  { type: \"Full moon\" },\n  { type: \"Funeral\" },\n  { type: \"Graduation of cadets or wizards\" },\n  { type: \"Harvest festival\" },\n  { type: \"Holy day\" },\n  { type: \"Investiture of a knight or other noble\" },\n  { type: \"Lunar eclipse\" },\n  { type: \"Midsummer festival\" },\n  { type: \"Midwinter festival\" },\n  { type: \"Migration of monsters\" },\n  { type: \"Monarch's ball\" },\n  { type: \"New moon\" },\n  { type: \"New year\" },\n  { type: \"Pardoning of a prisoner\" },\n  { type: \"Planar conjunction\" },\n  { type: \"Planetary alignment\" },\n  { type: \"Priestly investiture\" },\n  { type: \"Procession of ghosts\" },\n  { type: \"Remembrance for soldiers lost in war \" },\n  { type: \"Royal address or proclamation\" },\n  { type: \"Royal audience day\" },\n  { type: \"Signing of a treaty\" },\n  { type: \"Solar eclipse\" },\n  { type: \"Tournament\" },\n  { type: \"Trial\" },\n  { type: \"Violent uprising\" },\n  { type: \"Wedding or wedding anniversary\" },\n];\n\nexport interface GeneratedEvent {\n  type?: string;\n  subType?: string;\n}\n\nexport const generateEvent = (): GeneratedEvent => {\n  const eventType = sample(eventsTable);\n  const subType = sample(eventType?.subTable);\n  return {\n    type: eventType?.type,\n    subType,\n  };\n};\n","import React, { FC, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { generateEvent, GeneratedEvent } from \"./utils\";\nimport { Button } from \"@material-ui/core\";\n\nexport const Container = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst Events: FC = () => {\n  const [generatedEvent, setGeneratedEvent] = useState<GeneratedEvent>(\n    generateEvent()\n  );\n  const generateNewEvent = () => {\n    setGeneratedEvent(generateEvent());\n  };\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewEvent}\n      >\n        Generate Event\n      </Button>\n      <h3>{generatedEvent.type}</h3>\n      <p>{generatedEvent.subType}</p>\n    </Container>\n  );\n};\n\nexport default Events;\n","import React, { FC, useState } from \"react\";\nimport FaunaView from \"./Fauna\";\nimport { generateFaunaType, FaunaType } from \"./utils/sf-fauna\";\nimport { Button } from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst Creatures: FC = () => {\n  const [generatedCreature, setGeneratedCreature] = useState<FaunaType>(\n    generateFaunaType(false, true)\n  );\n\n  const generateNewCreature = () => {\n    setGeneratedCreature(generateFaunaType(false, true));\n  };\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewCreature}\n      >\n        Generate Creature\n      </Button>\n      <FaunaView fauna={generatedCreature} />\n    </Container>\n  );\n};\n\nexport default Creatures;\n","import { random, sample } from \"lodash\";\n\nexport interface GeneratedSettlement {\n  raceRelation?: string;\n  rulerStatus?: string;\n  notableTrait?: string;\n  knownFor?: string;\n  calamity?: string;\n}\n\nconst settlementTables = {\n  getRacialRelatons: () => {\n    const dRoll = random(1, 20);\n    if (dRoll <= 10) return \"Harmony\";\n    if (dRoll <= 14) return \"Tension or rivalry\";\n    if (dRoll <= 16) return \"Racial majority are conquerors \";\n    if (dRoll === 17) return \"Racial minority are rulers\";\n    if (dRoll === 18) return \"Racial minority are refugees\";\n    if (dRoll === 19) return \"Racial majority oppresses minority \";\n    if (dRoll === 20) return \"Racial minority oppresses majority\";\n  },\n\n  getRulerStatus: () => {\n    const dRoll = random(1, 20);\n    if (dRoll <= 5) return \"Respected, fair, and just\";\n    if (dRoll <= 8) return \"Feared tyrant\";\n    if (dRoll === 9) return \"Weakling manipulated by others\";\n    if (dRoll === 10) return \"Illegitimate ruler, simmering civil war\";\n    if (dRoll === 11) return \"Ruled or controlled by a powerful monster\";\n    if (dRoll === 12) return \"Mysterious, anonymous cabal\";\n    if (dRoll === 13) return \"Contested leadership, open fighting\";\n    if (dRoll === 14) return \"Cabal seized power openly\";\n    if (dRoll === 15) return \"Doltish lout\";\n    if (dRoll === 16) return \"On deathbed, claimants compete for power\";\n    if (dRoll <= 18) return \"Iron-willed but respected\";\n    if (dRoll <= 20) return \"Religious leader\";\n  },\n  notableTraits: [\n    \"Canals in place of streets\",\n    \"Massive statue or monument\",\n    \"Grand temple\",\n    \"Large fortress\",\n    \"Verdant parks and orchards\",\n    \"River divides town\",\n    \"Major trade center\",\n    \"Headquarters of a powerful family or guild\",\n    \"Population mostly wealthy\",\n    \"Destitute , rundown\",\n    \"Awful smell (tanneries, open sewers)\",\n    \"Center of trade for one specific good\",\n    \"Site of many battles\",\n    \"Site of a mythic or magical event\",\n    \"Important library or archive\",\n    \"Worship of all gods banned\",\n    \"Sinister reputation\",\n    \"Notable library or academy\",\n    \"Site of important tomb or graveyard\",\n    \"Built atop ancient ruins\",\n  ],\n  knownFor: [\n    \"Delicious cuisine\",\n    \"Rude people\",\n    \"Greedy merchants\",\n    \"Artists and writers\",\n    \"Great herojsavior\",\n    \"Flowers\",\n    \"Hordes of beggars\",\n    \"Tough warriors\",\n    \"Dark magic\",\n    \"Decadence\",\n    \"Piet\",\n    \"Gambling\",\n    \"Godlessness\",\n    \"Education\",\n    \"Wine\",\n    \"High fashion\",\n    \"Political intrigue\",\n    \"Powerful guilds\",\n    \"Strong drink\",\n    \"Patriotis\",\n  ],\n  calamity: [\n    \"Suspected vampire infestation\",\n    \"New cult seeks converts\",\n    \"Important figure died (murder suspected) \",\n    \"War between rival thieves' guilds\",\n    \"Plague or famine (sparks riots) \",\n    \"Plague or famine (sparks riots) \",\n    \"Corrupt officials\",\n    \"Marauding monsters\",\n    \"Marauding monsters\",\n    \"Powerful wizard has moved into town\",\n    \"Economic depression (trade disrupted)\",\n    \"Flooding\",\n    \"Undead stirring in cemeteries\",\n    \"Prophecy of doom\",\n    \"Brink ofwar\",\n    \"Internal strife (leads to anarchy)\",\n    \"Besieged by enemies\",\n    \"Scandal threatens powerful families\",\n    \"Dungeon discovered (adventurers flock to town) \",\n    \"Religious sects struggle for power\",\n  ],\n};\n\nexport const generateSettlement = (): GeneratedSettlement => {\n  return {\n    raceRelation: settlementTables.getRacialRelatons(),\n    rulerStatus: settlementTables.getRulerStatus(),\n    notableTrait: sample(settlementTables.notableTraits),\n    knownFor: sample(settlementTables.knownFor),\n    calamity: sample(settlementTables.calamity),\n  };\n};\n","import React, { FC, useState } from \"react\";\nimport { GeneratedSettlement, generateSettlement } from \"./utils\";\nimport { Button } from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  text-align: left;\n`;\n\nconst Settlements: FC = () => {\n  const [generatedSettlement, setGeneratedSettlement] = useState<\n    GeneratedSettlement\n  >(generateSettlement);\n\n  const generateNewSettlement = () => {\n    setGeneratedSettlement(generateSettlement());\n  };\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewSettlement}\n      >\n        Generate Settlement\n      </Button>\n      <p>\n        <strong>Social Relations:</strong> {generatedSettlement.raceRelation}\n      </p>\n      <p>\n        <strong>Ruler Status:</strong> {generatedSettlement.rulerStatus}\n      </p>\n      <p>\n        <strong>Notable Traits:</strong> {generatedSettlement.notableTrait}\n      </p>\n      <p>\n        <strong>Known For:</strong> {generatedSettlement.knownFor}\n      </p>\n      <p>\n        <strong>Current Calamity:</strong> {generatedSettlement.calamity}\n      </p>\n    </Container>\n  );\n};\n\nexport default Settlements;\n","import { sample } from \"lodash\";\n\nconst goalsTable = [\n  \"Stop the dungeon's monstrous inhabitants from raiding the surface world.\",\n  \"Foil a villain's evil scheme.\",\n  \"Destroy a magical threat inside the dungeon.\",\n  \"Acquire treasure.\",\n  \"Find a particular item for a specific purpose.\",\n  \"Retrieve a stolen item hidden in the dungeon.\",\n  \"Find information needed for a special purpose.\",\n  \"Rescue a captive.\",\n  \"Discover the fate of a previous adventuring party.\",\n  \"Find an NPC who disappeared in the area.\",\n  \"Slay a dragon or some other challenging monster.\",\n  \"Discover the nature and origin of a strange location or phenomenon.\",\n  \"Pursue fleeing foes taking refuge in the dungeon.\",\n  \"Escape from captivity in the dungeon.\",\n  \"Clear a ruin so it can be rebuilt and reoccupied.\",\n  \"Discover why a villain is interested in the dungeon.\",\n  \"Win a bet or complete a rite of passage by surviving in the dungeon for a certain amount of time.\",\n  \"Parley with a villain in the dungeon.\",\n  \"Hide from a threat outside the dungeon.\",\n  \"Locate a dungeon or other site of interest (roll on the Dungeon Goals table to find out why).\",\n  \"Assess the scope of a natural or unnatural disaster. \",\n  \"Escort an NPC to a destination.\",\n  \"Arrive at a destination without being seen by the villain's forces.\",\n  \"Stop monsters from raiding caravans and farms.\",\n  \"Establish trade with a distant town.\",\n  \"Protect a caravan traveling to a distant town.\",\n  \"Map a new land.\",\n  \"Find a place to establish a colony.\",\n  \"Find a natural resource.\",\n  \"Hunt a specific monster.\",\n  \"Return home from a distant place.\",\n  \"Obtain information from a reclusive hermit.\",\n  \"Find an object that was lost in the wilds.\",\n  \"Discover the fate of a missing group of explorers. \",\n  \"Pursue fleeing foes.\",\n  \"Assess the size of an approaching army.\",\n  \"Escape the reign of a tyrant.\",\n  \"Protect a wilderness site from attackers.\",\n  \"Seize control of a fortified location such as a fortress, town, or ship.\",\n  \"Defend a location from attackers.\",\n  \"Retrieve an object from inside a secure location in a settlement.\",\n  \"Retrieve an object from a caravan.\",\n  \"Salvage an object or goods from a lost vessel or caravan.\",\n  \"Break a prisoner out ofa jail or prison camp. Escape from a jai l or prison camp.\",\n  \"Successfully travel through an obstacle course to gain recognition or reward.\",\n  \"Infiltrate a fortified location.\",\n  \"Find the source of strange occurrences in a haunted house or other location.\",\n  \"Interfere with the operation of a business.\",\n  \"Rescue a character, monster, or object from a natural or unnatural disaster.\",\n  \"Bring the villain to justice.\",\n  \"ClearthenameofaninnocentNPC.\",\n  \"Protect or hide an NPC.\",\n  \"Protect an object.\",\n  \"Discover the nature and origin of a strange phenomenon that might be the villain's doing.\",\n  \"Find a wanted fugitive.\",\n  \"Overthrow a tyrant.\",\n  \"Uncover a conspiracy to overthrow a ruler.\",\n  \"Negotiate peace between enemy nations or feuding families.\",\n  \"Secure aid from a ruler or council.\",\n  \"Help a villain find redemption.\",\n  \"Parley with a villain.\",\n  \"Smuggle weapons to rebel forces.\",\n  \"Stop a band of smugglers.\",\n  \"Gather intelligence on an enemy force.\",\n  \"Win a tournament.\",\n  \"Determine the villain's identity.\",\n  \"Locate a stolen item.\",\n  \"Make sure a wedding goes off without a hitch.\",\n];\n\nconst villainsTable = {\n  goalsTable: [\n    {\n      goal: \"Immortality\",\n      subGoals: [\n        \"Acquire a legendary item to prolong life\",\n        \"Ascend to godhood\",\n        \"Become undead or obtain a younger body\",\n        \"Steal a planar creature's essence\",\n      ],\n    },\n    {\n      goal: \"Influence\",\n      subGoals: [\n        \"Seize a position of power or title\",\n        \"Win a contest or tournament\",\n        \"Win favor with a powerful individu al\",\n        \"Place a pawn in a position of power\",\n      ],\n    },\n    {\n      goal: \"Magic\",\n      subGoals: [\n        \"Obtain an ancient artifact\",\n        \"Build a construct or magical device\",\n        \"Carry out a deity's wishes\",\n        \"Offer sacrifices to a deity\",\n        \"Contact a lost deity or power\",\n        \"Open a gate to another world\",\n      ],\n    },\n    {\n      goal: \"Mayhem\",\n      subGoals: [\n        \"Fulfill an apocalyptic prophecy\",\n        \"Enact the vengeful will of a god or patron \",\n        \"Spread a vile contagion\",\n        \"Overthrow a government\",\n        \"Trigger a natural disaster\",\n        \"Utterly destroy a bloodline or clan\",\n      ],\n    },\n\n    {\n      goal: \"Passion\",\n      subGoals: [\n        \"Prolong the life of a loved one\",\n        \"Prove worthy of another person's love\",\n        \"Raise or restore a dead loved one\",\n        \"Destroy rivals for another person's affection\",\n      ],\n    },\n    {\n      goal: \"Power\",\n      subGoals: [\n        \"Conquer a region or incite a rebellion\",\n        \"Seize control ofan army\",\n        \"Become the power behind the throne\",\n        \"Gain the favor of a ruler\",\n      ],\n    },\n    {\n      goal: \"Revenge\",\n      subGoals: [\n        \"Avenge a past humiliation or insult\",\n        \"Avenge a past imprisonment or injury\",\n        \"Avenge the death of a loved one\",\n        \"Retrieve stolen property and punish the thief\",\n      ],\n    },\n    {\n      goal: \"Wealth\",\n      subGoals: [\n        \"Control natural resources or trade\",\n        \"Marry into wealth\",\n        \"Plunder ancient ruins\",\n        \"Steal land , goods, or money\",\n      ],\n    },\n  ],\n  methodsTable: [\n    {\n      method: \"Agricultural\",\n      subMethod: [\"Blight\", \"Crop failure\", \"Drought\", \"Famine\"],\n    },\n    {\n      method: \"Assault or beatings\",\n    },\n    {\n      method: \"Bounty hunting or assassination\",\n    },\n\n    {\n      method: \"Captivity or coercion\",\n      subMethod: [\n        \"Bribery\",\n        \"Enticement\",\n        \"Eviction \",\n        \"Imprisonment \",\n        \"Kidnapping\",\n        \"Legal intimidation\",\n        \"Press gangs\",\n        \"Shackling\",\n        \"Slavery\",\n        \"Threats or harassment\",\n      ],\n    },\n    {\n      method: \"Confidence scams\",\n      subMethod: [\n        \"Breach of contract\",\n        \"Cheating\",\n        \"Fast talking\",\n        \"Fine print\",\n        \"Fraud or swindling\",\n        \"Quackery or tricks\",\n      ],\n    },\n    {\n      method: \"Defamation\",\n      subMethod: [\n        \"Framing\",\n        \"Gossiping or slander\",\n        \"Humiliation\",\n        \"Libel or insults\",\n      ],\n    },\n    {\n      method: \"Dueling Execution\",\n      subMethod: [\n        \"Beheading\",\n        \"Burning at the stake\",\n        \"Burying alive\",\n        \"Crucifi xion\",\n        \"Drawing and quartering\",\n        \"Hanging\",\n        \"Impalement\",\n        \"Sacrifice (living)\",\n      ],\n    },\n    { method: \"Impersonation or disguise\" },\n    { method: \"Lying or perjury\" },\n    {\n      method: \"Magical mayhem\",\n      subMethod: [\n        \"Hauntings\",\n        \"Illusions\",\n        \"Infernal bargains\",\n        \"Mind control\",\n        \"Petrification\",\n        \"Raising or animating the dead \",\n        \"Summoning monsters \",\n        \"Weather control\",\n      ],\n    },\n\n    {\n      method: \"Murder\",\n      subMethod: [\n        \"Assassination\",\n        \"Cannibalism\",\n        \"Dismemberment\",\n        \"Drowning\",\n        \"Electrocution\",\n        \"Euthanasia (involuntary)\",\n        \"Disease\",\n        \"Poisoning\",\n        \"Stabbing\",\n        \"Strangulation or suffocation \",\n      ],\n    },\n    { method: \"Neglect\" },\n    {\n      method: \"Politics\",\n      subMethod: [\n        \"Betrayal or treason\",\n        \"Conspiracy\",\n        \"Espionage or spying\",\n        \"Genocide\",\n        \"Oppression\",\n        \"Raising taxes\",\n      ],\n    },\n    {\n      method: \"Religion\",\n      subMethod: [\"Curses\", \"Desecration\", \"False gods\", \"Heresy or cults\"],\n    },\n    { method: \"Stalking\" },\n    {\n      method: \"Theft or Property Crime\",\n      subMethod: [\n        \"Arson\",\n        \"Blackmail or extortion\",\n        \"Burglary\",\n        \"Counterfeiting\",\n        \"Highway robbery\",\n        \"Looting\",\n        \"Mugging\",\n        \"Poaching\",\n        \"Seizing property\",\n        \"Smuggling\",\n      ],\n    },\n    {\n      method: \"Torture\",\n      subMethod: [\n        \"Acid\",\n        \"Blinding\",\n        \"Branding\",\n        \"Racking\",\n        \"Thumbscrews\",\n        \"Whipping\",\n      ],\n    },\n    {\n      method: \"Vice\",\n      subMethod: [\"Adultery\", \"Drugs or alcohol\", \"Gambling\", \"Seduction\"],\n    },\n    {\n      method: \"Warfare\",\n      subMethod: [\n        \"Ambush\",\n        \"Invasion\",\n        \"Massacre\",\n        \"Mercen aries\",\n        \"Rebellion\",\n        \"Terrorism\",\n      ],\n    },\n  ],\n};\n\nexport interface GeneratedQuest {\n  goal?: string;\n}\n\nexport interface GeneratedVillain {\n  goal?: string;\n  subGoal?: string;\n  method?: string;\n  subMethod?: string;\n}\n\nexport const generateQuest = (): GeneratedQuest => {\n  const goal = sample(goalsTable);\n  return { goal };\n};\n\nexport const generateVillain = (): GeneratedVillain => {\n  const goal = sample(villainsTable.goalsTable);\n  const method = sample(villainsTable.methodsTable);\n  return {\n    goal: goal?.goal,\n    method: method?.method,\n    subGoal: sample(goal?.subGoals),\n    subMethod: sample(method?.subMethod),\n  };\n};\n","import React, { FC, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  GeneratedQuest,\n  generateQuest,\n  generateVillain,\n  GeneratedVillain,\n} from \"./utils\";\n\nconst Container = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  button {\n    margin-bottom: 2em;\n  }\n`;\n\nconst Quests: FC = () => {\n  const [generatedQuest, setGeneratedQuest] = useState<GeneratedQuest>(\n    generateQuest()\n  );\n  const [generatedVillain, setGeneratedVillain] = useState<GeneratedVillain>(\n    generateVillain()\n  );\n  const generateNewQuest = () => {\n    setGeneratedQuest(generateQuest());\n  };\n  const generateNewVillain = () => {\n    setGeneratedVillain(generateVillain());\n  };\n  return (\n    <Container>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewQuest}\n      >\n        Generate Quest\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={generateNewVillain}\n      >\n        Generate Villain\n      </Button>\n      <h3>Quest goal</h3>\n      <p>{generatedQuest.goal}</p>\n      <h3>Villain</h3>\n      <h4>{generatedVillain.goal}</h4>\n      <p>{generatedVillain.subGoal}</p>\n      <h4>{generatedVillain.method}</h4>\n      <p>{generatedVillain.subMethod}</p>\n    </Container>\n  );\n};\n\nexport default Quests;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport {\n  Names,\n  Questions,\n  // Cities,\n  // Pinterest,\n  Factions,\n  Items,\n  Worlds,\n  Markets,\n  Events,\n} from \"./sections\";\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport Creatures from \"./sections/worlds/Creatures\";\nimport Settlements from \"./sections/settlement/Settlements\";\nimport Quests from \"./sections/quests/Quests\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction App() {\n  const [activeTabIndex, setActiveTabIndex] = useState<number>(0);\n  const handleChange = (event: any, newValue: number) => {\n    setActiveTabIndex(newValue);\n  };\n  console.log(activeTabIndex);\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Tabs\n          value={activeTabIndex}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Questions\" {...a11yProps(0)} />\n          <Tab label=\"Items\" {...a11yProps(1)} />\n          <Tab label=\"Worlds\" {...a11yProps(2)} />\n          <Tab label=\"Factions\" {...a11yProps(3)} />\n          <Tab label=\"Markets\" {...a11yProps(4)} />\n          <Tab label=\"Creatures\" {...a11yProps(5)} />\n          <Tab label=\"Names\" {...a11yProps(6)} />\n          <Tab label=\"Settlements\" {...a11yProps(7)} />\n          <Tab label=\"Events\" {...a11yProps(8)} />\n          <Tab label=\"Quests\" {...a11yProps(9)} />\n          {/* <Tab label=\"Cities\" {...a11yProps(7)} /> */}\n        </Tabs>\n      </AppBar>\n      <TabPanel value={activeTabIndex} index={0}>\n        <h1>Qs</h1>\n        <Questions />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={1}>\n        <h1>Items</h1>\n        <Items />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={2}>\n        <h1>Worlds</h1>\n        <Worlds />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={3}>\n        <h1>Factions</h1>\n        <Factions />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={4}>\n        <h1>Markets</h1>\n        <Markets />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={5}>\n        <h1>Creatures</h1>\n        <Creatures />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={6}>\n        <h1>Names</h1>\n        <Names />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={7}>\n        <h1>Settlements</h1>\n        <Settlements />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={8}>\n        <h1>Events</h1>\n        <Events />\n      </TabPanel>\n      <TabPanel value={activeTabIndex} index={9}>\n        <h1>Quests</h1>\n        <Quests />\n      </TabPanel>\n      {/* <TabPanel value={activeTabIndex} index={7}>\n        <h1>Cities</h1>\n        <Cities />\n      </TabPanel> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}